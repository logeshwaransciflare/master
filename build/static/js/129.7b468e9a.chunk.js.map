{"version":3,"sources":["views/corporate/Squad/winner/list/columns.js","views/corporate/Squad/winner/list/Table.js","views/corporate/Squad/winner/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/ui-loader/index.js","views/corporate/Squad/store/actions/index.js"],"names":["columns","name","minWidth","selector","sortable","cell","row","fixture","date_time","fixture_name","contest_id","contests","caption","entry_fee","u_id","rank","score","user","team_name","team_id","email","mobile","ContestsList","CustomHeader","currentPage","setCurrentPage","store","useSelector","state","rep","useState","winner_from","picker","setPicker","winner_to","dateto","setDateto","dispatch","useDispatch","className","Row","Col","Label","value","id","onChange","date","local","Date","datestring","getFullYear","getMonth","getDate","edittime","dat","edit","FormGroup","Button","Ripple","color","type","onClick","e","preventDefault","getcricketwinnerdata","winnerfrom","winnerto","onSubmit","xl","getcricketwinnerdownload","cricket_winner","console","log","searchTerm","listData","setListData","useEffect","isloading","Spinner","contestfrom","contestto","quizfrom","quizto","filterList","filter","userItem","contest_name","toLowerCase","includes","blocking","Card","noHeader","pagination","subHeader","responsive","paginationServer","paginationPerPage","paginationDefaultPage","sortIcon","paginationComponent","count","cricket_winner_perpage","last_page","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","data","filters","q","isFiltered","Object","keys","some","k","length","dataToRender","subHeaderComponent","rowsPerPage","UsersList","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","size","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","UILoader","props","children","loader","tag","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","from","to","url","http","get","then","response","getcricketquizdata","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","getcricketquizdownload","getAllSeries","records","getAllFixture","getplayerreport","seriesid","fixtureid","table","collectseriesid","collectfixtureid","getcricketplayerdownload","addfile","params","post","catch"],"mappings":"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","file":"static/js/129.7b468e9a.chunk.js","sourcesContent":["export const columns = [\n  {\n    name: 'Fixture Date',\n    minWidth: '20px',\n    selector: 'fixture.date_time',\n    sortable: true,\n    cell: (row) => row?.fixture.date_time\n  },\n  {\n    name: 'Fixture Name',\n    minWidth: '250px',\n    selector: 'fixture.fixture_name',\n    sortable: true,\n    cell: (row) => row?.fixture.fixture_name\n  },\n  {\n    name: 'Contest ID',\n    minWidth: '20px',\n    selector: 'contest_id',\n    sortable: true,\n    cell: (row) => row?.contest_id\n  },\n  {\n    name: 'Contest Name',\n    minWidth: '160px',\n    selector: 'contests.caption',\n    sortable: true,\n    cell: (row) => row.contests?.caption\n  },\n  {\n    name: 'Entry Fees',\n    minWidth: '160px',\n    selector: 'contests.entry_fee',\n    sortable: true,\n    cell: (row) => row.contests?.entry_fee\n  },\n  {\n    name: 'Total Entries',\n    minWidth: '160px',\n    selector: 'u_id',\n    sortable: true,\n    cell: (row) => row?.u_id\n  },\n  {\n    name: 'Winning Coins',\n    minWidth: '160px',\n    selector: 'id',\n    // sortable: true,\n    cell: () => \"-\"\n  },\n  {\n    name: 'Winning Merchandise',\n    minWidth: '160px',\n    selector: 'id',\n    // sortable: true,\n    cell: () => \"-\"\n  },\n  \n  {\n    name: 'Rank',\n    minWidth: '160px',\n    selector: 'rank',\n    sortable: true,\n    cell: (row) => row?.rank\n  },\n\n  {\n    name: 'Total Score',\n    minWidth: '160px',\n    selector: 'score',\n    sortable: true,\n    cell: (row) => row?.score\n  },\n  {\n    name: 'User Teamname',\n    minWidth: '160px',\n    selector: 'user.team_name',\n    sortable: true,\n    cell: (row) => row?.user.team_name\n  },\n  {\n    name: 'Team',\n    minWidth: '160px',\n    selector: 'team_id',\n    sortable: true,\n    cell: (row) => row?.team_id\n  },\n  \n  {\n    name: 'Email',\n    minWidth: '160px',\n    selector: 'user.email',\n    sortable: true,\n    cell: (row) => row?.user.email\n  },\n  {\n    name: 'Phone no.',\n    minWidth: '160px',\n    selector: 'user.mobile',\n    sortable: true,\n    cell: (row) => row?.user.mobile\n  }\n]\n","\n// export default ContestsList\nimport { Fragment, useState, useEffect } from 'react'\nimport UiLoader from '@components/ui-loader'\n// ** Invoice List Sidebar\n\n// ** Columns\nimport { columns } from './columns'\n// import AddQuiz from '../add'\nimport Flatpickr from 'react-flatpickr'\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport {\n  Card, \n  //Input,\n  Row,\n  Col,\n  Label,\n  FormGroup,\n  //Form,\n  //CustomInput,\n  Spinner,\n  Button\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport {\n  // getContestsListCSV,\n  getcricketwinnerdata,\n  getcricketwinnerdownload,\n  winnerfrom,\n  winnerto,\n  contestfrom,\n  contestto,\n  quizfrom,\n  quizto\n  //getfootballcontestdownload \n} from '../../store/actions'\n  \nconst ContestsList = () => {\n  // ** Store Vars\n  const CustomHeader = ({\n    //handleFilter,\n    //searchTerm,\n    currentPage,\n    setCurrentPage\n  }) => {\n    const store = useSelector((state) => state.rep)\n    const [picker, setPicker] = useState(store.winner_from)\n    const [dateto, setDateto] = useState(store.winner_to)\n  const dispatch = useDispatch()\n  const edittime = (date) => {\n    const local = new Date(date)\n    const datestring =  `${local.getFullYear()}-${(local.getMonth()) + 1}-${local.getDate()}`\n    setPicker(datestring)\n  }\n \n  const edit = (date) => {\n    const local = new Date(date)\n    const datestring =  `${local.getFullYear()}-${(local.getMonth()) + 1}-${local.getDate()}`\n    setDateto(datestring)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    setCurrentPage(1)\n    dispatch(getcricketwinnerdata(currentPage, picker, dateto))\n    dispatch(winnerfrom(picker))\n    dispatch(winnerto(dateto))\n  }\n    //curentpage\n    const download = () => {\n      dispatch(getcricketwinnerdownload())\n    }\n    return (\n      <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\n        <Row>\n        <Col  className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            \n            <Label className=\"mb-0\">From:</Label>&nbsp;&nbsp;\n            <Flatpickr\n                  value={store.winner_from}\n                  id='range-picker'\n                  className='form-control'\n                  //  value={picker}\n                  //  onChange={date => setPicker(date)}\n                  onChange={date => edittime(date)}\n      \n                 />\n         &emsp;&nbsp;\n            \n            <Label className=\"mb-0\">To:</Label>&nbsp;&nbsp;   \n            <Flatpickr\n                    value={store.winner_to}\n                    id='range-picker'\n                    className='form-control'\n                    onChange={dat => edit(dat)}\n                 /> \n             &emsp;&nbsp;\n                  <FormGroup className=\"d-flex mb-0\">\n                <Button.Ripple\n                  className=\"mr-1\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={(e) => onSubmit(e)}\n                >\n                  Submit\n                </Button.Ripple>\n          </FormGroup>  \n          </div>\n        </Col>\n          <Col\n            xl=\"6\"\n            className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\n          >\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1\">\n           \n            </div>\n                <Button\n                color ='primary'\n                onClick ={() => download()}\n                // onClick = {getfootballcontestdownload()}\n                >\n                  Download CSV\n                </Button>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n\n  const store = useSelector((state) => state.rep)\n  const {cricket_winner} = store\n  console.log(cricket_winner)\n  // ** States\n  const [searchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n   const dispatch = useDispatch()\nuseEffect(() => {\n    if (store.isloading) {\n      <Spinner/>\n    } else {\n      setListData(store.cricket_winner)\n    }\n  }, [store.isloading])\n\n  useEffect(() => {\n    dispatch(getcricketwinnerdata(currentPage, store.winner_from, store.winner_to))\n    dispatch(contestfrom(\"\"))\n    dispatch(contestto(\"\"))\n    dispatch(quizfrom(\"\"))\n    dispatch(quizto(\"\"))\n  }, [currentPage])\n\n  const handlePagination = (page) => {\n  \n    setCurrentPage(page.selected + 1)\n  }\n useEffect(() => {\n    if (searchTerm) {\n      const filterList = store.cricket_winner.filter((userItem) => {\n\n        if (userItem.contest_name) {\n          return userItem.contest_name.toLowerCase().includes(searchTerm.toLowerCase())\n        }\n      })\n\n      setListData(filterList)\n      setCurrentPage(1)\n    } else {\n      setListData(store.cricket_winner)\n    }\n  }, [searchTerm])\n\n  if (store.isloading) {\n    return (\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n        <UiLoader\n          blocking\n        />\n      </div>\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    // const count = Number(Math.ceil(listData.length / rowsPerPage))\n    //const count = store.cricket_contest_perpage.length\n    // const count = store.cricket_contest_perpage.filter(page => page.label !== \"&laquo; Previous\" && page.label !== 'Next &raquo;').length\n    const count = store.cricket_winner_perpage.last_page\n      //console.log(count)\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n \n    if (listData.length === 0 && isFiltered) {\n      return []\n    } else {\n      return listData\n    }\n  }\n\n  return (\n    \n   <Fragment>\n      <Card>  \n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          paginationPerPage\n          paginationDefaultPage={currentPage}\n          sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              //handlePerPage={handlePerPage}\n              rowsPerPage\n              searchTerm={searchTerm}\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              // handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n    </Fragment>\n   \n  )\n}\n\nexport default ContestsList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","import http from '../../../../../configs/httpConfig'\nimport { notifySuccessadd } from '../../../../Toast'\nexport const getAllContests = () => {\n  return async (dispatch) => {\n    await http.get('/admin_contests/list').then((response) => {\n      dispatch({\n        type: 'GET_ALL_CONTESTS',\n        data: response.data.data\n      })\n    })\n  }\n}\n\nexport const getContestsListPDF = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_pdf', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.pdf`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\nexport const getContestsListCSV = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_csv', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.csv`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\n//football\n\nexport const getcricketdatainit = () => ({\n    type: 'GET_ALL_REPORTS_INIT'\n  })\n  \nexport const getcricketcontestdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/contestReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/contestReport?page=${page}`\n        await http.get(url).then((response) => {\n        console.log(page, from, to)\n        console.log(response)\n        console.log(page)\n        dispatch({\n          type: 'GET_ALL_CONTEST_REPORTS',\n          data: response.data.data\n        })\n        console.log(response)\n      })\n    }\n  }\n\n  export const contestfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const contestto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_TO',\n        data:to\n      })\n    }\n  }\n\n  export const winnerfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const winnerto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_TO',\n        data:to\n      })\n    }\n  }\n\n  export const quizfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const quizto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_TO',\n        data:to\n      })\n    }\n  }\n  export const getcricketwinnerdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/winnerReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/winnerReport?page=${page}`\n      await http.get(url).then((response) => {\n        console.log(response)\n        dispatch({\n          type: 'GET_ALL_WINNERS_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  export const collectfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const collectto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_TO',\n        data:to\n      })\n    }\n  }\n\n  export const collectpage = (curentpage) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_PAGE',\n        data:curentpage\n      })\n    }\n  }\n  \n  export const getcricketquizdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/quizReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/quizReport?page=${page}`\n      await http.get(url).then((response) => {\n        dispatch({\n          type: 'GET_ALL_QUIZ_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  // export const getcricketcontestdownload = () => {\n  //   return async () => {\n  //     await http.get(`/cricket/reports/contestReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getcricketcontestdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/contestReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketwinnerdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/winnerReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'winnerReport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketquizdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/quizReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  // export const getcricketwinnerdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/winnerReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  // export const getcricketquizdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/quizReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getAllSeries = () => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get('/cricket/series/list').then((response) => {\n        dispatch({\n          type: 'SERIES_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data.records, \"this\")\n      })\n    }\n  }\n\n  export const getAllFixture = (id) => {\n    return async (dispatch) => {\n      console.log(id)\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/fixture/list/${id}`).then((response) => {\n        dispatch({\n          type: 'FIXTURE_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data)\n      })\n    }\n  }\n\n  export const getplayerreport = (seriesid, fixtureid) => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}`).then((response) => {\n        dispatch({\n          type: 'PLAYER_REPORT',\n          data: response.data.data\n        })\n        console.table(response.data.data)\n      })\n    }\n  }\n  export const collectseriesid = (seriesid) => {\n   \n    console.log(seriesid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_SERIESID',\n        data:seriesid\n      })\n    }\n  }\n  \n  export const collectfixtureid = (fixtureid) => {\n      console.log(fixtureid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FIXTUREID',\n        data:fixtureid\n      })\n    }\n  }\n\n//cricket/reports/playerReport?series_id=1&fixture_id=730&download=true\n  export const getcricketplayerdownload = (seriesid, fixtureid) => {\n    return async () => {\n            await http\n        .get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}&download=true`, { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'cricketplayerreport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getCricketContestadd = (id) => {\n    return (dispatch) => {\n      http\n        .post('/cricket/contest_prizes/list', id)\n        .then((response) => {\n          dispatch({\n            type: 'CRICKET_CONTEST_PRIZE_ADD',\n            data: response.data.data\n          })\n          console.log(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  export const addfile = (params) => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n      await http.post('/squadUpload', params).then((response) => {\n        notifySuccessadd(response.data.message)\n        dispatch({\n          type: 'ADD_FILE',\n          data: response.data.message\n        })\n      }).catch((e) => {\n        console.log(\"Error in Feed Post: \", e)\n        // dispatch(addPostFail())\n      })\n    }\n  }"],"sourceRoot":""}