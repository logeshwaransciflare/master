{"version":3,"sources":["views/banneruploaed/cricketbannerupload/list/Table.js","views/banneruploaed/cricketbannerupload/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/ui-loader/index.js","@core/components/app-collapse/index.js","views/banneruploaed/store/action/index.js","assets/images/boomer11sports/Cricket-yellow.svg"],"names":["DataTableTransaction","history","useHistory","dispatch","useDispatch","store","useSelector","state","banner","console","log","banner_list","useState","currentPage","setCurrentPage","dataPerPage","setDataPerPage","searchValue","setSearchValue","filteredData","setFilteredData","status","setStatus","useEffect","getbannerlistType","banner_status","columns","name","minWidth","selector","cell","row","pos","from","id","dense","src","assets_url","style","height","with","logo","width","marginLeft","sortable","position","type","className","CustomInput","onChange","bannertoggle","SwitchClick","inline","defaultChecked","active","title","onClick","push","pathname","viewbanner","editHandler","CustomPagination","count","last_page","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","data","isloading","blocking","size","content","Row","xl","Col","Label","for","Input","bsSize","value","e","target","updatedData","length","filter","item","startsWith","toLowerCase","toString","includes","placeholder","Card","accordion","sm","noHeader","paginationServer","customStyles","rows","minHeight","headCells","paddingLeft","paddingRight","cells","margin","sortIcon","paginationComponent","dataToRender","memo","UsersList","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","color","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","UILoader","props","children","loader","tag","overlayColor","Tag","classnames","backgroundColor","defaultProps","AppCollapse","toggle","titleKey","contentKey","openCollapse","setOpenCollapse","handleCollapseToggle","arr","index","indexOf","splice","map","collapsed","onMouseEnter","isOpen","getcricketSeries","a","http","get","then","response","getfootballSeries","post","catch","dataperPage","getfootballbannerlist","banneradd","err","editbanner","params","getcricketTotal","getfootballTotal"],"mappings":"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","file":"static/js/24.04fcbf6a.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect, memo } from 'react'\r\nimport UiLoader from '@components/ui-loader'\r\n// ** Table Columns\r\nimport logo from '../../../../assets/images/boomer11sports/Cricket-yellow.svg'\r\nimport AppCollapse from '@components/app-collapse'\r\n// ** Store & Actions\r\nimport { getbannerlistType, bannertoggle, viewbanner  } from '../../store/action' //cricketdeletebanner\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\n// import withReactContent from 'sweetalert2-react-content'\r\n// import Swal from 'sweetalert2' \r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown, Edit, Filter } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { Card, Input, Label, Row, Col, CustomInput } from 'reactstrap'\r\nconst DataTableTransaction = () => {\r\n  // const MySwal = withReactContent(Swal)\r\n  // ** Store Vars\r\nconst history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.banner)\r\n  \r\n  console.log(store.banner_list)\r\n  // ** States\r\n\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [dataPerPage, setDataPerPage] = useState(10)\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [filteredData, setFilteredData] = useState([])\r\n  const [status, setStatus] = useState(false)\r\n  \r\n  const SwitchClick = (row) => {  \r\n    setStatus(!status)         \r\n    dispatch(bannertoggle(row, status))   \r\n  }\r\n  \r\n  useEffect(() => {  \r\n    dispatch(getbannerlistType(currentPage, dataPerPage))\r\n  }, [currentPage, store.banner_status])\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1)\r\n    dispatch(getbannerlistType(1, dataPerPage))\r\n  }, [dataPerPage])\r\n    \r\n  // ** Get data on mount\r\n  // const handleConfirmText = (id) => {\r\n  //   return MySwal.fire({\r\n  //     title: 'Are you sure?',\r\n  //     text: \"You won't be able to revert this!\",\r\n  //     icon: 'warning',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonText: 'Yes, delete it!',\r\n  //     customClass: {\r\n  //       confirmButton: 'btn btn-primary',\r\n  //       cancelButton: 'btn btn-outline-danger ml-1'\r\n  //     },\r\n  //     buttonsStyling: false\r\n  //   }).then(function (result) {\r\n  //     if (result.value) {\r\n  //       dispatch(cricketdeletebanner(id))\r\n  //       console.log(id)\r\n  //       MySwal.fire({\r\n  //         icon: 'success',\r\n  //         title: 'Deleted!',\r\n  //         text: 'Your file has been deleted.',\r\n  //         customClass: {\r\n  //           confirmButton: 'btn btn-success'\r\n  //         }\r\n  //       })\r\n  //     }\r\n  //   })\r\n  // }\r\n  \r\n  const editHandler = (row) => {\r\n   \r\n    history.push({pathname:\"/banner/edit\"})\r\n    dispatch(viewbanner(row.id))\r\n    \r\n  }\r\n  \r\n  console.log()\r\n  console.log(store)\r\n\r\n  const customStyles = {\r\n    rows: {\r\n      style: {\r\n        minHeight: '102px' // override the row height\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        marginLeft:'20px',\r\n        paddingLeft: '8px', // override the cell padding for head cells\r\n        paddingRight: '8px'\r\n      }\r\n    },\r\n    cells: {\r\n      style: {\r\n        margin:'30px 10px',\r\n        paddingLeft: '8px', // override the cell padding for data cells\r\n        paddingRight: '8px'\r\n      }\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: '#',\r\n      minWidth: '10px',\r\n      selector: '#',\r\n      cell: (row, pos) => (`#${store.banner_list.from + pos}`)\r\n    }, \r\n    {\r\n      name: 'Banner',\r\n      id:'banner',\r\n      minWidth: '200px',\r\n      dense: true,\r\n      selector: 'banner_image',\r\n      cell: (row) => (\r\n        <img src={row.assets_url} style={{ height: '80px', with: '180px'}} />\r\n      )\r\n    },\r\n    {\r\n      name: 'Sports',\r\n      minWidth: '20px',\r\n      selector: 'sports',    \r\n      cell: () => (\r\n        <img src={logo} style={{ height: '40px', width: '40px', marginLeft:'30px'}} />\r\n        // <img src={require('../../../../assets/images/boomer11sports/Cricket-yellow.svg')} style={{ height: '300', width: '100px'}} />\r\n      )\r\n    },  \r\n    {\r\n      name: 'Position',\r\n      minWidth: '20px',\r\n      selector: 'position',\r\n      sortable: true,\r\n      cell: (row) => row.position\r\n    },\r\n    {\r\n      name: 'Screen',\r\n      minWidth: '20px',\r\n      selector: 'type',\r\n      sortable: true,\r\n      cell: (row) => row.type\r\n    },\r\n    {\r\n      name: 'Status',\r\n      minWidth: '138px',\r\n      selector: 'active',\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <div className=\"column-action\">\r\n          {            \r\n            (\r\n              <CustomInput \r\n            className='custom-control-success'\r\n            type='switch'\r\n            id={`success${row.id}`}\r\n            name='success'\r\n            onChange={() => SwitchClick(row.id)}\r\n            inline\r\n            defaultChecked = {row.active !== 0}\r\n          />\r\n            ) \r\n          }                 \r\n        </div>\r\n      )\r\n    }, \r\n    {\r\n      name: 'Action',\r\n      minWidth: '138px',\r\n      selector: 'active',\r\n      cell: (row) => (\r\n        <div className=\"column-action\">\r\n          {/* <a href={`/walls/edit/${row.feed_id}`}> */}\r\n          <Edit width=\"17\" className=\"cursor-pointer\" title=\"Edit Banner\" onClick={() => editHandler(row)} />\r\n          {/* </a> */}\r\n          {/* <Trash2 width=\"17\" className=\"ml-2 cursor-pointer\" title=\"Add Feed\" onClick={() => handleConfirmText(row.id)} /> */}\r\n        </div>\r\n      )\r\n    }    \r\n  ]\r\n  // ** Function to handle filter\r\n  const handleFilter = e => {\r\n    const value = e.target.value\r\n    let updatedData = []\r\n    setSearchValue(value)\r\n    if (value.length) {\r\n      updatedData = store.banner_list.data.filter(item => {        \r\n        console.log(item)\r\n       const startsWith =\r\n          item.type?.toLowerCase().startsWith(value.toLowerCase()) ||\r\n           item.position?.toString().toLowerCase().startsWith(value.toLowerCase()) \r\n          // item.debit_credit?.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          // date?.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n          // item.transaction_type?.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          // item.txn_id.toLowerCase()?.startsWith(value.toLowerCase())\r\n\r\n        const includes =\r\n          item.type?.toLowerCase().includes(value.toLowerCase()) ||\r\n           item.position?.toString().toLowerCase().includes(value.toLowerCase()) \r\n          // item.debit_credit?.toLowerCase().includes(value.toLowerCase()) ||\r\n          // date?.toString().toLowerCase().includes(value.toLowerCase()) ||\r\n          // item.transaction_type?.toLowerCase().includes(value.toLowerCase()) ||\r\n          // item.txn_id?.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWith) {\r\n          return startsWith\r\n        } else if (!startsWith && includes) {\r\n          return includes\r\n        } else return null\r\n      })\r\n      setFilteredData(updatedData)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle Pagination and get data\r\n\r\n  const handlePagination = page => {\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function to handle per page\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n\r\n     const count = store.banner_list.last_page\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        breakLabel='...'\r\n        pageCount={count}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={2}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        breakClassName='page-item'\r\n        breakLinkClassName='page-link'\r\n        containerClassName={\r\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\r\n        }\r\n      />\r\n    )\r\n  }\r\nconsole.log(store.banner_list.data)\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    if (store.banner_list.data?.length > 0) {\r\n      return searchValue.length ? filteredData : store.banner_list.data\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  if (store.isloading) {   \r\n    return (\r\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\r\n        <UiLoader\r\n          blocking\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const data = [\r\n    {\r\n      title: <div><Filter size={18}/> Filter</div>,\r\n      content: (\r\n        <Row xl={12}>\r\n          <Col\r\n          xl=\"12\"\r\n          className=\"d-flex align-items-sm-center justify-content justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1 ml-1\">\r\n            <Label className=\"mb-0 mr-1\" for=\"search-invoice\">\r\n              Search:\r\n            </Label>\r\n            <Input\r\n              className='dataTable-filter'\r\n              type='text'\r\n              bsSize='sm'\r\n              id='search-input'\r\n              value={searchValue}\r\n              onChange={handleFilter}\r\n              placeholder='search...'\r\n            />\r\n          </div>\r\n          \r\n       </Col>\r\n        </Row>\r\n      )\r\n    }\r\n  ]\r\n \r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n      <AppCollapse data={data} type='border' accordion />\r\n      </Card>\r\n     \r\n      <Card>\r\n       <Row className='mx-0 mt-1 mb-50'>\r\n          <Col sm='6'>\r\n            <div className='d-flex align-items-center'>\r\n              <Label for='sort-select'>show</Label>\r\n              <Input\r\n                className='dataTable-select'\r\n                type='select'\r\n                id='sort-select'\r\n                value={dataPerPage}\r\n                onChange={e => setDataPerPage(e.target.value)}\r\n              >\r\n                <option value={10}>10</option>\r\n                <option value={50}>50</option>\r\n                <option value={100}>100</option>\r\n              </Input>\r\n              <Label for='sort-select'>entries</Label>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <DataTable\r\n          noHeader\r\n          // pagination\r\n          paginationServer\r\n          customStyles={customStyles}\r\n          className='react-dataTable'\r\n          columns={columns}\r\n          sortIcon={<ChevronDown size={10} />}\r\n          paginationComponent={CustomPagination}\r\n          data={dataToRender()}\r\n        />\r\n      </Card>\r\n      {\r\n        store.banner_list.data?.length === 0 ? '' : <CustomPagination />\r\n      } \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(DataTableTransaction)\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UsersList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { ChevronUp } from 'react-feather'\r\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\r\n\r\nconst AppCollapse = props => {\r\n  // ** Props\r\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\r\n\r\n  /**\r\n   ** If accordion is true then return only one active index else return an Array\r\n   */\r\n  const defaultActive = () => {\r\n    if (accordion) {\r\n      return active\r\n    } else {\r\n      return [...active]\r\n    }\r\n  }\r\n\r\n  // ** State\r\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\r\n\r\n  // ** Function to handle Collapse Toggle\r\n  const handleCollapseToggle = id => {\r\n    if (accordion) {\r\n      if (id === openCollapse) {\r\n        setOpenCollapse(null)\r\n      } else {\r\n        setOpenCollapse(id)\r\n      }\r\n    } else {\r\n      const arr = openCollapse,\r\n        index = arr.indexOf(id)\r\n      if (arr.includes(id)) {\r\n        arr.splice(index, 1)\r\n        setOpenCollapse([...arr])\r\n      } else {\r\n        arr.push(id)\r\n        setOpenCollapse([...arr])\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to render collapse\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const title = titleKey ? item[titleKey] : item.title,\r\n        content = contentKey ? item[contentKey] : item.content\r\n\r\n      return (\r\n        <Card\r\n          className={classnames('app-collapse', {\r\n            [item.className]: item.className,\r\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\r\n          })}\r\n          key={index}\r\n        >\r\n          <CardHeader\r\n            className={classnames('align-items-center', {\r\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\r\n            })}\r\n            /*eslint-disable */\r\n            {...(toggle === 'hover'\r\n              ? {\r\n                  onMouseEnter: () => handleCollapseToggle(index)\r\n                }\r\n              : {\r\n                  onClick: () => handleCollapseToggle(index)\r\n                })}\r\n            /*eslint-enable */\r\n          >\r\n            <CardTitle className='collapse-title'>{title}</CardTitle>\r\n            <ChevronUp size={14} />\r\n          </CardHeader>\r\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\r\n            <CardBody>{content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('collapse-icon', {\r\n        [className]: className,\r\n        'collapse-default': !type,\r\n        'collapse-shadow': type === 'shadow',\r\n        'collapse-border': type === 'border',\r\n        'collapse-margin': type === 'margin'\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCollapse\r\n\r\n// ** PropTypes\r\nAppCollapse.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  accordion: Proptypes.bool,\r\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\r\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\r\n  titleKey: Proptypes.string,\r\n  contentKey: Proptypes.string,\r\n  className: Proptypes.string\r\n}\r\n\r\n// ** Default Props\r\nAppCollapse.defaultProps = {\r\n  active: [],\r\n  toggle: 'click'\r\n}\r\n","import http from '../../../../configs/httpConfig'\nimport {notifyError, notifySuccessadd} from \"../../../Toast\"\n\n//banner upload\n\nexport const getAllbannerDataInit = () => ({\n  type: 'GET_ALL_BANNER_DATA_INIT'\n})\n\nexport const getAllbannerDataFail = () => ({\n  type: 'GET_ALL_BANNER_DATA_FAIL'\n})\n\n//cricket series\nexport const getcricketSeries = () => {\n \n  return async (dispatch) => {\n   await http.get('/cricket/series/list').then((response) => {\n    \n      dispatch({\n        type: 'CRICKET_SERIES_NAME',\n        data: response.data.data\n      })\n      console.log(response.data.data, \"this\")\n    })\n  }\n}\n//football series\nexport const getfootballSeries = () => {\n \n  return async (dispatch) => {\n   await http.get('/football/series/list').then((response) => {\n\n      dispatch({\n        type: 'FOOTBAL_SERIES_NAME',\n        data: response.data.data\n      })\n      console.log(response.data.data, \"this\")\n    })\n  }\n}\n//cricket series id\n\nexport const collectcricketseriesid = (seriesid) => {\n   \n  console.log(seriesid)\n  return (dispatch) => {\n    dispatch(getAllbannerDataInit())\n    dispatch({\n      type:'COLLECT_CRIC_SERIESID',\n      data:seriesid\n    })\n  }\n}\n\n\nexport const getbannerlist = (page) => {\n  \n  return async (dispatch) => {\n    dispatch(getAllbannerDataInit())\n    await http.get(`/banner/list?page=${page}`).then((response) => {\n      console.log(response)\n      dispatch({\n        type: 'GET_ALL_BANNER_LIST',\n        data: response.data.data\n      })\n    }).catch(() => {\n     // console.log(e)\n      dispatch(getAllbannerDataFail())\n    }) \n  } \n}\n\nexport const bannertoggle = (id, status) => {\n    return async (dispatch) => {\n      dispatch(getAllbannerDataInit())    \n      await http.post(`/banner/toggle_active/${id}`).then((response) => {   \n        notifySuccessadd(response.data.message)                  \n        dispatch({\n          type: 'BANNER_TOGGLE_STATUS',\n          data: status\n        }) \n        console.log(status)         \n      }).catch((e) => {\n        notifyError(e.message)\n        console.log(\"Error in Feed Post: \", e)\n        \n      })\n    }\n  }\n\nexport const getbannerlistType = (page, dataperPage = '') => {\n  return async (dispatch) => {\n     dispatch(getAllbannerDataInit())\n    await http.get(`/banner/list?page=${page}&sports=cricket&limit=${dataperPage}`).then((response) => {  \n                 \n      dispatch({\n        type: 'GET_ALL_BANNER_TYPE',\n        data: response.data.data\n      })\n    }).catch(() => {\n      dispatch(getAllbannerDataFail())\n    })\n  } \n}\n\nexport const getfootballbannerlist = (page,  dataperPage = '') => {\n  //banner/list?sports=\"cricket\"\n  return async (dispatch) => {\n     dispatch(getAllbannerDataInit())\n    await http.get(`/banner/list?page=${page}&sports=football&limit=${dataperPage}`).then((response) => {  \n           \n      console.log(response.data.data)\n      dispatch({\n        type: 'GET_FOOTBALL_BANNER_LIST',\n        data: response.data.data\n      })\n    }).catch(() => {\n     // console.log(e)\n      dispatch(getAllbannerDataFail())\n    })\n  } \n}\n\nexport const banneradd = (banner) => {\n  return (dispatch) => {\n    http\n    .post('/banner/add', banner)\n    .then((response) => {\n      notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'BANNER_ADD',\n        data: response.data\n      })    \n    })\n    .catch((err) => {\n      notifyError(err.message)\n      \n     })\n  }\n}\n\nexport const editPostData = (params) => ({\n  type: 'EDIT_POST_DATA',\n  data: params\n})\n\n\nexport const viewbanner = (id) => {\n\n  return async (dispatch) => {\n    dispatch(getAllbannerDataInit())\n    await http.get(`/banner/${id}`).then((response) => {\n      notifySuccessadd(response.data.message)\n      console.log(\"Respont : \", response)\n      dispatch({\n        type: 'GET_BANNER_VIEW',\n        data: response.data.data\n      })\n    }).catch((e) => {\n      console.log(\"Error in View banner: \", e)\n    \n    })\n  }\n}\n\nexport const editbanner = (id, params) => {\n  return async (dispatch) => {\n  dispatch(getAllbannerDataInit())\n    await http.post(`/banner/update/${id}`, params).then((response) => {\n      notifySuccessadd(response.data.message)\n    console.log(\"Respont : \", response)\n      dispatch({\n        type: 'EDIT_BANNER_POST',\n        data: response.data\n      })\n    }).catch((err) => {\n      notifyError(err.message)\n    \n    })\n  }\n}\nexport const deletebanner = (id) => {\n  return (dispatch) => {\n     return http.delete(`/banner/delete/${id}`).then((response) => {\n       console.log(id)\n       dispatch({ type: 'DELETE_CRICKET_BANNER', data: response.data.data })\n       dispatch(getbannerlistType())\n     })\n   }\n }\n export const footballdeletebanner = (id) => {\n  return (dispatch) => {\n     return http.delete(`/football/banner/delete/${id}`).then((response) => {\n       dispatch({ type: 'DELETE_FOOTBALL_BANNER', data: response.data.data })\n       dispatch(getfootballbannerlist())\n       dispatch(getfootballbannerlist())\n     })\n   }\n }\n\n export const getcricketTotal = (page) => {\n  console.log(page)\n  return async (dispatch) => {\n    // dispatch(getteamsdatainit())\n    await http.get(`/cricket/series/list?page=${page}`).then((response) => {\n      dispatch({\n        type: 'CRICKET_SERIES_TOTAL',\n        data: response.data\n      })\n      console.log(response.data, \"this\")\n    })\n  }\n}\n\nexport const getfootballTotal = (page) => {\n  console.log(page)\n  return async (dispatch) => {\n    // dispatch(getteamsdatainit())\n    await http.get(`/football/series/list?page=${page}`).then((response) => {\n      dispatch({\n        type: 'FOOTBALL_SERIES_TOTAL',\n        data: response.data\n      })\n      console.log(response.data, \"this\")\n    })\n  }\n}\n","export default __webpack_public_path__ + \"static/media/Cricket-yellow.97ee075a.svg\";"],"sourceRoot":""}