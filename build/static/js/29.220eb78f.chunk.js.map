{"version":3,"sources":["views/Quiz/quizlist/basketball/list/columns.js","views/Quiz/quizlist/basketball/list/Table.js","views/Quiz/quizlist/basketball/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/ui-loader/index.js","views/Quiz/store/action/index.js"],"names":["columns","name","minWidth","selector","sortable","cell","row","quiz_id","quiz_name","quiz_coins","quiz_expiry","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","className","Row","Col","xl","Label","for","CustomInput","type","id","value","onChange","style","width","padding","backgroundPosition","Input","e","target","UsersList","dispatch","useDispatch","store","useSelector","state","quiz","useState","setSearchTerm","listData","setListData","currentPage","setCurrentPage","useEffect","getbasketballquiz","loadAllData","Spinner","bask_data","filterList","filter","userItem","newserch","toString","toLowerCase","startsWith","prize_rank","contest_name","contest_prize_type","contest_prize_caption","contest_prize_value","includes","blocking","console","log","bask_quiz_page","last_page","Card","noHeader","pagination","subHeader","responsive","paginationServer","paginationPerPage","paginationDefaultPage","sortIcon","paginationComponent","count","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","data","filters","q","isFiltered","Object","keys","some","k","length","dataToRender","subHeaderComponent","val","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","size","color","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","UILoader","props","children","loader","tag","overlayColor","Tag","classnames","backgroundColor","defaultProps","getAllData","params","a","http","get","then","response","getcricketquiz","dataperPage","getfootballquiz","getLangcount","getLang","getengquestions","question","getlangs","addQuiz","post","catch","err","addQuestion","getquizDetails","put","getQuizQuestions","resetQuizEditQuestions","quizEditQuestions","quizData","quizEditQuestionsEach","quiztogglestatus","status"],"mappings":"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","file":"static/js/29.220eb78f.chunk.js","sourcesContent":["export const columns = [\n  {\n    name: 'ID',\n    minWidth: '20px',\n    selector: 'quiz_id',\n    sortable: true,\n    cell: (row) => row.quiz_id\n  },\n  {\n    name: 'Name',\n    minWidth: '250px',\n    selector: 'quiz_name',\n    sortable: true,\n    cell: (row) => row.quiz_name\n  },\n  {\n    name: 'Coins',\n    minWidth: '200px',\n    selector: 'quiz_coins',\n    sortable: true,\n    cell: (row) => row.quiz_coins\n  },\n  {\n    name: 'Expiry',\n    minWidth: '200px',\n    selector: 'quiz_expiry',\n    sortable: true,\n    cell: (row) => row.quiz_expiry\n  }\n\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n// ** Invoice List Sidebar\nimport UiLoader from '@components/ui-loader'\n// ** Columns\nimport { columns } from './columns' \n// import AddQuiz from '../add'\n\n// ** Store & Actions\nimport { getbasketballquiz} from '../../../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n// import { selectThemeColors } from '@utils'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n//import UiLoader from '@components/ui-loader'\nimport { Card, Row, Col, Label, CustomInput,  Input, Spinner } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\n// ** Table Header\nconst CustomHeader = ({\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm\n}) => {\n  \n  return (\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <Label for=\"rows-per-page\">Show</Label>\n            <CustomInput\n              className=\"form-control mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{\n                width: '5rem',\n                padding: '0 0.8rem',\n                backgroundPosition:\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n              }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </CustomInput>\n            <Label for=\"rows-per-page\">Entries</Label>\n          </div>\n        </Col>\n        <Col\n          xl=\"6\"\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\n        >\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1\">\n            <Label className=\"mb-0\" for=\"search-invoice\">\n              Search:\n            </Label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ml-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n          \n       </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.quiz)\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  // const [sidebarOpen, setSidebarOpen] = useState(false)\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getbasketballquiz(currentPage))\n  }, [currentPage])\n\n  useEffect(() => {\n    if (store.loadAllData) {\n      <Spinner/>\n    } else {\n      setListData(store.bask_data)\n    }\n  }, [store.loadAllData])\n\n//const columnsList = useCallback(columns(), [])\n  // ** User filter options\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per pag\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n  }\n\n  useEffect(() => {\n   if (searchTerm) {\n      const filterList = store.bask_data.filter((userItem) => {\n        \n        const newserch =\n        userItem.id.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) || \n        userItem.prize_rank.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n        userItem.contest_name?.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n        userItem.contest_prize_type.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n        userItem.contest_prize_caption.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n        userItem.contest_prize_value?.toString().toLowerCase().startsWith(searchTerm.toLowerCase())\n       \n       \n       const includes = \n       userItem.id.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n       userItem.prize_rank.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n       userItem.contest_name?.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n       userItem.contest_prize_type.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n       userItem.contest_prize_caption.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n       userItem.contest_prize_value?.toString().toLowerCase().startsWith(searchTerm.toLowerCase())\n       \n    if (newserch) {\n        return newserch\n      } else if (!newserch && includes) {\n        return includes\n      } else return null\n\n      })\n\n      setListData(filterList)\n      setCurrentPage(1)\n    } else {\n      setListData(store.bask_data)\n    }\n  }, [searchTerm])\n\n  if (store.loadAllData) {\n    return (\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n        <UiLoader\n          blocking\n        />\n      </div>\n    )\n  }\n\n  console.log(store.bask_quiz_page.last_page)\n  // ** Custom Pagination \n  const CustomPagination = () => {\n    const count = store.bask_quiz_page.last_page\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    // if (store.allContests.length > 0) {\n    //   return store.allContests\n    // } else\n    if (listData.length === 0 && isFiltered) {\n      return []\n    } else {\n      return listData\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          paginationPerPage\n          paginationDefaultPage={currentPage}\n          sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              handlePerPage\n              rowsPerPage\n              searchTerm={searchTerm}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","import http from '../../../../configs/httpConfig'\r\nimport {notifyError, notifySuccessadd, notifySuccessdelete, notifyWarning} from \"../../../Toast\"\r\n\r\nexport const getAllQuizDataInit = () => ({\r\n  type: 'GET_ALL_DATA_INIT'\r\n})\r\n\r\n// ** Get all Data\r\nexport const getAllData = (params, page) => {\r\n  return async (dispatch) => {\r\n    \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_ALL_DATA',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getcricketquiz = (params, page, dataperPage = '') => {\r\n  return async (dispatch) => {\r\n   \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Cricket&page=${page}&limit=${dataperPage}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_CRIC_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getfootballquiz = (params, page, dataperPage) => {\r\n  return async (dispatch) => {\r\n    \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Football&page=${page}&limit=${dataperPage}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_FOOT_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getbasketballquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n  \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Basketball&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_BASK_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLangcount = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLang = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getengquestions = (question) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_QUESTION',\r\n      data:question\r\n    })\r\n  }\r\n}\r\n\r\nexport const getenganswers = (...answers) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_ANSWERS',\r\n      data:answers\r\n    })\r\n  }\r\n}\r\n\r\n// export const getquizdetails = (datas) => {\r\n//   return (dispatch) => {\r\n//     dispatch({\r\n//       type:'QUIZ_DETAILS',\r\n//       data:datas\r\n//     })\r\n//     console.log(datas)\r\n//   }\r\n// }\r\n\r\nexport const getlangs = (params) => {\r\n  return async (dispatch) => {\r\n    await http.get('/master/language/dropdownlist', { params }).then((response) => {\r\n      dispatch({\r\n        type: 'LANGS_ID',\r\n        data: response.data,\r\n        params\r\n      })\r\n      \r\n    })\r\n  }\r\n}\r\n// ** Add new quiz\r\nexport const addQuiz = (quiz) => {\r\n  return (dispatch) => {\r\n    http\r\n      .post('/quiz/add', quiz)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_ADD',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        notifyError(err.message)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addQuizInit = () => ({\r\n  type: 'ADD_QUIZ_POST_INIT'\r\n})\r\n\r\nexport const addQuestion = (question) => {\r\n  return (dispatch) => {\r\n    dispatch(addQuizInit())\r\n    http\r\n      .post('/quiz/questions/add', question)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_QUESTION_ADD',\r\n          data: response.data\r\n        })\r\n        \r\n      })\r\n      .catch((err) => {\r\n        notifyWarning(err.message)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const resetQuizQuestions = () => ({\r\n  type: 'RESET_QUESTIONS_ADDED'\r\n})\r\n\r\nexport const deleteQuiz = (id) => {\r\n  return (dispatch) => {\r\n    http\r\n      .delete(`/quiz/delete/${id}`)\r\n      .then(() => {\r\n        notifySuccessdelete()\r\n        dispatch(getAllData())\r\n      })\r\n      .catch((err) => {\r\n        notifyError(err)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport const getViewInit = () => ({\r\n  type: 'DETAILS_VIEW_INIT'\r\n})\r\n\r\nexport const getquizDetails = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(getViewInit())\r\n   await http\r\n      .put(`/quiz/view/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_DET',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizQuestions = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/questions/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_QUESTIONS_DATA',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizAnswers = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/answers/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_ANSWERS_DATA',\r\n          data: response.data.data\r\n        })\r\n       \r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const resetQuizEditQuestions = () => ({\r\n  type: 'RESET_QUIZ_QUESTIONS'\r\n})\r\n\r\nexport const quizEditQuestions = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditQuestionsEach = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/questions/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_QUESTIONS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditAnswers = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/answers/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_ANSWERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const NUMBER_PLAYERS = (players) => {\r\n  return (dispatch) => {\r\n    http\r\n      .get('/quiz/players', players)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'NUMBER_PLAYERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quiztogglestatus = (id, status) => {\r\n\r\n  return async (dispatch) => {\r\n   await http.post(`quiz/toggle_status/${id}`).then((response) => {\r\n      notifySuccessadd(response.data.message)\r\n      console.log(status)\r\n    dispatch({\r\n        type: 'QUIZ_TOGGLE_STATUS',\r\n        data: status\r\n      })  \r\n     \r\n    }).catch((e) => {\r\n      \r\n      console.log(\"Error in Feed Post: \", e)\r\n      \r\n    })\r\n  }\r\n}"],"sourceRoot":""}