{"version":3,"sources":["views/predictor/football/list/Table.js","configs/httpConfig.js","views/Toast.js","@core/components/breadcrumbs/index.js","@core/components/ui-loader/index.js","views/predictor/store/actions/index.js"],"names":["DataTableTransaction","dispatch","useDispatch","store","useSelector","state","predictor","console","log","useState","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchValue","setSearchValue","filteredData","setFilteredData","useEffect","getFootballpredictor","e","value","target","updatedData","length","predictor_name","filter","item","startsWith","title","toString","toLowerCase","includes","adData","isloading","className","blocking","breadCrumbTitle","breadCrumbActive","sm","for","type","id","onChange","parseInt","handlePerPage","noHeader","pagination","paginationServer","columns","name","minWidth","selector","sortable","cell","row","caption","joined_count","entry_fee","no_of_questions","description","sortIcon","size","paginationComponent","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","data","predict_football_name","slice","dataToRender","memo","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","color","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","BreadCrumbs","props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","tag","to","active","UILoader","children","loader","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","addfile","params","a","http","post","then","response","catch","footballListAdd","addpredictor","addFootpredictQuestion","getAllpredictor","get","preViewdata","preview","listFootAddpreview","addPreview","addfootquepreview"],"mappings":"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","file":"static/js/146.147a9ce4.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\nimport UiLoader from '@components/ui-loader'\n// ** Table Columns\n// ** Store & Actions\nimport { getFootballpredictor} from '../../store/actions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport BreadCrumbs from '@components/breadcrumbs'\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\n\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { Card, Input, Label, Row, Col } from 'reactstrap'\n\nconst DataTableTransaction = () => {\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.predictor)\n  \n  // ** States\n  console.log(store)\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n \n\n  useEffect(() => {\n   \n    dispatch(getFootballpredictor(currentPage))\n  }, [currentPage])\n  console.log(currentPage)\n\n  // ** Get data on mount\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n    if (value.length) {\n      updatedData = store.predictor_name.filter(item => {\n        const startsWith =\n          item.title?.toString().toLowerCase().startsWith(value.toLowerCase()) \n          // item.caption?.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n          // item.type?.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes =\n          item.title?.toString().toLowerCase().includes(value.toLowerCase())\n          // item.caption?.toString().toLowerCase().includes(value.toLowerCase()) ||\n          // item.type?.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData(updatedData)\n    }\n  }\nconsole.log(handleFilter)\n\n  const columns = [\n    // {\n    //   name: '#',\n    //   minWidth: '20px',\n    //   sortable: true,\n    //   cell: (row, pos) => `#${store.adData?.data?.from + pos}`\n    // },\n    \n    {\n      name: 'Name',\n      minWidth: '100px',\n      selector: 'title',\n      sortable: true,\n      cell: (row) => row?.title\n    },\n    {\n      name: 'Caption',\n      minWidth: '100px',\n      selector: 'caption',\n      sortable: true,\n      cell: (row) => row?.caption\n    },\n    {\n      name: 'Participants',\n      minWidth: '100px',\n      selector: 'joined_count',\n      sortable: true,\n      cell: (row) => row?.joined_count\n    },\n   \n   \n    {\n      name: 'Entry Fee',\n      minWidth: '100px',\n      selector: 'entry_fee',\n      sortable: true,\n      cell: (row) => row?.entry_fee\n    },\n    {\n      name: 'Total question',\n      minWidth: '100px',\n      selector: 'no_of_questions',\n      sortable: true,\n      cell: (row) => row?.no_of_questions\n    },\n    {\n        name: 'Description',\n        minWidth: '100px',\n        selector: 'description',\n        sortable: true,\n        cell: (row) => row?.description\n      }\n    \n  ]\n  // ** Function to handle Pagination and get data\n\n  const handlePagination = page => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function to handle per page\n\n  const handlePerPage = e => {\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n// store.predict_football_name?.length ? store.predict_football_name?.last_page : 1\n    const count = 1\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={count}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        }\n      />\n    )\n  }\n  console.log(store.adData)\n  // ** Table data to render\n  const dataToRender = () => {\n    if (store.predict_football_name?.length > 0) {\n      return searchValue.length ? filteredData : store.predict_football_name?.slice(0, rowsPerPage)\n    } else {\n      return []\n    }\n  }\n\n  if (store.isloading) {\n    return (\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n        <UiLoader\n          blocking\n        />\n      </div>\n    )\n  }\n  \n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Football Predictor' breadCrumbActive='List' />\n      <Card>\n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>Show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                id='sort-select'\n                value={rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n                <option value={10}>10</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>Entries</Label>\n            </div>\n          </Col>\n          {/* <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n              placeholder='search...'\n            />\n          </Col> */}\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          className='react-dataTable'\n          columns={columns}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default memo(DataTableTransaction)","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n//import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n  //UncontrolledButtonDropdown,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  //DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  <Link to={`/${breadCrumbParent}`}>{breadCrumbParent}</Link>\r\n                </BreadcrumbItem>\r\n                ) : ''\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","import http from '../../../../configs/httpConfig'\nimport { notifySuccessadd, notifyError } from '../../../Toast'\n\nexport const getcricketdatainit = () => ({\n    type: 'GET_ALL_REPORTS_INIT'\n  })\n/***************************PREDICTOR LIST ADD*****************************************/\n  export const addfile = (params) => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n      await http.post('/cricket/predictor', params).then((response) => {        \n        \n        notifySuccessadd(response.data.message)\n        dispatch({\n          type: 'ADD_FILE',\n          data: response.data.message\n        })\n      }).catch((e) => {\n        \n        notifyError(e.response.data.message)\n      })\n    }\n  }\n  export const footballListAdd = (params) => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n      await http.post('/football/predictor', params).then((response) => {        \n        \n        notifySuccessadd(response.data.message)\n        dispatch({\n          type: 'PREDICTOR_LIST_ADD',\n          data: response.data.data\n        })\n      }).catch((e) => {\n       \n        notifyError(e?.message)\n      })\n    }\n  }\n/***************************END PREDICTOR LIST ADD*****************************************/ \n\n\n/*************************CRICKET AND FOOTBALL ADD PREDICTOR QUESTION**************************** */\n  export const addpredictor = (params) => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n      \n   await http.post('/cricket/predictor_question', params).then((response) => {        \n        \n       notifySuccessadd(response.data.message)   \n       \n        dispatch({\n          type: 'ADD_PREDICTOR_QUSTION_ANS',\n          data: response.data.message\n        })\n      }).catch((e) => {\n        \n        notifyError(e?.response?.data?.message ? e?.response?.data?.message : e?.message)\n      })\n    }\n  }\n  export const addFootpredictQuestion = (params) => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n      \n   await http.post('/football/predictor_question', params).then((response) => { \n    notifySuccessadd(response.data.message)       \n       dispatch({\n          type: 'ADD_FOOTBALL_PREDICT_QUS',\n          data: response.data.data\n        })\n      }).catch((e) => {\n       \n        notifyError(e?.response?.data?.message)\n      })\n    }\n  }\n  /*************************END CRICKET AND FOOTBALL ADD PREDICTOR QUESTION**************************** */\n\n\n  /************************ GET CRICKET AND FOOTBALL API **********************************/\n  export const getAllpredictor = () => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n    \n      await http.get('/cricket/predictor').then((response) => {        \n        \n       //notifySuccessadd(response.data.msg)\n        dispatch({\n          type: 'GET_ALL_PREDICTOR',\n          data: response.data.data\n        })\n        console.log(response)\n      }).catch((e) => {\n        \n        notifyError(e?.response?.data?.message)\n      })\n    }\n  }\n  export const getFootballpredictor = () => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n    \n      await http.get('/football/predictor').then((response) => {        \n        \n       //notifySuccessadd(response.data.msg)\n        dispatch({\n          type: 'GET_FOOTBALL_PREDICTOR',\n          data: response.data.data\n        })\n        console.log(response)\n      }).catch((e) => {\n       notifyError(e?.response?.data?.message)\n      })\n    }\n  }\n  /*************************END CRICKET AND FOOTBALL API *********************************/\n  /**************************LIST ADD CRICKET AND FOOTBALL PREVIEW *************************************/\n  export const preViewdata = (preview) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CHECK_PREVIEW_DATA',\n        data:preview\n      })\n    }\n  }\n  export const listFootAddpreview = (preview) => {\n    return (dispatch) => {\n      dispatch({\n        type:'FOOTBALL_PREVIEW_DATA',\n        data:preview\n      })\n    }\n  }\n/**************************LIST ADD CRICKET AND FOOTBALL PREVIEW *************************************/\n/******************CRICKET AND FOOTBALL QUESTION ADD PREVIEW**************************/\n  export const addPreview = (preview) => {\n    return (dispatch) => {\n      dispatch({\n        type:'Add_PREVIEW_DATA',\n        data:preview\n      })\n    }\n  }\n\n  export const addfootquepreview = (preview) => {\n    return (dispatch) => {\n      dispatch({\n        type:'Add_FOOT_QUE_PREVIEW',\n        data:preview\n      })\n    }\n  }\n/****************** END CRICKET AND FOOTBALL QUESTION ADD PREVIEW**************************/"],"sourceRoot":""}