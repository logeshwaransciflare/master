{"version":3,"sources":["views/Dashboard/index.js","../node_modules/reactstrap/es/Row.js"],"names":["StatisticsCards","useState","Content","lazy","rowColsPropType","PropTypes","oneOfType","number","string","propTypes","tag","tagPropType","noGutters","bool","className","cssModule","object","form","xs","sm","md","lg","xl","defaultProps","widths","Row","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","colWidth","i","colSize","isXs","push","classes","mapToCssModules","classNames","React","createElement","_extends"],"mappings":"iMA0DeA,UApDS,WACtB,MAAuBC,mBAAS,GAE1BC,EACa,IAHnB,oBAIMC,gBAAK,kBAAM,2DACXA,gBAAK,kBAAM,oCAEjB,OACE,eAAC,WAAD,WAEE,cAAC,IAAD,IAkCA,cAAC,WAAD,UACC,cAACD,EAAD,W,iCCpDP,6EAOIE,EAAkBC,IAAUC,UAAU,CAACD,IAAUE,OAAQF,IAAUG,SACnEC,EAAY,CACdC,IAAKC,cACLC,UAAWP,IAAUQ,KACrBC,UAAWT,IAAUG,OACrBO,UAAWV,IAAUW,OACrBC,KAAMZ,IAAUQ,KAChBK,GAAId,EACJe,GAAIf,EACJgB,GAAIhB,EACJiB,GAAIjB,EACJkB,GAAIlB,GAEFmB,EAAe,CACjBb,IAAK,MACLc,OAhBiB,CAAC,KAAM,KAAM,KAAM,KAAM,OAmBxCC,EAAM,SAAaC,GACrB,IAAIZ,EAAYY,EAAMZ,UAClBC,EAAYW,EAAMX,UAClBH,EAAYc,EAAMd,UAClBe,EAAMD,EAAMhB,IACZO,EAAOS,EAAMT,KACbO,EAASE,EAAMF,OACfI,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,YAAa,MAAO,OAAQ,WAEzGI,EAAa,GACjBN,EAAOO,SAAQ,SAAUC,EAAUC,GACjC,IAAIC,EAAUR,EAAMM,GAGpB,UAFOJ,EAAWI,GAEbE,EAAL,CAIA,IAAIC,GAAQF,EACZH,EAAWM,KAAKD,EAAO,YAAcD,EAAU,YAAcF,EAAW,IAAME,OAEhF,IAAIG,EAAUC,0BAAgBC,IAAWzB,EAAWF,EAAY,aAAe,KAAMK,EAAO,WAAa,MAAOa,GAAaf,GAC7H,OAAoByB,IAAMC,cAAcd,EAAKe,YAAS,GAAId,EAAY,CACpEd,UAAWuB,MAIfZ,EAAIhB,UAAYA,EAChBgB,EAAIF,aAAeA,EACJE","file":"static/js/232.0da3e601.chunk.js","sourcesContent":["import { Fragment, lazy, useState, Suspense } from 'react'\nimport { Row } from 'reactstrap'\n// import PickerRange from \"./PickerRange\"\n// import Breadcrumbs from '@components/breadcrumbs'\n// import { Users, Dribbble } from 'react-feather'\n\nconst StatisticsCards = () => {\n  const [selectedStat] = useState(0)\n\n  const Content =\n    selectedStat === 0\n      ? lazy(() => import('./UserStats'))\n      : lazy(() => import('./SportsStats'))\n\n  return (\n    <Fragment>\n      {/* <Breadcrumbs breadCrumbTitle='Statistics Cards' breadCrumbParent='Card' breadCrumbActive='Statistics Cards' /> */}\n      <Row>\n        {/* <Col md={8} sm={12}>\n          <ButtonGroup className=\"mb-1\">\n            <Button\n              outline\n              color=\"primary\"\n              onClick={() => setSelectedStat(0)}\n              active={selectedStat === 0}\n            >\n              &ensp;&emsp;&ensp;&emsp;\n              <Users size={14} />\n              <span className=\"align-middle ml-25\">User Stats</span>\n              &ensp;&emsp;&ensp;&emsp;\n            </Button>\n            <Button\n              outline\n              color=\"primary\"\n              onClick={() => setSelectedStat(1)}\n              active={selectedStat === 1}\n            >\n              &ensp;&emsp;&ensp;&emsp;\n              <Dribbble size={14} />\n              <span className=\"align-middle ml-25\">Sports Stats</span>\n              &ensp;&emsp;&ensp;&emsp;\n            </Button>\n           \n          </ButtonGroup>\n        </Col>\n        \n        <Col md={3}>\n          <PickerRange />\n        </Col> */}\n       \n      </Row>\n      <Suspense>\n       <Content />\n      </Suspense>\n    </Fragment>\n  )\n}\n\nexport default StatisticsCards\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;"],"sourceRoot":""}