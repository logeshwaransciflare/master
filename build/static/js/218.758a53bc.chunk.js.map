{"version":3,"sources":["views/Quiz/Add/QuizQuestions.js","views/testingg/quizadd/Quizeng.js","views/Quiz/Add/QuizDetails.js","views/Quiz/Add/index.js","../node_modules/react-feather/dist/icons/arrow-right.js","../node_modules/react-feather/dist/icons/arrow-left.js"],"names":["AddQuestions","stepper","useForm","register","errors","handleSubmit","trigger","store","useSelector","state","quiz","addedQuizID","addedQuizID2","lang_id","langs","eng_question","lang_count","addloader","dispatch","useDispatch","onSubmit","isObjEmpty","next","console","log","useState","count","setCount","increaseCount","map","ques","quest","submitQuestion","id_1","id_2","then","res","param","quiz_id","translation_quiz_questions","master_language_id","translation_quiz_question","document","getElementById","value","quiz_question_duration","quiz_question_sno","quiz_question_answers","translation_quiz_answers","translation_quiz_answer","quiz_answer_sno","quiz_answer_correct","addQuestion","className","Form","i","l","Row","FormGroup","tag","Col","md","Label","for","Input","type","id","name","placeholder","innerRef","required","classnames","check","inline","defaulChecked","Button","Ripple","color","onClick","size","previous","blocking","querySelector","getengquestions","colourOptions","label","langOptions","QuizDetails","lang","setLang","nextpage","setNextpage","control","deleteForm","e","preventDefault","useEffect","getLangcount","getlangs","master_language_name","val","quiz_coins","quiz_expiry","quiz_category","translation_quiz","translation_quiz_name","getElementsByName","addQuiz","QuizQuestions","Quizeng","CardBody","render","field","isClearable","onChange","rules","defaultValue","options","classNamePrefix","theme","selectThemeColors","outline","sm","as","Select","Flatpickr","min","onKeyPress","key","AddQuiz","setStepper","ref","useRef","steps","title","subtitle","content","breadCrumbTitle","breadCrumbParent","breadCrumbActive","instance","el","_extends","Object","assign","target","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRight","forwardRef","_ref","_ref$color","_ref$size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","propTypes","PropTypes","string","oneOfType","number","displayName","ArrowLeft"],"mappings":"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","file":"static/js/218.758a53bc.chunk.js","sourcesContent":["import { Fragment, useState } from 'react'\n// import { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { isObjEmpty} from '@utils'\nimport { useForm} from 'react-hook-form'\nimport { addQuestion } from '../../Quiz/store/action'\nimport Repeater from '@components/repeater'\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\nimport { Plus, ArrowLeft } from 'react-feather'\nimport { useSelector, useDispatch } from 'react-redux'\nimport UiLoader from '@components/ui-loader'\n\nconst AddQuestions = ({ stepper }) => {\n  const { register, errors, handleSubmit, trigger} = useForm()\n  // const history = useHistory()\n  const store = useSelector(state => state.quiz)\n  const { addedQuizID, addedQuizID2, lang_id, langs, eng_question, lang_count, addloader } = store\n  const dispatch = useDispatch()\n  const onSubmit = () => {\n    trigger()\n    if (isObjEmpty(errors)) {\n      stepper.next()\n    }\n}\n\nconsole.log(\"id\", lang_id)\nconsole.log(langs)\nconst [count, setCount] = useState(1)\nconst increaseCount = () => {\n  if (count === 5) return\n  setCount(count + 1)\n}\n\nconsole.log(eng_question.map(ques => ques.quest))\n  const submitQuestion = (id_1, id_2) => {\n    console.log(addedQuizID)\n    trigger().then((res) => {\n      if (res) {\n        if (lang_count === 2) {\n          const param = {\n            quiz_id: addedQuizID,\n            translation_quiz_questions: [\n              {\n                  master_language_id: 1,\n                  translation_quiz_question: document.getElementById(`question-${id_1}`).value\n                },\n              {\n                master_language_id: 2,\n                translation_quiz_question: document.getElementById(`question-${id_2}`).value\n              }\n            ],\n            quiz_question_duration: '30',\n            quiz_question_sno: id_1,\n            quiz_question_answers: [\n              {\n                translation_quiz_answers:[\n                  {\n                    // master_language_id:document.getElementById('quiz_lang').value,\n                    master_language_id:1,\n                    translation_quiz_answer: document.getElementById(`answer1-${id_1}`).value\n                  },\n                  {\n                      // master_language_id:document.getElementById('quiz_lang').value,\n                      master_language_id:2,\n                      translation_quiz_answer: document.getElementById(`answer1-${id_2}`).value\n                    }\n                ],\n              quiz_answer_sno: '1',\n             quiz_answer_correct: '1'\n\n             },\n            {\n              translation_quiz_answers:[\n                {\n                  master_language_id:1,\n                  translation_quiz_answer: document.getElementById(`answer2-${id_1}`).value\n                },\n                {\n                  master_language_id:2,\n                  translation_quiz_answer: document.getElementById(`answer2-${id_2}`).value\n                }\n              ],\n            quiz_answer_sno: '2',\n           quiz_answer_correct: '0'\n           },\n           {\n            translation_quiz_answers:[\n              {\n                master_language_id:1,\n                translation_quiz_answer: document.getElementById(`answer3-${id_1}`).value\n              },\n              {\n                  master_language_id:2,\n                  translation_quiz_answer: document.getElementById(`answer3-${id_2}`).value\n                }\n            ],\n          quiz_answer_sno: '3',\n         quiz_answer_correct: '0'\n         },\n         {\n          translation_quiz_answers:[\n            {\n              master_language_id:1,\n              translation_quiz_answer: document.getElementById(`answer4-${id_1}`).value\n            },\n            {\n              master_language_id:2,\n              translation_quiz_answer: document.getElementById(`answer4-${id_2}`).value\n            }\n          ],\n        quiz_answer_sno: '4',\n       quiz_answer_correct: '0'\n       }\n      ]}\n        dispatch(addQuestion(param))\n        console.log(param)\n        } else {\n          const param = {\n            quiz_id: addedQuizID,\n            translation_quiz_questions: [\n              {\n                master_language_id: 1,\n                translation_quiz_question: document.getElementById(`question-${id_1}`).value\n              }\n            ],\n            quiz_question_duration: '30',\n            quiz_question_sno: id_1,\n            quiz_question_answers: [\n              {\n                translation_quiz_answers:[\n                  {\n                    // master_language_id:document.getElementById('quiz_lang').value,\n                    master_language_id:1,\n                    translation_quiz_answer: document.getElementById(`answer1-${id_1}`).value\n                  }\n                ],\n              quiz_answer_sno: '1',\n             quiz_answer_correct: '1'\n             },\n            {\n              translation_quiz_answers:[\n                {\n                  master_language_id:1,\n                  translation_quiz_answer: document.getElementById(`answer2-${id_1}`).value\n                }\n              ],\n            quiz_answer_sno: '2',\n           quiz_answer_correct: '0'\n           },\n           {\n            translation_quiz_answers:[\n              {\n                master_language_id:1,\n                translation_quiz_answer: document.getElementById(`answer3-${id_1}`).value\n              }\n            ],\n          quiz_answer_sno: '3',\n         quiz_answer_correct: '0'\n         },\n         {\n          translation_quiz_answers:[\n            {\n              master_language_id:1,\n              translation_quiz_answer: document.getElementById(`answer4-${id_1}`).value\n            }\n          ],\n        quiz_answer_sno: '4',\n       quiz_answer_correct: '0'\n       }\n      ]}\n        dispatch(addQuestion(param))\n        console.log(param)\n        }\n    \n        // dispatch(addQuestion(param))\n        // console.log(param)\n        // console.log(document.getElementById('quiz_lang').value)\n      }\n    })\n  }\n  return (\n    <Fragment>\n      {lang_count === 2 ? <>  <div className=\"content-header\">\n        <h5 className=\"mb-0\">Questions</h5>\n        <small>Enter Questions.</small>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Repeater count={count}>\n          {(i, l) => (\n            <li key={i} className=\"list-unstyled\">\n              <Row>\n              <div className=\"content-header\">\n        <small>Enter English.</small>\n      </div>\n                <FormGroup tag={Col} md=\"12\">\n                  <Label className=\"form-label\" for={`question-${i}`}>\n                    Quiz question\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    id={`question-${i}`}\n                    name={`question-${i}`}\n                    placeholder=\"Enter quiz question?\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`question-${i}`]\n                    })}\n                  />\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\n                    Option-1\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer1-${i}`}\n                    id={`answer1-${i}`}\n                    placeholder=\"Option-1\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer1-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          defaulChecked\n                          value=\"1\"\n                        />\n                        Correct Answer\n                      </Label>\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\n                    Option-2\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer2-${i}`}\n                    id={`answer2-${i}`}\n                    placeholder=\"Option-2\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer2-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"2\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer3-${i}`}>\n                    Option-3\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer3-${i}`}\n                    id={`answer3-${i}`}\n                    placeholder=\"Option-3\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer3-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"3\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer4-${i}`}>\n                    Option-4\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer4-${i}`}\n                    id={`answer4-${i}`}\n                    placeholder=\"Option-4\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer4-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"4\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <div className=\"content-header\">\n                <br/>\n        <small>Enter Arabic.</small>\n      </div>\n              <Row>\n                <FormGroup tag={Col} md=\"12\">\n                  <Label className=\"form-label\" for={`question-${l}`}>\n                    Quiz question\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    id={`question-${l}`}\n                    name={`question-${l}`}\n                    placeholder=\"Enter quiz question?\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`question-${l}`]\n                    })}\n                  />\n                </FormGroup>\n\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer1-${l}`}>\n                    Option-1\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer1-${l}`}\n                    id={`answer1-${l}`}\n                    placeholder=\"Option-1\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer1-${l}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${l}`}\n                          defaulChecked\n                          value=\"1\"\n                        />\n                        Correct Answer\n                      </Label>\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer2-${l}`}>\n                    Option-2\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer2-${l}`}\n                    id={`answer2-${l}`}\n                    placeholder=\"Option-2\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer2-${l}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${l}`}\n                          value=\"2\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer3-${l}`}>\n                    Option-3\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer3-${l}`}\n                    id={`answer3-${l}`}\n                    placeholder=\"Option-3\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer3-${l}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${l}`}\n                          value=\"3\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer4-${l}`}>\n                    Option-4\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer4-${l}`}\n                    id={`answer4-${l}`}\n                    placeholder=\"Option-4\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer4-${l}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${l}`}\n                          value=\"4\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"6\">\n                  <div className=\"d-flex justify-content-end\">\n                    <Button.Ripple\n                      type=\"button\"\n                      color=\"primary\"\n                      className=\"btn-next\"\n                      onClick={() => submitQuestion(i, l)}\n                    >\n                      <span className=\"align-middle d-sm-inline-block d-none\">\n                        Submit Question\n                      </span>\n                    </Button.Ripple>\n                  </div>\n                </FormGroup>\n              </Row>\n            </li>\n          )}\n        </Repeater>\n        <div className=\"d-flex justify-content-between\">\n          {/* {count <= 4 && ( */}\n          {count <= 30 && (\n            <Button.Ripple\n              className=\"btn-icon\"\n              color=\"primary\"\n              onClick={increaseCount}\n            >\n              <Plus size={14} />\n              <span className=\"align-middle ml-25\">Add New Question</span>\n            </Button.Ripple>\n          )}\n          {count > 4 && (\n              <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\n              <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\n              <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n              </Button.Ripple>\n          )}\n        </div>\n      </Form></> : <> <div className=\"content-header\">\n        <h5 className=\"mb-0\">Questions</h5>\n        <small>Enter Questions.</small>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Repeater count={count}>\n          {(i) => (\n            <li key={i} className=\"list-unstyled\">\n              <Row>\n                <FormGroup tag={Col} md=\"12\">\n                  <Label className=\"form-label\" for={`question-${i}`}>\n                    Quiz question\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    id={`question-${i}`}\n                    name={`question-${i}`}\n                    placeholder=\"Enter quiz question?\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`question-${i}`]\n                    })}\n                  />\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\n                    Option-1\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer1-${i}`}\n                    id={`answer1-${i}`}\n                    placeholder=\"Option-1\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer1-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      <Label check>\n                        <Input\n                          type=\"radio\"                          \n                          name={`correct-answer-${i}`}\n                          defaulChecked\n                          value=\"1\"\n                        />\n                        Correct Answer\n                      </Label>\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\n                    Option-2\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer2-${i}`}\n                    id={`answer2-${i}`}\n                    placeholder=\"Option-2\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer2-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"2\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer3-${i}`}>\n                    Option-3\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer3-${i}`}\n                    id={`answer3-${i}`}\n                    placeholder=\"Option-3\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer3-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"3\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer4-${i}`}>\n                    Option-4\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer4-${i}`}\n                    id={`answer4-${i}`}\n                    placeholder=\"Option-4\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer4-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"4\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"6\">\n                  <div className=\"d-flex justify-content-end\">\n                    <Button.Ripple\n                      type=\"button\"\n                      color=\"primary\"\n                      className=\"btn-next\"\n                      onClick={() => submitQuestion(i)}\n                    >\n                      <span className=\"align-middle d-sm-inline-block d-none\">\n                        Submit Question\n                      </span>\n                    </Button.Ripple>\n                    {addloader && (\n                    <div className=\"ml-2 mt-2\">\n                      <UiLoader blocking />\n                    </div>\n                  )}\n                  {addedQuizID2 && (\n                    <p className=\"ml-2 pt-1 mb-0 success-msg\">\n                      Post Added Successfull\n                    </p>\n                  )}\n                  </div>\n                </FormGroup>\n              </Row>\n            </li>\n          )}\n        </Repeater>\n        <div className=\"d-flex justify-content-between\">\n          {/* {count <= 4 && ( */}\n          {count <= 4 && (\n            <Button.Ripple\n              className=\"btn-icon\"\n              color=\"primary\"\n              onClick={increaseCount}\n            >\n              <Plus size={14} />\n              <span className=\"align-middle ml-25\">Add New Question</span>\n            </Button.Ripple>\n          )}\n             {count > 4 && (\n              <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\n              <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\n              <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n             </Button.Ripple>\n          )}\n        </div>\n      </Form></>}\n     \n    \n    </Fragment>\n  )\n}\n\nexport default AddQuestions\n","import { Fragment, useState } from 'react'\r\n// import { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { isObjEmpty} from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\n// import { addQuestion } from '../../Quiz/store/action'\r\nimport {getengquestions} from \"../../Quiz/store/action\"\r\nimport Repeater from '@components/repeater'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\nimport { Plus, ArrowRight } from 'react-feather'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst AddQuestions = ({ stepper }) => {\r\n  const { register, errors, handleSubmit, trigger } = useForm()\r\n  const dispatch = useDispatch()\r\n  // const history = useHistory()\r\n  const store = useSelector(state => state.quiz)\r\n  const { lang_id, langs, addedQuizID} = store\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n  const [quest] = useState([{quest:\"test\"}, {quest:\"test2\"}])\r\n  console.log(\"id\", lang_id)\r\n  console.log(langs)\r\n  const [count, setCount] = useState(1)\r\n  const increaseCount = () => {\r\n    if (count === 5) return\r\n    setCount(count + 1)\r\n  }\r\n\r\n  // const langOptions = [\r\n  //   { value: '1', label: 'English' },\r\n  //   { value: '2', label: 'Arabic' },\r\n  //   {value: '3',  label: 'tamil'}\r\n  // ]\r\n\r\n  const submitQuestion = (id) => {\r\n    trigger().then((res) => {\r\n      if (res) {\r\n        const param = {\r\n          quiz_id: addedQuizID,\r\n          translation_quiz_questions: [\r\n            {\r\n              master_language_id: lang_id,\r\n              translation_quiz_question: document.getElementById(`question-${id}`).value\r\n            }\r\n          ],\r\n          quiz_question_duration: '30',\r\n          quiz_question_sno: id,\r\n          quiz_question_answers: [\r\n            {\r\n              translation_quiz_answers:[\r\n                {\r\n                  // master_language_id:document.getElementById('quiz_lang').value,\r\n                  master_language_id:lang_id,\r\n                  translation_quiz_answer: document.getElementById(`answer1-${id}`).value\r\n                }\r\n              ],\r\n            quiz_answer_sno: '1',\r\n           quiz_answer_correct:\r\n           document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n           .value === '1'\r\n           ? 1\r\n           : 0\r\n           },\r\n          {\r\n            translation_quiz_answers:[\r\n              {\r\n                master_language_id:lang_id,\r\n                translation_quiz_answer: document.getElementById(`answer2-${id}`).value\r\n              }\r\n            ],\r\n          quiz_answer_sno: '2',\r\n         quiz_answer_correct:\r\n         document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n         .value === '1'\r\n         ? 1\r\n         : 0\r\n         },\r\n         {\r\n          translation_quiz_answers:[\r\n            {\r\n              master_language_id:lang_id,\r\n              translation_quiz_answer: document.getElementById(`answer3-${id}`).value\r\n            }\r\n          ],\r\n        quiz_answer_sno: '3',\r\n       quiz_answer_correct:\r\n       document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n       .value === '1'\r\n       ? 1\r\n       : 0\r\n       },\r\n       {\r\n        translation_quiz_answers:[\r\n          {\r\n            master_language_id:lang_id,\r\n            translation_quiz_answer: document.getElementById(`answer4-${id}`).value\r\n          }\r\n        ],\r\n      quiz_answer_sno: '4',\r\n     quiz_answer_correct:\r\n     document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n     .value === '1'\r\n     ? 1\r\n     : 0\r\n     }\r\n    ]}\r\n    \r\n        // dispatch(addQuestions(param))\r\n        console.log(param)\r\n        console.log(document.getElementById('quiz_lang').value)\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-header\">\r\n        <h5 className=\"mb-0\">Questions</h5>\r\n        <small>Enter Questions.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Repeater count={count}>\r\n          {(i) => (\r\n            <li key={i} className=\"list-unstyled\">\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"12\">\r\n                  <Label className=\"form-label\" for={`question-${i}`}>\r\n                    Quiz question\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id={`question-${i}`}\r\n                    name={`question-${i}`}\r\n                    placeholder=\"Who is Lionel Messi?\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`question-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\r\n                    Answer 1\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer1-${i}`}\r\n                    id={`answer1-${i}`}\r\n                    placeholder=\"Cricketer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer1-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          defaulChecked\r\n                          value=\"1\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\r\n                    Answer2\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer2-${i}`}\r\n                    id={`answer2-${i}`}\r\n                    placeholder=\"Footballer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer2-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          value=\"2\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer3-${i}`}>\r\n                    Answer 3\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer3-${i}`}\r\n                    id={`answer3-${i}`}\r\n                    placeholder=\"VolleyBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer3-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          value=\"3\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer4-${i}`}>\r\n                    Answer 4\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer4-${i}`}\r\n                    id={`answer4-${i}`}\r\n                    placeholder=\"BasketBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer4-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          value=\"4\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"6\">\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <Button.Ripple\r\n                      type=\"button\"\r\n                      color=\"primary\"\r\n                      className=\"btn-next\"\r\n                      onClick={() => submitQuestion(i)}\r\n                    >\r\n                      <span className=\"align-middle d-sm-inline-block d-none\">\r\n                        Submit Questions\r\n                      </span>\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n            </li>\r\n          )}\r\n        </Repeater>\r\n        <div className=\"d-flex justify-content-between\">\r\n          {/* {count <= 4 && ( */}\r\n          {count <= 30 && (\r\n            <Button.Ripple\r\n              className=\"btn-icon\"\r\n              color=\"primary\"\r\n              onClick={increaseCount}\r\n            >\r\n              <Plus size={14} />\r\n              <span className=\"align-middle ml-25\">Add New Question</span>\r\n            </Button.Ripple>\r\n          )}\r\n        </div>\r\n        <div className=\"d-flex justify-content-end\">\r\n          {/* <Button.Ripple\r\n            color=\"secondary\"\r\n            className=\"btn-prev\"\r\n            outline\r\n            disabled\r\n          >\r\n            <ArrowLeft\r\n              size={14}\r\n              className=\"align-middle mr-sm-25 mr-0\"\r\n            ></ArrowLeft>\r\n            <span className=\"align-middle d-sm-inline-block d-none\">\r\n              Previous\r\n            </span>\r\n          </Button.Ripple> */}\r\n          <Button.Ripple \r\n          onClick={() => {\r\n              stepper.next()\r\n              console.log(document.getElementById(`question-${0}`).value)\r\n            //   setQuest([\r\n            //       {quest1:document.getElementById(`question-${0}`).value}\r\n                //   {quest2:document.getElementById(`question-${1}`).value}\r\n            //  {quest3:document.getElementById(`question-${2}`).value},\r\n            // {quest4:document.getElementById(`question-${3}`).value}\r\n        // ])\r\n                dispatch(getengquestions(quest))\r\n                console.log(quest)\r\n                //   dispatch(getengquestions(\"ok\"))\r\n            }} \r\n          color=\"primary\" \r\n          className=\"btn-next\">\r\n            <span className=\"align-middle d-sm-inline-block d-none\">Next</span>\r\n            <ArrowRight\r\n              size={14}\r\n              className=\"align-middle ml-sm-25 ml-0\"\r\n            ></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddQuestions\r\n\r\n\r\n// const param = {\r\n//   quiz_id: addedQuizID2,\r\n//   translation_quiz_questions: [\r\n//     {\r\n//       master_language_id: en,\r\n//       translation_quiz_question: document.getElementById(`question-${id}`).value\r\n//     }\r\n//   ],\r\n//   quiz_question_duration: '30',\r\n//   quiz_question_sno: id,\r\n//   quiz_question_answers: [\r\n//     {\r\n//       translation_quiz_answers:[\r\n//         {\r\n//           master_language_id:lang_id,\r\n//           translation_quiz_answer: document.getElementById(`answer1-${id}`).value,\r\n//         }\r\n//       ],\r\n//     quiz_answer_sno: '1',\r\n//    quiz_answer_correct:\r\n//    document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n//    .value === '1'\r\n//    ? 1\r\n//    :0\r\n//    },\r\n","import { Fragment, useEffect, useState } from 'react'\nimport classnames from 'classnames'\nimport Select from 'react-select'\nimport Flatpickr from 'react-flatpickr'\nimport { selectThemeColors } from '@utils'\nimport Repeater from '@components/repeater'\nimport { useForm, Controller } from 'react-hook-form'\nimport { ArrowRight, Plus, X } from 'react-feather'\n// import { yupResolver } from '@hookform/resolvers/yup'\nimport { Form, Label, Input, FormGroup, Row, Col, Button, CardBody} from 'reactstrap'\n// import { addQuiz, getLang } from '../../Quiz/store/action'\n// import { getLangcount, addQuiz, getlangs } from \"../../Quiz/store/action\"\nimport { getLangcount, addQuiz, getlangs } from '../../Quiz/store/action'\nimport { useSelector, useDispatch } from 'react-redux'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport QuizQuestions from './QuizQuestions'\nimport Quizeng from \"../../testingg/quizadd/Quizeng\"\n// import { QuizDetailsSchema } from './validations'\nconst colourOptions = [\n  { value: 'Cricket', label: 'Cricket' },\n  { value: 'Football', label: 'Football' },\n  { value: 'Basketball', label: 'Basketball' }\n]\nconst langOptions = [\n  { value: 1, label: 'English' },\n  { value: 2, label: 'Arabic' }\n]\n\nconst QuizDetails = ({ stepper }) => {\n  const [lang, setLang] = useState(1)\n  const [count, setCount] = useState(1)\n  const store = useSelector(state => state.quiz)\n  const [nextpage, setNextpage] = useState(false)\n  const {langs, lang_count, addedQuizID} = store\n    const dispatch = useDispatch()\n  const { register, errors, handleSubmit, control, trigger } = useForm({\n    // resolver: yupResolver(QuizDetailsSchema)\n  })\n  const increaseCount = () => {\n    // if (count === 2) { \n    //   console.log(\"error\")\n    // } else {\n      setCount(count + 1) \n  }\n  const preventMinus = (e) => {\n    if (e.key === '-' || e.key === '.') {\n        e.preventDefault()\n    }\n}\n\n  // const en = \"1\"\n  const deleteForm = (e) => {\n    e.preventDefault()\n    console.log('count', count)\n    setCount(count - 1)\n    // e.target.closest('form').remove()\n    console.log(count)\n  }\n\n  // useEffect(() => {\n  //   setCount(count - 1)\n  // }, [deleteForm])\n\n\n  useEffect(() => {\n    dispatch(getLangcount(count))\n    dispatch(getlangs())\n    console.log(langs)\n  }, [count])\n  const onSubmit = (val) => {\n    console.log(val)\n    if (lang_count === 1) {\n      const param = {\n        // ...val,\n        quiz_coins:val.quiz_coins,\n        quiz_expiry: val.quiz_expiry[0], \n        quiz_category: val.quiz_category.value,\n        translation_quiz: [\n          {\n            master_language_id: lang,\n            translation_quiz_name:  document.getElementById(`name-${0}`).value\n          }\n        ]}\n        console.log(document.getElementsByName(`item-na-${0}`))\n        console.log(lang)\n        console.log(`${val}.item-na-${count}.value`)\n        console.log(document.getElementById(`item-na-${0}`).value)\n        console.log(param)        \n      dispatch(addQuiz(param))\n      setNextpage(true)\n    } else {\n      const param = {\n        // ...val,\n        quiz_coins:val.quiz_coins,\n        quiz_expiry: val.quiz_expiry[0],\n        quiz_category: val.quiz_category.value,\n        translation_quiz: [\n          {\n            master_language_id: 1,\n            translation_quiz_name:  document.getElementById(`name-0`).value\n            // langs === \"2\" ? document.getElementById(`name-${0}`).value : \"2\"\n          },\n          {\n            master_language_id: 2,\n            translation_quiz_name:  document.getElementById(`name-1`).value\n          }\n        ]}\n      dispatch(addQuiz(param))\n      setNextpage(true)\n    }\n    // dispatch(getLang(val.quiz_lang.value))\n    trigger()\n    nextpage === true ? stepper.next(QuizQuestions) : stepper.next(Quizeng)\n  }\n  console.log(addedQuizID)\n  console.log('count', count)\n  console.log(langs.map(l => l.master_language_name))\n  return (\n    <Fragment>     \n      <div className=\"content-header\">\n        <h5 className=\"mb-0\">Quiz Details</h5>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n        <CardBody>\n        <Repeater count={count}>\n          {i => (\n            <Form key={i}>\n              <Row className='justify-content-between align-items-center'>\n                  <Col md={4}>\n                  <FormGroup >\n            <Label className=\"form-label\" for={`item-nam-${i}`}>\n              Quiz lang\n            </Label>\n            {/* <Controller\n              isClearable\n              id={`item-na-${i}`}\n              control={control}\n              onChange={() => lang123()}\n              name={`item-na-${i}`}\n              rules={{ required: true }}\n              options={langOptions}\n              className={classnames('react-select', {\n                'is-invalid': errors['quiz_lang']\n              })}\n              classNamePrefix=\"select\"\n              theme={selectThemeColors}\n            /> */}\n             <Controller              \n                control={control}\n                render={({ field: { ...field } }) => (\n                  <Select\n                  isClearable\n                  {...field}\n                  id={`item-na-${i}`}\n                  control={control}\n                  onChange={(e) => setLang(e.value)}\n                  name={`item-na-${i}`}\n                  rules={{ required: true }}\n                  defaultValue={langOptions[0]}      \n                  options={langOptions}\n                  className={classnames('react-select', {\n                    'is-invalid': errors['item-na-${i}']\n                  })}\n                  classNamePrefix=\"select\"\n                  theme={selectThemeColors}             \n                  />\n                )}\n                name='reactSelect'\n              // defaultValue={series[0]}\n              />\n          </FormGroup>\n                  </Col>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label for={`item-name-${i}`}>Quiz Name</Label>\n                    {/* <Input type='text' id={`item-name-${i}`} placeholder='Sciflare Fantasy Admin' /> */}\n                     <Input  \n                     type=\"text\" \n                     id={`name-${i}`} \n                     name={`name-${i}`}                     \n                     innerRef={register({ required: true })}\n                     className={classnames({\n                       'is-invalid': errors[`name-${i}`]\n                     })}\n                     />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                {count === 2 ? \"\" :\n        <Button.Ripple className='btn-icon' color='primary' onClick={increaseCount}>\n          <Plus size={14} />\n          <span className='align-middle ml-25'>Add New</span>\n        </Button.Ripple>}\n                  { i === 0 ? \"\" :\n                  <Button.Ripple color='danger'  className='text-nowrap px-1' onClick={deleteForm} outline>\n                    <X size={14} className='mr-50' />\n                    <span>Delete</span>\n                  </Button.Ripple>}\n                </Col>\n                <Col sm={12}>\n                </Col>\n              </Row>\n            </Form>\n          )}\n        </Repeater>\n      </CardBody>\n        </Row>\n        <Row>\n        <FormGroup tag={Col} md=\"4\">\n            <Label className=\"form-label\" for=\"quiz_category\">\n              Quiz Category\n            </Label>\n            <Controller\n              isClearable\n              as={Select}\n              id=\"quiz_category\"\n              control={control}\n              name=\"quiz_category\"\n              rules={{ required: true }}\n              options={colourOptions}\n              className={classnames('react-select', {\n                'is-invalid': errors['quiz_category']\n              })}\n              classNamePrefix=\"select\"\n              theme={selectThemeColors}\n            />\n          </FormGroup>\n          <div className=\"form-group form-password-toggle col-md-4\">\n            <Label className=\"form-label\" for=\"quiz_expiry\">\n              Expiry\n            </Label>\n            <Controller\n              data-enable-time\n              placeholder='Select...'\n              as={Flatpickr}\n              control={control}\n              id=\"quiz_expiry\"\n              name=\"quiz_expiry\"\n              rules={{ required: true }}\n              className={classnames('form-control flatpickr-input', {\n                'is-invalid': errors['quiz_expiry']\n              })}\n            />\n          </div>\n          <div className=\"form-group form-password-toggle col-md-4\">\n            <Label className=\"form-label\" for=\"quiz_coins\">\n              Quiz coins\n            </Label>\n            <Input\n              type=\"number\"\n              min=\"0\"\n              placeholder='Select...'\n              name=\"quiz_coins\"\n              id=\"quiz_coins\"\n              onKeyPress={preventMinus}\n              innerRef={register({ required: true })}\n              className={classnames({\n                'is-invalid': errors['quiz_coins']\n              })}\n            />\n          </div>\n        </Row>\n        <div className=\"d-flex justify-content-end\">\n          {/* <Button.Ripple\n            color=\"secondary\"\n            className=\"btn-prev\"\n            outline\n            disabled\n          >\n            <ArrowLeft\n              size={14}\n              className=\"align-middle mr-sm-25 mr-0\"\n            ></ArrowLeft>\n            <span className=\"align-middle d-sm-inline-block d-none\">\n              Previous\n            </span>\n          </Button.Ripple> */}\n          <Button.Ripple type=\"submit\" color=\"primary\" className=\"btn-next\">\n            <span className=\"align-middle d-sm-inline-block d-none\">Next</span>\n            <ArrowRight\n              size={14}\n              className=\"align-middle ml-sm-25 ml-0\"\n            ></ArrowRight>\n          </Button.Ripple>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default QuizDetails\n\n","import { useRef, useState } from 'react'\nimport Wizard from '@components/wizard'\nimport QuizDetails from './QuizDetails'\nimport QuizQuestions from './QuizQuestions'\nimport BreadCrumbs from '@components/breadcrumbs'\nconst AddQuiz = () => {\n  const [stepper, setStepper] = useState(null)\n  const ref = useRef(null)\n\n  const steps = [\n    {\n      id: 'quiz-details',\n      title: 'Quiz Details',\n      subtitle: 'Enter Quiz Details.',\n      content: <QuizDetails stepper={stepper} />\n    },\n    {\n      id: 'step-questions-eng',\n      title: 'Questions',\n      subtitle: 'Add Questions',\n      content: <QuizQuestions stepper={stepper} />\n    }\n  ]\n\n  return (\n    <div className=\"horizontal-wizard\">\n       <BreadCrumbs breadCrumbTitle='Quiz' breadCrumbParent='quiz' breadCrumbActive='Add' />\n      <Wizard instance={(el) => setStepper(el)} ref={ref} steps={steps} />\n    </div>\n  )\n}\n\nexport default AddQuiz\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowRight = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 5 19 12 12 19\"\n  }));\n});\nArrowRight.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowRight.displayName = 'ArrowRight';\nexport default ArrowRight;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowLeft = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"19\",\n    y1: \"12\",\n    x2: \"5\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 19 5 12 12 5\"\n  }));\n});\nArrowLeft.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowLeft.displayName = 'ArrowLeft';\nexport default ArrowLeft;"],"sourceRoot":""}