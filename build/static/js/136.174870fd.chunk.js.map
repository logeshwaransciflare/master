{"version":3,"sources":["views/corporate/Squad/Contests/list/Table.js","views/corporate/Squad/Contests/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/breadcrumbs/index.js","views/corporate/Squad/store/actions/index.js"],"names":["SelectReact","store","useSelector","state","corporateteams","useState","data","setData","img","setImg","imageError","dispatch","useDispatch","uppy","Uppy","meta","type","restrictions","maxNumberOfFiles","autoProceed","use","thumbnailGenerator","on","file","preview","console","log","lastModified","breadCrumbTitle","breadCrumbActive","Card","CardHeader","CardTitle","tag","CardBody","Row","Col","className","md","sm","locale","strings","dropHereOr","browse","src","alt","Button","Ripple","color","onClick","e","preventDefault","param","FormData","append","addfile","submit","UsersList","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","config","Successlogin","message","size","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","BreadCrumbs","props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","to","active","contestfrom","from","contestto","winnerfrom","winnerto","quizfrom","quizto","getcricketwinnerdata","page","url","http","get","then","response","getcricketquizdata","getcricketwinnerdownload","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","getcricketquizdownload","getAllSeries","records","getAllFixture","id","getplayerreport","seriesid","fixtureid","table","collectseriesid","collectfixtureid","getcricketplayerdownload","params","post","catch"],"mappings":"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","file":"static/js/136.174870fd.chunk.js","sourcesContent":["import { useState } from 'react'\nimport {useDispatch, useSelector} from \"react-redux\"\nimport { DragDrop } from '@uppy/react'\nimport Uppy from '@uppy/core'\nimport '@uppy/core/dist/style.css'\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\nimport \"./styles.scss\"\nimport './styles copy.scss'\nimport BreadCrumbs from '@components/breadcrumbs'\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Button} from 'reactstrap'\nimport { addfile} from \"../../store/actions\"\n// import Table from  \"./list/Table\"\nconst SelectReact = () => {\n    const store = useSelector((state) => state.corporateteams)\n    const [data, setData] = useState(null)\n    const [img, setImg] = useState(null)\n    const [imageError] = useState(false)\n    const dispatch = useDispatch()\n\n    const uppy = new Uppy({\n      meta: { type: 'avatar' },\n      restrictions: { maxNumberOfFiles: 1 },\n      autoProceed: true\n    })\n  \n    uppy.use(thumbnailGenerator)\n\n    uppy.on('file-added', (file, preview) => {\n      console.log(file.data.lastModified)\n      console.log(file.data)\n      console.log(uppy)\n      console.log(preview)\n      setImg(preview)\n      setData(file.data)\n    })\n\n    const submit = (e) => {\n      e.preventDefault()\n      const param = new FormData()\n      param.append('file', data)\n      dispatch(addfile(param))\n    }\nconsole.log(store)\n\n  return (\n    <>\n    <BreadCrumbs breadCrumbTitle='Corporate Squad' breadCrumbActive='squad' />\n    <Card></Card>\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Squad</CardTitle> \n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col className='mb-1' md='6' sm='12'>\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n          </Col>\n        </Row>\n        <Row className=\"wrapper-add\" >\n        <Col className=\"add-post-edit\">\n         <div className={`mt-4 ${imageError ? 'img-error-post' : ''}`}>\n         <DragDrop uppy={uppy}\n           locale={{\n            strings: {\n              // Text to show on the droppable area.\n              // `%{browse}` is replaced with a link that opens the system file selection dialog.\n              dropHereOr: 'Drop file or %{browse}',\n              // Used as the label for the link that opens the system file selection dialog.\n              browse: 'browse'\n            }\n          }}\n         />\n        {img !== null ? <img className='rounded mt-2' src={img} alt='avatar' /> : null}\n                {img && (\n                  <div className=\"uploaded-files\">\n                    <img src={img} className=\"post-preview\" />\n                  </div>\n                )}\n              </div>\n              </Col>\n             </Row>\n             <div className=\"mt-3\">\n        <Button.Ripple \n        color='primary'\n        onClick={(e) => submit(e)}\n        >submit</Button.Ripple>\n        </div>                  \n      </CardBody>\n    </Card>\n    </>\n  )\n}\nexport default SelectReact","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n//import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n  //UncontrolledButtonDropdown,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  //DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  <Link to={`/${breadCrumbParent}`}>{breadCrumbParent}</Link>\r\n                </BreadcrumbItem>\r\n                ) : ''\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","import http from '../../../../../configs/httpConfig'\nimport { notifySuccessadd } from '../../../../Toast'\nexport const getAllContests = () => {\n  return async (dispatch) => {\n    await http.get('/admin_contests/list').then((response) => {\n      dispatch({\n        type: 'GET_ALL_CONTESTS',\n        data: response.data.data\n      })\n    })\n  }\n}\n\nexport const getContestsListPDF = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_pdf', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.pdf`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\nexport const getContestsListCSV = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_csv', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.csv`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\n//football\n\nexport const getcricketdatainit = () => ({\n    type: 'GET_ALL_REPORTS_INIT'\n  })\n  \nexport const getcricketcontestdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/contestReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/contestReport?page=${page}`\n        await http.get(url).then((response) => {\n        console.log(page, from, to)\n        console.log(response)\n        console.log(page)\n        dispatch({\n          type: 'GET_ALL_CONTEST_REPORTS',\n          data: response.data.data\n        })\n        console.log(response)\n      })\n    }\n  }\n\n  export const contestfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const contestto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_TO',\n        data:to\n      })\n    }\n  }\n\n  export const winnerfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const winnerto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_TO',\n        data:to\n      })\n    }\n  }\n\n  export const quizfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const quizto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_TO',\n        data:to\n      })\n    }\n  }\n  export const getcricketwinnerdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/winnerReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/winnerReport?page=${page}`\n      await http.get(url).then((response) => {\n        console.log(response)\n        dispatch({\n          type: 'GET_ALL_WINNERS_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  export const collectfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const collectto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_TO',\n        data:to\n      })\n    }\n  }\n\n  export const collectpage = (curentpage) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_PAGE',\n        data:curentpage\n      })\n    }\n  }\n  \n  export const getcricketquizdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/quizReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/quizReport?page=${page}`\n      await http.get(url).then((response) => {\n        dispatch({\n          type: 'GET_ALL_QUIZ_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  // export const getcricketcontestdownload = () => {\n  //   return async () => {\n  //     await http.get(`/cricket/reports/contestReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getcricketcontestdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/contestReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketwinnerdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/winnerReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'winnerReport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketquizdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/quizReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  // export const getcricketwinnerdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/winnerReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  // export const getcricketquizdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/quizReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getAllSeries = () => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get('/cricket/series/list').then((response) => {\n        dispatch({\n          type: 'SERIES_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data.records, \"this\")\n      })\n    }\n  }\n\n  export const getAllFixture = (id) => {\n    return async (dispatch) => {\n      console.log(id)\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/fixture/list/${id}`).then((response) => {\n        dispatch({\n          type: 'FIXTURE_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data)\n      })\n    }\n  }\n\n  export const getplayerreport = (seriesid, fixtureid) => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}`).then((response) => {\n        dispatch({\n          type: 'PLAYER_REPORT',\n          data: response.data.data\n        })\n        console.table(response.data.data)\n      })\n    }\n  }\n  export const collectseriesid = (seriesid) => {\n   \n    console.log(seriesid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_SERIESID',\n        data:seriesid\n      })\n    }\n  }\n  \n  export const collectfixtureid = (fixtureid) => {\n      console.log(fixtureid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FIXTUREID',\n        data:fixtureid\n      })\n    }\n  }\n\n//cricket/reports/playerReport?series_id=1&fixture_id=730&download=true\n  export const getcricketplayerdownload = (seriesid, fixtureid) => {\n    return async () => {\n            await http\n        .get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}&download=true`, { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'cricketplayerreport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getCricketContestadd = (id) => {\n    return (dispatch) => {\n      http\n        .post('/cricket/contest_prizes/list', id)\n        .then((response) => {\n          dispatch({\n            type: 'CRICKET_CONTEST_PRIZE_ADD',\n            data: response.data.data\n          })\n          console.log(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  export const addfile = (params) => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n      await http.post('/squadUpload', params).then((response) => {\n        notifySuccessadd(response.data.message)\n        dispatch({\n          type: 'ADD_FILE',\n          data: response.data.message\n        })\n      }).catch((e) => {\n        console.log(\"Error in Feed Post: \", e)\n        // dispatch(addPostFail())\n      })\n    }\n  }"],"sourceRoot":""}