{"version":3,"sources":["views/Redeem/list/columns.js","views/Redeem/list/Table.js","views/Redeem/store/actions/index.js","views/Redeem/list/index.js","configs/httpConfig.js"],"names":["columns","name","minWidth","selector","sortable","cell","row","redeem_prizes_id","user_id","redeem_prizes_name","redeem_prizes_value","redeem_prizes_caption","contest_type","invite_id","series_name","redeem_prizes_status","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","useState","dropdownOpen","setDropdownOpen","className","Row","Col","xl","Label","for","CustomInput","type","id","value","onChange","style","width","padding","backgroundPosition","Input","e","target","ButtonDropdown","isOpen","toggle","DropdownToggle","color","caret","DropdownMenu","DropdownItem","onClick","http","get","responseType","then","response","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","Date","valueOf","body","appendChild","click","tag","ContestsList","dispatch","useDispatch","store","useSelector","state","redeem","setSearchTerm","listData","setListData","currentPage","setCurrentPage","setRowsPerPage","useEffect","params","console","log","filterList","filter","userItem","toLowerCase","includes","Card","noHeader","pagination","subHeader","responsive","paginationServer","paginationPerPage","paginationDefaultPage","sortIcon","paginationComponent","count","Number","Math","ceil","length","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","q","isFiltered","Object","keys","some","k","slice","dataToRender","subHeaderComponent","parseInt","currentTarget","val","UsersList","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config"],"mappings":"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","file":"static/js/205.27521f90.chunk.js","sourcesContent":["export const columns = [\n  {\n    name: 'ID',\n    minWidth: '220px',\n    selector: 'id',\n    sortable: true,\n    cell: (row) => row.redeem_prizes_id\n  },\n  {\n    name: 'Redeem ID',\n    minWidth: '220px',\n    selector: 'id',\n    sortable: true,\n    cell: (row) => row.user_id\n    \n  },\n  {\n    name: 'Name',\n    minWidth: '220px',\n    selector: 'type',\n    sortable: true,\n    cell: (row) => row.redeem_prizes_name\n  },\n  {\n    name: 'Value',\n    minWidth: '220px',\n    selector: 'name',\n    sortable: true,\n    cell: (row) => row.redeem_prizes_value\n  },\n  {\n    name: 'Type',\n    minWidth: '220px',\n    selector: 'id',\n    sortable: true,\n    cell: (row) => row.redeem_prizes_caption\n  },\n \n  \n  {\n    name: 'Email',\n    minWidth: '160px',\n    selector: 'type',\n    sortable: true,\n    cell: (row) => row.contest_type\n  },\n  {\n    name: 'Phone Number',\n    minWidth: '160px',\n    selector: 'type',\n    sortable: true,\n    cell: (row) => row.contest_type\n  },\n  {\n    name: 'Start Date',\n    minWidth: '160px',\n    selector: 'invite_id',\n    sortable: true,\n    cell: (row) => row.invite_id\n  },\n  {\n    name: 'End Date',\n    minWidth: '160px',\n    selector: 'series_name',\n    sortable: true,\n    cell: (row) => row.series_name\n  },\n  {\n    name: 'Status',\n    minWidth: '160px',\n    selector: 'fixture_name',\n    sortable: true,\n    cell: (row) => row.redeem_prizes_status\n  }\n  // {\n  //   name: 'Transaction Time',\n  //   minWidth: '160px',\n  //   selector: 'fixture_name',\n  //   sortable: true\n    \n  // }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Invoice List Sidebar\n\n// ** Columns\nimport { columns } from './columns'\n// import AddQuiz from '../add'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport {\n  Card,\n  Input,\n  Row,\n  Col,\n  Label,\n  CustomInput,\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport {\n  getAllREDEEM,\n  // getAllContests,\n  getContestsListCSV,\n  getContestsListPDF\n} from '../store/actions'\n\n// ** Table Header\nconst CustomHeader = ({\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n  return (\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <Label for=\"rows-per-page\">Show</Label>\n            <CustomInput\n              className=\"form-control mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{\n                width: '5rem',\n                padding: '0 0.8rem',\n                backgroundPosition:\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n              }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </CustomInput>\n            <Label for=\"rows-per-page\">Entries</Label>\n          </div>\n        </Col>\n        <Col\n          xl=\"6\"\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\n        >\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1\">\n            <Label className=\"mb-0\" for=\"search-invoice\">\n              Search:\n            </Label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ml-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n          <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n            <DropdownToggle color=\"primary\" caret>\n              Export Contests List\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={getContestsListPDF()} tag=\"button\">\n                Export as PDF\n              </DropdownItem>\n              <DropdownItem onClick={getContestsListCSV()} tag=\"button\">\n                Export as CSV\n              </DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst ContestsList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.redeem)\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  // const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  // ** Get data on mount\n  useEffect(() => {\n    //  dispatch(getAllContests())\n     dispatch(getAllREDEEM())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (store.data) {\n      setListData(store.data)\n    }\n  }, [store])\n\n  // useEffect(() => {\n  //   if (store.data) {\n  //     setListData(store.data)\n  //   }\n  // }, [store])\n\n  // ** User filter options\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    setRowsPerPage(value)\n    setCurrentPage(1)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n  }\n\n  useEffect(() => {\n    if (searchTerm) {\n      const filterList = store.data.filter((userItem) => {\n        \n        if (userItem.redeem_prizes_name) {\n          return userItem.redeem_prizes_name.toLowerCase().includes(searchTerm.toLowerCase())\n        }\n      })\n\n      setListData(filterList)\n      setCurrentPage(1)\n    } else {\n      setListData(store.data)\n    }\n  }, [searchTerm])\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(listData.length / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    // if (store.allContests.length > 0) {\n    //   return store.allContests\n    // } else\n    if (listData.length === 0 && isFiltered) {\n      return []\n    } else {\n      return listData.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          paginationPerPage={rowsPerPage}\n          paginationDefaultPage={currentPage}\n          sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              handlePerPage={handlePerPage}\n              rowsPerPage={rowsPerPage}\n              searchTerm={searchTerm}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default ContestsList\n","import http from '../../../../configs/httpConfig'\n\nexport const getAllContests = () => {\n  return async (dispatch) => {\n    await http.get('/admin_contests/list').then((response) => {\n      console.log(\"Aji\", response.data)\n      dispatch({\n        type: 'GET_ALL_CONTESTS',\n        data: response.data.data\n      })\n    })\n  }\n}\n// export const getAllContestss = () => {\n//   return async (dispatch) => {\n//     await http.get('/redeem_prizes/list').then((response) => {\n//       dispatch({\n//         type: 'GET_ALL_CONTESTS',\n//         data: response.data.data\n//       })\n//     })\n//   }\n// }\nexport const getAllREDEEM = (params) => {\n  return async (dispatch) => {\n    await http.get('/redeem_prizes/list', { params }).then((response) => {\n      dispatch({\n        type: 'GET_ALL_REDEEM',\n        data: response.data,\n        params\n      })\n      console.log(\"Aj\", response.data)\n      console.log(params)\n    })\n  }\n}\n\nexport const getContestsListPDF = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_pdf', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.pdf`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\nexport const getContestsListCSV = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_csv', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.csv`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance "],"sourceRoot":""}