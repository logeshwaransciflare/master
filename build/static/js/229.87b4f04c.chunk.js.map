{"version":3,"sources":["views/testingg/Tes.js","@core/components/repeater/index.js"],"names":["AddQuestions","stepper","useForm","register","errors","handleSubmit","trigger","control","store","useSelector","state","quiz","addedQuizID","lang_id","console","log","useState","count","setCount","langOptions","value","label","className","onSubmit","isObjEmpty","next","i","tag","Col","md","for","type","id","name","placeholder","innerRef","required","classnames","check","inline","defaulChecked","isClearable","as","Select","rules","options","classNamePrefix","theme","selectThemeColors","Ripple","color","onClick","then","res","param","quiz_id","translation_quiz_questions","master_language_id","translation_quiz_question","document","getElementById","quiz_question_duration","quiz_question_sno","quiz_question_answers","translation_quiz_answers","translation_quiz_answer","quiz_answer_sno","quiz_answer_correct","querySelector","size","Repeater","props","children","rest","Tag","items","push","defaultProps"],"mappings":"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","file":"static/js/229.87b4f04c.chunk.js","sourcesContent":["import { Fragment, useState } from 'react'\r\n// import { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport Select from 'react-select'\r\nimport { isObjEmpty, selectThemeColors } from '@utils'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport Repeater from '@components/repeater'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\nimport { Plus } from 'react-feather'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst AddQuestions = ({ stepper }) => {\r\n  const { register, errors, handleSubmit, trigger, control } = useForm()\r\n  // const history = useHistory()\r\n  const store = useSelector(state => state.quiz)\r\n  const { addedQuizID, lang_id } = store\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n  console.log(\"id\", lang_id)\r\n\r\n  const [count, setCount] = useState(1)\r\n  const increaseCount = () => {\r\n    // if (count === 5) return\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const langOptions = [\r\n    { value: '1', label: 'English' },\r\n    { value: '2', label: 'Arabic' }\r\n  ]\r\n\r\n  const submitQuestion = (id) => {\r\n    console.log(addedQuizID)\r\n    trigger().then((res) => {\r\n      if (res) {\r\n        // const param = {\r\n        //   quiz_id: addedQuizID,\r\n        //   translation_quiz_questions: [\r\n        //     {\r\n        //       master_language_id: lang_id,\r\n        //       translation_quiz_question: document.getElementById(`question-${id}`).value\r\n        //     },\r\n        //     {\r\n        //       master_language_id: \"2\",\r\n        //       translation_quiz_question: document.getElementById(`question-${id}`).value\r\n        //     }\r\n        //   ],\r\n        //   // quiz_question: document.getElementById(`question-${id}`).value,\r\n        //   quiz_question_duration: '30',\r\n        //   quiz_question_sno: id,\r\n        //   quiz_question_answers: [\r\n        //     {\r\n        //       quiz_answer: document.getElementById(`answer1-${id}`).value,\r\n        //       quiz_answer_sno: '1',\r\n        //       quiz_answer_correct:\r\n        //         document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n        //           .value === '1'\r\n        //           ? 1\r\n        //           : 0\r\n        //     },\r\n        //     {\r\n        //       quiz_answer: document.getElementById(`answer2-${id}`).value,\r\n        //       quiz_answer_sno: '2',\r\n        //       quiz_answer_correct:\r\n        //         document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n        //           .value === '2'\r\n        //           ? 1\r\n        //           : 0\r\n        //     },\r\n        //     {\r\n        //       quiz_answer: document.getElementById(`answer3-${id}`).value,\r\n        //       quiz_answer_sno: '3',\r\n        //       quiz_answer_correct:\r\n        //         document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n        //           .value === '3'\r\n        //           ? 1\r\n        //           : 0\r\n        //     },\r\n        //     {\r\n        //       quiz_answer: document.getElementById(`answer4-${id}`).value,\r\n        //       quiz_answer_sno: '4',\r\n        //       quiz_answer_correct:\r\n        //         document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n        //           .value === '4'\r\n        //           ? 1\r\n        //           : 0\r\n        //     }\r\n        //   ]\r\n        // }\r\n        const param = {\r\n          quiz_id: addedQuizID,\r\n          translation_quiz_questions: [\r\n            {\r\n              master_language_id: lang_id,\r\n              translation_quiz_question: document.getElementById(`question-${id}`).value\r\n            }\r\n          ],\r\n          quiz_question_duration: '30',\r\n          quiz_question_sno: id,\r\n          quiz_question_answers: [\r\n            {\r\n              translation_quiz_answers:[\r\n                {\r\n                  master_language_id:lang_id,\r\n                  translation_quiz_answer: document.getElementById(`answer1-${id}`).value\r\n                }\r\n              ],\r\n            quiz_answer_sno: '1',\r\n           quiz_answer_correct:\r\n           document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n           .value === '1'\r\n           ? 1\r\n           : 0\r\n           },\r\n          {\r\n            translation_quiz_answers:[\r\n              {\r\n                master_language_id:lang_id,\r\n                translation_quiz_answer: document.getElementById(`answer2-${id}`).value\r\n              }\r\n            ],\r\n          quiz_answer_sno: '2',\r\n         quiz_answer_correct:\r\n         document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n         .value === '1'\r\n         ? 1\r\n         : 0\r\n         },\r\n         {\r\n          translation_quiz_answers:[\r\n            {\r\n              master_language_id:lang_id,\r\n              translation_quiz_answer: document.getElementById(`answer3-${id}`).value\r\n            }\r\n          ],\r\n        quiz_answer_sno: '3',\r\n       quiz_answer_correct:\r\n       document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n       .value === '1'\r\n       ? 1\r\n       : 0\r\n       },\r\n       {\r\n        translation_quiz_answers:[\r\n          {\r\n            master_language_id:lang_id,\r\n            translation_quiz_answer: document.getElementById(`answer4-${id}`).value\r\n          }\r\n        ],\r\n      quiz_answer_sno: '4',\r\n     quiz_answer_correct:\r\n     document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n     .value === '1'\r\n     ? 1\r\n     : 0\r\n     }\r\n    ]}\r\n    \r\n        // dispatch(addQuestion(param))\r\n        console.log(param)\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-header\">\r\n        <h5 className=\"mb-0\">Questions</h5>\r\n        <small>Enter Questions.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Repeater count={count}>\r\n          {(i) => (\r\n            <li key={i} className=\"list-unstyled\">\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"12\">\r\n                  <Label className=\"form-label\" for={`question-${i}`}>\r\n                    Quiz question\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id={`question-${i}`}\r\n                    name={`question-${i}`}\r\n                    placeholder=\"Who is Lionel Messi?\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`question-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\r\n                    Answer 1\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer1-${i}`}\r\n                    id={`answer1-${i}`}\r\n                    placeholder=\"Cricketer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer1-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          defaulChecked\r\n                          value=\"1\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\r\n                    Answer2\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer2-${i}`}\r\n                    id={`answer2-${i}`}\r\n                    placeholder=\"Footballer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer2-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          value=\"2\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer3-${i}`}>\r\n                    Answer 3\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer3-${i}`}\r\n                    id={`answer3-${i}`}\r\n                    placeholder=\"VolleyBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer3-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          value=\"3\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer4-${i}`}>\r\n                    Answer 4\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer4-${i}`}\r\n                    id={`answer4-${i}`}\r\n                    placeholder=\"BasketBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer4-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          value=\"4\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>  \r\n              <FormGroup tag={Col} md=\"3\">\r\n            <Label className=\"form-label\" for=\"quiz_lang\">\r\n              Quiz lang\r\n            </Label>\r\n            <Controller\r\n              isClearable\r\n              as={Select}\r\n              id=\"quiz_lang\"\r\n              control={control}\r\n              name=\"quiz_lang\"\r\n              rules={{ required: true }}\r\n              options={langOptions}\r\n              className={classnames('react-select', {\r\n                'is-invalid': errors['quiz_lang']\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              theme={selectThemeColors}\r\n            />\r\n          </FormGroup>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"6\">\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <Button.Ripple\r\n                      type=\"button\"\r\n                      color=\"primary\"\r\n                      className=\"btn-next\"\r\n                      onClick={() => submitQuestion(i)}\r\n                    >\r\n                      <span className=\"align-middle d-sm-inline-block d-none\">\r\n                        Submit Questions\r\n                      </span>\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n            </li>\r\n          )}\r\n        </Repeater>\r\n        <div className=\"d-flex justify-content-between\">\r\n          {count <= 30 && (\r\n            <Button.Ripple\r\n              className=\"btn-icon\"\r\n              color=\"primary\"\r\n              onClick={increaseCount}\r\n            >\r\n              <Plus size={14} />\r\n              <span className=\"align-middle ml-25\">Add New Question</span>\r\n            </Button.Ripple>\r\n          )}\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddQuestions\r\n\r\n\r\n// const param = {\r\n//   quiz_id: addedQuizID2,\r\n//   translation_quiz_questions: [\r\n//     {\r\n//       master_language_id: en,\r\n//       translation_quiz_question: document.getElementById(`question-${id}`).value\r\n//     }\r\n//   ],\r\n//   quiz_question_duration: '30',\r\n//   quiz_question_sno: id,\r\n//   quiz_question_answers: [\r\n//     {\r\n//       translation_quiz_answers:[\r\n//         {\r\n//           master_language_id:lang_id,\r\n//           translation_quiz_answer: document.getElementById(`answer1-${id}`).value,\r\n//         }\r\n//       ],\r\n//     quiz_answer_sno: '1',\r\n//    quiz_answer_correct:\r\n//    document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n//    .value === '1'\r\n//    ? 1\r\n//    :0\r\n//    },\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Repeater = (props) => {\r\n  // ** Props\r\n  const { count, tag, children, ...rest } = props\r\n\r\n  // ** Custom Tag\r\n  const Tag = tag\r\n\r\n  // ** Default Items\r\n  const items = []\r\n\r\n  // ** Loop passed count times and push it in items Array\r\n  for (let i = 0; i < count; i++) {\r\n    items.push(children(i))\r\n  }\r\n\r\n  return <Tag {...rest}>{items}</Tag>\r\n}\r\n\r\n// ** PropTypes\r\nRepeater.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  tag: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nRepeater.defaultProps = {\r\n  tag: 'div'\r\n}\r\n\r\nexport default Repeater\r\n"],"sourceRoot":""}