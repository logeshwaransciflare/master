{"version":3,"sources":["views/PrizeMaster/CricketPrizeMaster/edit/index.js","@core/components/repeater/index.js"],"names":["VerticalForm","store","useSelector","state","prizemaster","useForm","defaultValues","reactSelect","register","errors","handleSubmit","view_cricket_contest_prize","data","get_cricket_prize","useState","editcontestprizeform","setEditcontestprizeform","dat","setDat","sender","length","count","arr","useEffect","contest_id","name","caption","type","value","prize_rank","assets_url","onSubmit","e","preventDefault","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","uploadImage","target","files","base64","index","element","push","console","log","tag","sm","for","id","innerRef","required","invalid","onChange","placeholder","send_mail","i","className","md","Ripple","color","onClick","Repeater","props","children","rest","Tag","items","defaultProps"],"mappings":"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","file":"static/js/224.7c1249b9.chunk.js","sourcesContent":["import {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label,\n  CustomInput\n  \n} from 'reactstrap' \nimport React, { useState, useEffect } from 'react'\n// import { viewcricketcontestprize, editcricketcontestprize } from '../../store/actions'\nimport { useSelector } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport Repeater from '@components/repeater'\nconst VerticalForm = () => {\n\n    const defaultValues = {\n      reactSelect: null\n    }\n  \n  // const dispatch = useDispatch()\n  const store = useSelector(state => state.prizemaster)\n  const { register, errors, handleSubmit } = useForm({defaultValues})\n  const {view_cricket_contest_prize, get_cricket_prize} = store\n  const data = get_cricket_prize.data[2]\n  const [editcontestprizeform, setEditcontestprizeform] = useState()\n  const [dat, setDat] = useState(data)\n  const sender = [111, 222, 123, 444]\n  const [count] = useState(sender.length)\n  const arr = []\n  // const [arr, setArr] = useState([])\n  // useEffect(() => {\n  //   dispatch(viewcricketcontestprize)\n  \n  // }, [view_cricket_contest_prize])\n\n  // const increaseCount = () => {\n  //   setCount(count + 1)\n  // }\n\n  useEffect(() => {\n    setEditcontestprizeform({contest_id:view_cricket_contest_prize?.contest_id, name:view_cricket_contest_prize?.name, caption:view_cricket_contest_prize?.caption, type:view_cricket_contest_prize?.type, value:view_cricket_contest_prize?.value, prize_rank:view_cricket_contest_prize?.prize_rank, assets_url:view_cricket_contest_prize?.assets_url })\n  }, [view_cricket_contest_prize])\n  const onSubmit = (e) => {\n    e.preventDefault()\n    // dispatch(editcricketcontestprize(view_cricket_contest_prize.id, editcontestprizeform))\n  }\n\n  const convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader()\n      fileReader.readAsDataURL(file)\n      \n      fileReader.onload = () => {\n        resolve(fileReader.result)\n      }\n      \n      fileReader.onerror = (error) => {\n        reject(error)\n      }\n    })\n  }\n\n  const uploadImage = async (e) => {\n    const file = e.target.files[0]\n    const base64 = await convertBase64(file)\n    setEditcontestprizeform({ ...editcontestprizeform, assets_url: base64 })\n  }\n\n    for (let index = 0; index < sender.length; ++index) {\n      const element = sender[index]\n      arr.push(element)\n      console.log(element)\n      //  setArr(...arr, element)        \n      }\n      \n      console.log(sender[0])      \n      console.log(arr)\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag=\"h4\">Edit Cricket Prizes</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Row>\n            {data.type === 'prizes' ? \n          <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">Value</Label>\n                <Input\n                  type=\"number\"\n                  name=\"value\"\n                  id=\"value\"\n                  innerRef={register({ required: true })}\n                  invalid={errors.value && true}\n                  // value={editcontestprizeform?.contest_id}\n                  value={dat.value}\n                  onChange={(e) => setEditcontestprizeform({ ...editcontestprizeform, contest_id: e.target.value })}\n                  placeholder=\"Enter value\"\n                />\n              </FormGroup>\n            </Col>\n: ''}\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label>Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  innerRef={register({ required: true })}\n                  invalid={errors.name && true}\n                  // value={editcontestprizeform?.name}\n                  value={dat.name}\n                  onChange={(e) => setDat({ ...dat, name: e.target.value })}\n                  placeholder=\"Enter Product Name\"\n                />\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <Label for=\"nameVertical\">Caption</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"nameVertical\"\n                  // value={editcontestprizeform?.caption}\n                  value={dat.caption}\n                  onChange={(e) => setEditcontestprizeform({ ...editcontestprizeform, caption: e.target.value })}\n                  placeholder=\"Enter Product Name\"\n                />\n              </FormGroup>\n            </Col>\n            {data.type === ('coupons' || 'prizes') ?\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"exampleCustomFileBrowser\">Custom File Input</Label>\n                <CustomInput\n                  type=\"file\"\n                  id=\"exampleCustomFileBrowser\"\n                  name=\"customFile\"\n                  value={editcontestprizeform?.assets_url}\n                  onChange={(e) => uploadImage(e)}\n                />\n              </FormGroup>\n            </Col> : ''\n}\n\n            { data.type === 'coupons' && data.send_mail !== null ?\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">Send mail</Label>\n                <Input\n                  type=\"number\"\n                  name=\"Email\"\n                  id=\"EmailVertical\"\n                  value={dat.send_mail}\n                  onChange={(e) => setEditcontestprizeform({ ...editcontestprizeform, value: e.target.value })}\n                  placeholder=\"Enter No of Coins \"\n                />\n              </FormGroup>\n            </Col>     : ''\n}\n{data.send_mail !== null && sender.length !== 0 ? \n<Col>\n<Repeater count={count}>          \n          {i => (                        \n            <Form key={i}>\n              <Row className='justify-content-between align-items-center ml-1'>\n                <Col md={4}>\n                  <FormGroup>\n                    <Label for={`item-name-${i}`}>Item Name</Label>\n                    <Input\n                     type='text' \n                     value = {arr[i]}\n                     id={`item-name-${i}`} \n                     placeholder='Sciflare Fantasy Admin' \n                     />\n                  </FormGroup>\n                </Col>      \n                {/* <Col md={2}>\n                  <Button.Ripple color='danger' className='text-nowrap px-1' onClick={deleteForm} outline>\n                    <X size={14} className='mr-50' />\n                    <span>Delete</span>\n                  </Button.Ripple>\n                </Col>                       */}\n              </Row>\n            </Form>\n          )}\n        </Repeater>\n        {/* <Button.Ripple className='btn-icon ml-2 mb-1' color='primary' onClick={increaseCount}>\n          <Plus size={14} />\n          <span className='align-middle ml-25'>Add New</span>\n        </Button.Ripple> */}\n        </Col> : '' }\n            <Col sm=\"12\">\n              <FormGroup className=\"d-flex mb-0\">\n                <Button.Ripple\n                  className=\"mr-1\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={(e) => onSubmit(e)}\n                >\n                  Submit\n                </Button.Ripple>\n                {/* <Button.Ripple\n                  outline\n                  color=\"secondary\"\n                  type=\"reset\"\n                  onClick={(e) => onclear(e)}\n                >\n                  Reset\n                </Button.Ripple> */}\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n      </CardBody>\n    </Card>\n  )\n}\nexport default VerticalForm\n\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Repeater = (props) => {\r\n  // ** Props\r\n  const { count, tag, children, ...rest } = props\r\n\r\n  // ** Custom Tag\r\n  const Tag = tag\r\n\r\n  // ** Default Items\r\n  const items = []\r\n\r\n  // ** Loop passed count times and push it in items Array\r\n  for (let i = 0; i < count; i++) {\r\n    items.push(children(i))\r\n  }\r\n\r\n  return <Tag {...rest}>{items}</Tag>\r\n}\r\n\r\n// ** PropTypes\r\nRepeater.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  tag: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nRepeater.defaultProps = {\r\n  tag: 'div'\r\n}\r\n\r\nexport default Repeater\r\n"],"sourceRoot":""}