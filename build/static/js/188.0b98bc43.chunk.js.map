{"version":3,"sources":["views/ManageCoins/bonus/list/columns.js","views/ManageCoins/bonus/store/actions/index.js","views/ManageCoins/bonus/list/Table.js","views/ManageCoins/bonus/list/index.js","configs/httpConfig.js"],"names":["statusObj","CLOSE","OPEN","getAllData","params","dispatch","a","http","get","then","response","type","data","categoryOptions","value","label","MySwal","withReactContent","Swal","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","className","Row","Col","xl","Label","for","CustomInput","id","onChange","style","width","padding","backgroundPosition","Input","e","target","Button","Ripple","color","onClick","UsersList","useDispatch","store","useSelector","state","quiz","history","useHistory","useState","setSearchTerm","listData","setListData","currentPage","setCurrentPage","setRowsPerPage","currentCategory","setCurrentCategory","currentRole","currentPlan","number","currentStatus","useEffect","quiz_category","record_count","records","columnsList","useCallback","handleConfirmText","name","minWidth","selector","sortable","cell","row","quiz_id","quiz_name","Badge","quiz_status","pill","href","columns","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","delete","catch","err","console","log","deleteQuiz","Card","CardHeader","CardTitle","tag","CardBody","md","isClearable","theme","selectThemeColors","classNamePrefix","options","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationPerPage","paginationDefaultPage","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","role","status","q","isFiltered","Object","keys","some","k","length","slice","dataToRender","subHeaderComponent","push","parseInt","currentTarget","val","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config"],"mappings":"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","file":"static/js/188.0b98bc43.chunk.js","sourcesContent":["// ** React Imports\r\n\r\n// ** Custom Components\r\n\r\n// ** Store & Actions\r\n\r\n// ** Third Party Components\r\nimport { Badge } from 'reactstrap'\r\nimport { Edit, Trash2 } from 'react-feather'\r\n\r\n// ** Renders Client Columns\r\n\r\nconst statusObj = {\r\n  CLOSE: 'light-warning',\r\n  OPEN: 'light-success'\r\n}\r\n\r\nexport const columns = (handleConfirmText) => [\r\n  {\r\n    name: 'ID',\r\n    minWidth: '320px',\r\n    selector: 'id',\r\n    sortable: true,\r\n    cell: (row) => row.quiz_id\r\n  },\r\n  {\r\n    name: 'Name',\r\n    minWidth: '320px',\r\n    selector: 'email',\r\n    sortable: true,\r\n    cell: (row) => row.quiz_name\r\n  },\r\n  {\r\n    name: 'No of players',\r\n    minWidth: '320px',\r\n    selector: 'email',\r\n    sortable: true,\r\n    cell: (row) => row.quiz_name\r\n  },\r\n  {\r\n    name: 'No of Quizes',\r\n    minWidth: '320px',\r\n    selector: 'email',\r\n    sortable: true,\r\n    cell: (row) => row.quiz_name\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '138px',\r\n    selector: 'status',\r\n    sortable: true,\r\n    cell: (row) => (\r\n      <Badge\r\n        className=\"text-capitalize\"\r\n        color={statusObj[row.quiz_status]}\r\n        pill\r\n      >\r\n        {row.quiz_status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Action',\r\n    minWidth: '130px',\r\n    selector: 'action',\r\n    cell: (row) => (\r\n      <div className=\"column-action\">\r\n        <a href={`/quiz/edit/${row.quiz_id}`}>\r\n          <Edit width=\"17\" className=\"cursor-pointer\" />\r\n        </a>\r\n        <Trash2\r\n          width=\"17\"\r\n          className=\"ml-2 cursor-pointer\"\r\n          onClick={() => handleConfirmText(row.quiz_id)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","import http from '../../../../../configs/httpConfig'\r\n\r\n// ** Get all Data\r\nexport const getAllData = (params) => {\r\n  return async (dispatch) => {\r\n    await http.get('/quiz/list', { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_ALL_DATA',\r\n        data: response.data,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Add new quiz\r\nexport const addQuiz = (quiz) => {\r\n  return (dispatch) => {\r\n    http\r\n      .post('/quiz/add', quiz)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_ADD',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const addQuestion = (question) => {\r\n  return (dispatch) => {\r\n    http\r\n      .post('/quiz/questions/add', question)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_QUESTION_ADD',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const resetQuizQuestions = () => ({\r\n  type: 'RESET_QUESTIONS_ADDED'\r\n})\r\n\r\nexport const deleteQuiz = (id) => {\r\n  return (dispatch) => {\r\n    http\r\n      .delete(`/quiz/delete/${id}`)\r\n      .then(() => {\r\n        dispatch(getAllData())\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizQuestions = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/questions/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_QUESTIONS_DATA',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const resetQuizEditQuestions = () => ({\r\n  type: 'RESET_QUIZ_QUESTIONS'\r\n})\r\n\r\nexport const quizEditQuestions = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditQuestionsEach = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/questions/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_QUESTIONS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect, useCallback } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n// ** Invoice List Sidebar\r\n\r\n// ** Columns\r\nimport { columns } from './columns'\r\n// import AddQuiz from '../add'\r\n\r\n// ** Store & Actions\r\nimport { getAllData, deleteQuiz } from '../store/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  CustomInput,\r\n  Button\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst categoryOptions = [\r\n  { value: '', label: 'Select Category' },\r\n  { value: 'Cricket', label: 'Cricket' },\r\n  { value: 'Football', label: 'Football' },\r\n  { value: 'Basketball', label: 'Basketball' }\r\n]\r\nconst MySwal = withReactContent(Swal)\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <Label for=\"rows-per-page\">Show</Label>\r\n            <CustomInput\r\n              className=\"form-control mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{\r\n                width: '5rem',\r\n                padding: '0 0.8rem',\r\n                backgroundPosition:\r\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </CustomInput>\r\n            <Label for=\"rows-per-page\">Entries</Label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1\">\r\n            <Label className=\"mb-0\" for=\"search-invoice\">\r\n              Search:\r\n            </Label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ml-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button.Ripple color=\"primary\" onClick={toggleSidebar}>\r\n            Add\r\n          </Button.Ripple>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.quiz)\r\n  const history = useHistory()\r\n  // ** States\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [listData, setListData] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  // const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentCategory, setCurrentCategory] = useState({\r\n    value: '',\r\n    label: 'Select Category'\r\n  })\r\n  const [currentRole] = useState({\r\n    value: '',\r\n    label: 'Select Role'\r\n  })\r\n  const [currentPlan] = useState({\r\n    value: '',\r\n    label: 'Select Plan'\r\n  })\r\n  const [currentStatus] = useState({\r\n    value: '',\r\n    label: 'Select Status',\r\n    number: 0\r\n  })\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => history.push('/quiz_add')\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    let params = {}\r\n    if (currentCategory.value) params = { quiz_category: currentCategory.value }\r\n    dispatch(getAllData(params))\r\n  }, [dispatch, store.data.record_count, currentCategory.value])\r\n\r\n  useEffect(() => {\r\n    if (store.data.records) {\r\n      setListData(store.data.records)\r\n    }\r\n  }, [store.data.records])\r\n\r\n  const handleConfirmText = (id) => {\r\n    return MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ml-1'\r\n      },\r\n      buttonsStyling: false\r\n    }).then(function (result) {\r\n      if (result.value) {\r\n        dispatch(deleteQuiz(id))\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Deleted!',\r\n          text: 'deleted successfully',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // const handleDelete = (id) => {\r\n  //   dispatch(deleteQuiz(id))\r\n  // }\r\n\r\n  const columnsList = useCallback(columns(handleConfirmText), [])\r\n\r\n  // ** User filter options\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setRowsPerPage(value)\r\n    setCurrentPage(1)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n  }\r\n\r\n  const handleCurrentCategory = (val) => {\r\n    setCurrentCategory(val)\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.data.record_count / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={\r\n          'pagination react-paginate justify-content-end my-2 pr-1'\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      currentPlan: currentPlan.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    // if (store.data.length > 0) {\r\n    //   return store.data\r\n    // } else\r\n    if (listData.length === 0 && isFiltered) {\r\n      return []\r\n    } else if (listData.length) {\r\n      return listData.slice(\r\n        (currentPage - 1) * rowsPerPage,\r\n        currentPage * rowsPerPage\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h4\">Search Filter</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md=\"3\">\r\n              <Select\r\n                isClearable={false}\r\n                theme={selectThemeColors}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                options={categoryOptions}\r\n                value={currentCategory}\r\n                onChange={(data) => {\r\n                  handleCurrentCategory(data)\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          subHeader\r\n          responsive\r\n          paginationServer\r\n          columns={columnsList}\r\n          sortIcon={<ChevronDown />}\r\n          className=\"react-dataTable\"\r\n          paginationPerPage={rowsPerPage}\r\n          paginationDefaultPage={currentPage}\r\n          paginationComponent={CustomPagination}\r\n          data={dataToRender()}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              toggleSidebar={toggleSidebar}\r\n              handlePerPage={handlePerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              searchTerm={searchTerm}\r\n              handleFilter={handleFilter}\r\n            />\r\n          }\r\n        />\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nconst UsersList = () => {\r\n  return (\r\n    <div className=\"app-user-list\">\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance "],"sourceRoot":""}