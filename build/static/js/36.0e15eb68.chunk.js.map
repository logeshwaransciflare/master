{"version":3,"sources":["configs/httpConfig.js","views/Toast.js","@core/components/breadcrumbs/index.js","@core/components/ui-loader/index.js","@core/components/repeater/index.js","views/Quiz/store/action/index.js","@core/components/wizard/index.js"],"names":["token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","className","size","color","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","BreadCrumbs","props","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","tag","to","active","UILoader","children","blocking","loader","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","Repeater","count","rest","items","i","push","getAllData","params","page","dispatch","console","log","type","http","get","then","response","data","getcricketquiz","getfootballquiz","getbasketballquiz","getLangcount","id","getLang","getengquestions","question","getlangs","addQuiz","quiz","post","catch","addQuestion","deleteQuiz","delete","err","getquizDetails","put","getQuizQuestions","resetQuizEditQuestions","quizEditQuestions","quizData","quizEditQuestionsEach","quiztogglestatus","status","e","Wizard","forwardRef","ref","steps","separator","options","useState","activeIndex","setActiveIndex","stepper","useEffect","Stepper","current","addEventListener","event","detail","indexStep","map","step","index","length","crossed","title","subtitle","content","displayName"],"mappings":"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","file":"static/js/36.0e15eb68.chunk.js","sourcesContent":["import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n//import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n  //UncontrolledButtonDropdown,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  //DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  <Link to={`/${breadCrumbParent}`}>{breadCrumbParent}</Link>\r\n                </BreadcrumbItem>\r\n                ) : ''\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Repeater = (props) => {\r\n  // ** Props\r\n  const { count, tag, children, ...rest } = props\r\n\r\n  // ** Custom Tag\r\n  const Tag = tag\r\n\r\n  // ** Default Items\r\n  const items = []\r\n\r\n  // ** Loop passed count times and push it in items Array\r\n  for (let i = 0; i < count; i++) {\r\n    items.push(children(i))\r\n  }\r\n\r\n  return <Tag {...rest}>{items}</Tag>\r\n}\r\n\r\n// ** PropTypes\r\nRepeater.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  tag: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nRepeater.defaultProps = {\r\n  tag: 'div'\r\n}\r\n\r\nexport default Repeater\r\n","import http from '../../../../configs/httpConfig'\r\nimport {notifyError, notifySuccessadd, notifySuccessdelete, notifyWarning} from \"../../../Toast\"\r\n\r\nexport const getAllQuizDataInit = () => ({\r\n  type: 'GET_ALL_DATA_INIT'\r\n})\r\n\r\n// ** Get all Data\r\nexport const getAllData = (params, page) => {\r\n  return async (dispatch) => {\r\n    console.log(page)\r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_ALL_DATA',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getcricketquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n    console.log(page)\r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Cricket&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_CRIC_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getfootballquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n    console.log(page)\r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Football&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_FOOT_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getbasketballquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n    console.log(page)\r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Basketball&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_BASK_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLangcount = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLang = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getengquestions = (question) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_QUESTION',\r\n      data:question\r\n    })\r\n  }\r\n}\r\n\r\nexport const getenganswers = (...answers) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_ANSWERS',\r\n      data:answers\r\n    })\r\n  }\r\n}\r\n\r\n// export const getquizdetails = (datas) => {\r\n//   return (dispatch) => {\r\n//     dispatch({\r\n//       type:'QUIZ_DETAILS',\r\n//       data:datas\r\n//     })\r\n//     console.log(datas)\r\n//   }\r\n// }\r\n\r\nexport const getlangs = () => {\r\n  return async (dispatch) => {\r\n    await http.get('/master/country/dropdownlist').then((response) => {\r\n      dispatch({\r\n        type: 'LANGS_ID',\r\n        data: response.data        \r\n      })\r\n      console.log(response)\r\n    })\r\n  }\r\n}\r\n// ** Add new quiz\r\nexport const addQuiz = (quiz) => {\r\n  return (dispatch) => {    \r\n    http\r\n      .post('/quiz/add', quiz)\r\n      .then((response) => {\r\n        console.log(response)\r\n        notifySuccessadd(response.data.message)        \r\n        dispatch({\r\n          type: 'QUIZ_ADD',\r\n          data: true\r\n        })\r\n      })\r\n      .catch(() => {\r\n        notifyError('failed to add')\r\n      })\r\n  }\r\n}\r\n\r\nexport const addQuizInit = () => ({\r\n  type: 'ADD_QUIZ_POST_INIT'\r\n})\r\n\r\nexport const addQuestion = (question) => {  \r\n  return (dispatch) => {\r\n    dispatch(addQuizInit())\r\n    http\r\n      .post('/quiz/questions/add', question)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_QUESTION_ADD',\r\n          data: response.data\r\n        })\r\n        console.log(response.data)\r\n      })\r\n      .catch(() => {\r\n        notifyWarning(\"failed to add\")  \r\n      })\r\n  }\r\n}\r\n\r\nexport const resetQuizQuestions = () => ({\r\n  type: 'RESET_QUESTIONS_ADDED'\r\n})\r\n\r\nexport const deleteQuiz = (id) => {\r\n  return (dispatch) => {\r\n    http\r\n      .delete(`/quiz/delete/${id}`)\r\n      .then(() => {\r\n        notifySuccessdelete('successfully delete')\r\n        dispatch(getAllData())\r\n      })\r\n      .catch((err) => {\r\n        notifyError('error')\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport const getViewInit = () => ({\r\n  type: 'DETAILS_VIEW_INIT'\r\n})\r\n\r\nexport const getquizDetails = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(getViewInit())\r\n   await http\r\n      .put(`/quiz/view/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_DET',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizQuestions = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/questions/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_QUESTIONS_DATA',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizAnswers = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/answers/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_ANSWERS_DATA',\r\n          data: response.data.data\r\n        })\r\n        console.log(response)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const resetQuizEditQuestions = () => ({\r\n  type: 'RESET_QUIZ_QUESTIONS'\r\n})\r\n\r\nexport const quizEditQuestions = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditQuestionsEach = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/questions/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_QUESTIONS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditAnswers = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/answers/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_ANSWERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const NUMBER_PLAYERS = (players) => {\r\n  return (dispatch) => {\r\n    http\r\n      .get('/quiz/players', players)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'NUMBER_PLAYERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quiztogglestatus = (id, status) => {\r\n  return async (dispatch) => {    \r\n    console.log(status)\r\n    // dispatch(getAllQuizDataInit())\r\n    await http.post(`quiz/toggle_status/${id}`).then((response) => {\r\n      notifySuccessadd(response.data.message)\r\n    dispatch({\r\n        type: 'QUIZ_TOGGLE_STATUS',\r\n        data: status\r\n      })            \r\n    }).catch((e) => {\r\n      notifyError(\"error\")\r\n      console.log(e)\r\n      console.log(\"Error in Feed Post: \", e)      \r\n    })\r\n  }\r\n}","// ** React Imports\r\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Stepper from 'bs-stepper'\r\nimport classnames from 'classnames'\r\nimport { PropTypes } from 'prop-types'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n// ** Styles\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\r\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\r\n\r\nconst Wizard = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const { type, className, steps, separator, options, instance } = props\r\n\r\n  // ** State\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n  // ** Vars\r\n  let stepper = null\r\n\r\n  // ** Step change listener on mount\r\n  useEffect(() => {\r\n    stepper = new Stepper(ref.current, options)\r\n\r\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\r\n      setActiveIndex(event.detail.indexStep)\r\n    })\r\n\r\n    if (instance) {\r\n      instance(stepper)\r\n    }\r\n  }, [])\r\n\r\n  // ** Renders Wizard Header\r\n  const renderHeader = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <Fragment key={step.id}>\r\n          {index !== 0 && index !== steps.length ? (\r\n            <div className=\"line\">{separator}</div>\r\n          ) : null}\r\n          <div\r\n            className={classnames('step', {\r\n              crossed: activeIndex > index,\r\n              active: index === activeIndex\r\n            })}\r\n            data-target={`#${step.id}`}\r\n          >\r\n            <button type=\"button\" className=\"step-trigger\">\r\n              <span className=\"bs-stepper-box\">\r\n                {step.icon ? step.icon : index + 1}\r\n              </span>\r\n              <span className=\"bs-stepper-label\">\r\n                <span className=\"bs-stepper-title\">{step.title}</span>\r\n                {step.subtitle ? (\r\n                  <span className=\"bs-stepper-subtitle\">{step.subtitle}</span>\r\n                ) : null}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Renders Wizard Content\r\n  const renderContent = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <div\r\n          className={classnames('content', {\r\n            'active dstepper-block': activeIndex === index\r\n          })}\r\n          id={step.id}\r\n          key={step.id}\r\n        >\r\n          {step.content}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={classnames('bs-stepper', {\r\n        [className]: className,\r\n        vertical: type === 'vertical',\r\n        'vertical wizard-modern': type === 'modern-vertical',\r\n        'wizard-modern': type === 'modern-horizontal'\r\n      })}\r\n    >\r\n      <div className=\"bs-stepper-header\">{renderHeader()}</div>\r\n      <div className=\"bs-stepper-content\">{renderContent()}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nWizard.displayName = 'Wizard'\r\n\r\nexport default Wizard\r\n\r\n// ** Default Props\r\nWizard.defaultProps = {\r\n  type: 'horizontal',\r\n  separator: <ChevronRight size={17} />,\r\n  options: {}\r\n}\r\n\r\n// ** PropTypes\r\nWizard.propTypes = {\r\n  type: PropTypes.string,\r\n  instance: PropTypes.func,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  separator: PropTypes.element,\r\n  steps: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      subtitle: PropTypes.string,\r\n      icon: PropTypes.any,\r\n      content: PropTypes.any.isRequired\r\n    })\r\n  ).isRequired\r\n}\r\n"],"sourceRoot":""}