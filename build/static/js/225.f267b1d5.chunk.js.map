{"version":3,"sources":["views/ManagePrize/prizedetail.js","configs/httpConfig.js","views/Toast.js","views/ManagePrize/store/actions/index.js"],"names":["Product","editpriz","useSelector","state","ecommerce","dispatch","useDispatch","useEffect","editprize","console","log","assets_url","className","md","xs","style","backgroundColor","src","alt","name","category","value","prizes_share","width","likes","created_on","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","size","color","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","getPrizes","page","http","get","then","res","type","data","id","prizesEdit","put","edit","catch","err","addprize","prize","dev","post","response","getWishlistItems","manageprizetoggle","status","e"],"mappings":"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","file":"static/js/225.f267b1d5.chunk.js","sourcesContent":["// ** React Imports\nimport { useEffect } from 'react'\n//import { Link } from 'react-router-dom'\nimport {editprize} from './store/actions'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { Heart } from 'react-feather'\n// ** Third Party Components\nimport {\n  Row,\n  Col,\n  CardText\n  \n} from 'reactstrap'\n\nconst Product = () => {\n  const store = useSelector(state => state.ecommerce)\n\n  const {editpriz} = store\n\n  const dispatch = useDispatch()\nuseEffect(() => {\n  dispatch(editprize())\n }, [])\nconsole.log(editpriz.assets_url)\n  return (\n    <Row className='my-2'>\n      <Col className='d-flex align-items-center justify-content-center mb-2 mb-md-0' md='5' xs='12'>\n        <div className='d-flex align-items-center justify-content-center' style={{backgroundColor:'black'}} >\n          <img className='img-fluid product-img' src={editpriz.assets_url} alt={editpriz.assets_url} />\n        </div>\n      </Col>\n      <Col md='7' xs='12'>\n        <h4>{editpriz.name}</h4>\n        <CardText>\n         <span className='text-success ml-25'>{editpriz.category}</span>\n        </CardText>\n        <div className='ecommerce-details-price d-flex flex-wrap mt-1'>\n          <h4 className='item-price mr-1'>  ${editpriz.value}</h4>\n        </div>\n        \n        <CardText>{editpriz.prizes_share}</CardText>\n        <CardText><Heart width=\"14\" />  {editpriz.likes}</CardText>\n        <CardText>{editpriz.created_on}</CardText>\n       \n      </Col>\n    </Row>\n  )\n}\n\nexport default Product \n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","import axios from 'axios'\nimport http from '../../../../configs/httpConfig'\nimport {notifySuccessadd, notifySuccessedit, notifyError, notifyWarning} from \"../../../Toast\" //notifySuccessdelete,\n// ** GET Products\n\nexport const getprizedatainit = () => ({\n  type: 'GET_ALL_PRIZE_INIT'\n})\nexport const getProducts = params => {\n  return dispatch => {\n    dispatch(getprizedatainit())\n    return http.get('/prizes/list', { params }).then(res => {\n      dispatch({ type: 'GET_PRODUCTS', data: res.data, params })\n      \n    })\n  }\n}\n\nexport const getPrizes = (page) => {\n  return (dispatch) => {\n    // dispatch(getprizedatainit())\n    return http.get(`/prizes/list?page=${page}`).then((res) => {\n      dispatch({ type: 'GET_PRIZES', data: res.data})\n      // console.log('tag', res.data)\n    })\n  }\n}\n\nexport const editprize = (id, prizesEdit) => {\n \n  return (dispatch) => {   \n    dispatch(getprizedatainit()) \n    http.put(`/prizes/view/${id}`, prizesEdit).then((res) => { \n      console.log(res)\n      dispatch({ type: 'EDIT_PRIZE',  data: res.data, prizesEdit })\n    })\n  }\n}\nexport const edit = (id, prizesEdit) => {\n return (dispatch) => {\n    http.put(`/prizes/edit/${id}`, prizesEdit).then((res) => { \n      console.log(res)\n       notifySuccessedit(res.data.message)\n      dispatch({ type: 'EDIT_PRIZES', data: res.data, prizesEdit })\n     console.log(\"this one\", res.data)\n    }).catch((err) => {\n      notifyWarning()\n      console.log(err)\n    })\n  }\n}\n\nexport const Delete = () => {\n  return (dispatch) => {\n    dispatch({\n      type:'PRIZE_DELETE'\n    })\n  } \n}\n \nexport const deleteprize = (id) => {\n  return (dispatch) => {\n    return http.delete(`/prizes/delete/${id}`).then((res) => {\n       // notifySuccessdelete()\n      console.log(id)\n      dispatch({ type: 'DELETE_PRIZE', data: res.data })\n      dispatch(getPrizes())\n     \n    }).catch(() => {\n      dispatch(Delete())\n      console.log(\"helo\")\n    })\n  }\n}\n\n//add prizes\nexport const addprize = (prize, dev) => {\n  return (dispatch) => {\n    http\n    .post('/prizes/add', prize, dev)\n    .then((response) => {\n         notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'QUIZ_QUESTION_ADD',\n        data: response.data\n      })    \n    })\n    .catch((response) => {      \n      notifyError(response.response.data.message)\n    })\n  }\n}\n// ** Add Item to Cart\nexport const addToCart = id => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/ecommerce/cart', { productId: id }).then(res => {\n      dispatch({ type: 'ADD_TO_CART', data: res.data })\n      dispatch(getProducts(getState().ecommerce.params))\n    \n    })\n  }\n}\n\n// ** GET Wishlist Items\nexport const getWishlistItems = () => {\n  return dispatch => {\n    return axios.get('/apps/ecommerce/wishlist').then(res => {\n      dispatch({ type: 'GET_WISHLIST', data: res.data })\n      console.log(\"hello\", res.data)\n    })\n  }\n}\n\n// ** DELETE Wishlist Item\nexport const deleteWishlistItem = id => {\n  return dispatch => {\n    return axios.delete(`/apps/ecommerce/wishlist/${id}`).then(res => {\n      dispatch({ type: 'DELETE_WISHLIST_ITEM', data: res.data })\n      dispatch(getWishlistItems())\n    })\n  }\n}\n\n// ** GET Cart Items\nexport const getCartItems = () => {\n  return dispatch => {\n    return axios.get('/apps/ecommerce/cart').then(res => {\n      dispatch({ type: 'GET_CART', data: res.data })\n    })\n  }\n}\nexport const quizEditQuestions = (id, prizesEdit) => {\n  return (dispatch) => {\n    http\n      .put(`/prize/edit/${id}`, prizesEdit)\n      .then((response) => {\n        dispatch({\n          type: 'PRIZES_EDIT',\n          data: response.data\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n// ** GET Single Product\nexport const getProduct = slug => {\n  return dispatch => {\n    return axios.get(`/apps/ecommerce/products/${slug}`).then(res => {\n      dispatch({ type: 'GET_PRODUCT', data: res.data })\n    })\n  }\n}\n\n// ** Add Item to Wishlist\nexport const addToWishlist = id => {\n  return dispatch => {\n    return axios.post('/apps/ecommerce/wishlist', { productId: id }).then(() => {\n      dispatch({ type: 'ADD_TO_WISHLIST' })\n    })\n  }\n}\n\n// ** DELETE Cart Items\nexport const deleteCartItem = id => {\n  return dispatch => {\n    return axios.delete(`/apps/ecommerce/cart/${id}`).then(res => {\n      dispatch({ type: 'DELETE_CART_ITEM', data: res.data })\n      dispatch(getCartItems())\n    })\n  }\n}\n\nexport const manageprizetoggle = (id, status) => {\n  console.log(id)  \n    return async (dispatch) => {\n      \n      await http.post(`/prizes/toggle_status/${id}`).then((response) => {\n        notifySuccessadd(response.data.message)\n        console.log(response)  \n      dispatch({\n          type: 'MANAGE_PRIZE_TOGGLE_STATUS',\n          data: status\n        })  \n     \n      }).catch((e) => {\n        console.log(e)\n        console.log(\"Error in Feed Post: \", e)\n        \n      })\n    }\n  }"],"sourceRoot":""}