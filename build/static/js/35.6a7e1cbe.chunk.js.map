{"version":3,"sources":["configs/httpConfig.js","views/Toast.js","@core/components/ui-loader/index.js","@core/components/app-collapse/index.js","views/banneruploaed/store/action/index.js","assets/images/boomer11sports/Football-yellow.svg","views/banneruploaed/footballbannerupload/list/Table.js","views/banneruploaed/footballbannerupload/list/index.js"],"names":["token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","className","size","color","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","UILoader","props","children","blocking","loader","tag","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","AppCollapse","data","type","accordion","active","toggle","titleKey","contentKey","useState","openCollapse","setOpenCollapse","handleCollapseToggle","id","arr","index","indexOf","includes","splice","push","map","item","title","content","collapsed","onMouseEnter","onClick","isOpen","getcricketSeries","dispatch","http","get","then","response","console","log","getfootballSeries","bannertoggle","status","post","catch","e","getbannerlistType","page","getfootballbannerlist","banneradd","banner","err","viewbanner","editbanner","params","getcricketTotal","getfootballTotal","DataTableTransaction","useDispatch","store","useSelector","state","history","useHistory","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchValue","setSearchValue","filteredData","setFilteredData","setStatus","useEffect","banner_status","columns","name","minWidth","selector","sortable","cell","row","pos","football_banner","from","src","assets_url","height","with","marginLeft","marginRight","logo","width","position","CustomInput","onChange","SwitchClick","inline","defaultChecked","pathname","editHandler","isloading","Row","xl","Col","Label","for","Input","bsSize","value","target","updatedData","length","filter","startsWith","toLowerCase","toString","placeholder","Card","sm","parseInt","handlePerPage","noHeader","pagination","paginationServer","customStyles","rows","minHeight","headCells","paddingLeft","paddingRight","cells","margin","sortIcon","paginationComponent","count","last_page","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","slice","dataToRender","memo","UsersList","Table"],"mappings":"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","file":"static/js/35.6a7e1cbe.chunk.js","sourcesContent":["import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { ChevronUp } from 'react-feather'\r\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\r\n\r\nconst AppCollapse = props => {\r\n  // ** Props\r\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\r\n\r\n  /**\r\n   ** If accordion is true then return only one active index else return an Array\r\n   */\r\n  const defaultActive = () => {\r\n    if (accordion) {\r\n      return active\r\n    } else {\r\n      return [...active]\r\n    }\r\n  }\r\n\r\n  // ** State\r\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\r\n\r\n  // ** Function to handle Collapse Toggle\r\n  const handleCollapseToggle = id => {\r\n    if (accordion) {\r\n      if (id === openCollapse) {\r\n        setOpenCollapse(null)\r\n      } else {\r\n        setOpenCollapse(id)\r\n      }\r\n    } else {\r\n      const arr = openCollapse,\r\n        index = arr.indexOf(id)\r\n      if (arr.includes(id)) {\r\n        arr.splice(index, 1)\r\n        setOpenCollapse([...arr])\r\n      } else {\r\n        arr.push(id)\r\n        setOpenCollapse([...arr])\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to render collapse\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const title = titleKey ? item[titleKey] : item.title,\r\n        content = contentKey ? item[contentKey] : item.content\r\n\r\n      return (\r\n        <Card\r\n          className={classnames('app-collapse', {\r\n            [item.className]: item.className,\r\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\r\n          })}\r\n          key={index}\r\n        >\r\n          <CardHeader\r\n            className={classnames('align-items-center', {\r\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\r\n            })}\r\n            /*eslint-disable */\r\n            {...(toggle === 'hover'\r\n              ? {\r\n                  onMouseEnter: () => handleCollapseToggle(index)\r\n                }\r\n              : {\r\n                  onClick: () => handleCollapseToggle(index)\r\n                })}\r\n            /*eslint-enable */\r\n          >\r\n            <CardTitle className='collapse-title'>{title}</CardTitle>\r\n            <ChevronUp size={14} />\r\n          </CardHeader>\r\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\r\n            <CardBody>{content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('collapse-icon', {\r\n        [className]: className,\r\n        'collapse-default': !type,\r\n        'collapse-shadow': type === 'shadow',\r\n        'collapse-border': type === 'border',\r\n        'collapse-margin': type === 'margin'\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCollapse\r\n\r\n// ** PropTypes\r\nAppCollapse.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  accordion: Proptypes.bool,\r\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\r\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\r\n  titleKey: Proptypes.string,\r\n  contentKey: Proptypes.string,\r\n  className: Proptypes.string\r\n}\r\n\r\n// ** Default Props\r\nAppCollapse.defaultProps = {\r\n  active: [],\r\n  toggle: 'click'\r\n}\r\n","import http from '../../../../configs/httpConfig'\nimport {notifyError, notifySuccessadd} from \"../../../Toast\"\n\n//banner upload\n\nexport const getAllbannerDataInit = () => ({\n  type: 'GET_ALL_BANNER_DATA_INIT'\n})\n\nexport const getAllbannerDataFail = () => ({\n  type: 'GET_ALL_BANNER_DATA_FAIL'\n})\n\n//cricket series\nexport const getcricketSeries = () => {\n \n  return async (dispatch) => {\n   await http.get('/cricket/series/list').then((response) => {\n    \n      dispatch({\n        type: 'CRICKET_SERIES_NAME',\n        data: response.data.data\n      })\n      console.log(response.data.data, \"this\")\n    })\n  }\n}\n//football series\nexport const getfootballSeries = () => {\n \n  return async (dispatch) => {\n   await http.get('/football/series/list').then((response) => {\n\n      dispatch({\n        type: 'FOOTBAL_SERIES_NAME',\n        data: response.data.data\n      })\n      console.log(response.data.data, \"this\")\n    })\n  }\n}\n//cricket series id\n\nexport const collectcricketseriesid = (seriesid) => {\n   \n  console.log(seriesid)\n  return (dispatch) => {\n    dispatch(getAllbannerDataInit())\n    dispatch({\n      type:'COLLECT_CRIC_SERIESID',\n      data:seriesid\n    })\n  }\n}\n\n\nexport const getbannerlist = (page) => {\n  \n  return async (dispatch) => {\n    dispatch(getAllbannerDataInit())\n    await http.get(`/banner/list?page=${page}`).then((response) => {\n      console.log(response)\n      dispatch({\n        type: 'GET_ALL_BANNER_LIST',\n        data: response.data.data\n      })\n    }).catch(() => {\n     // console.log(e)\n      dispatch(getAllbannerDataFail())\n    }) \n  } \n}\n\nexport const bannertoggle = (id, status) => {\n    return async (dispatch) => {\n      dispatch(getAllbannerDataInit())    \n      console.log(status)  \n      await http.post(`/banner/toggle_active/${id}`).then((response) => {   \n        notifySuccessadd(response.data.message)                  \n        dispatch({\n          type: 'BANNER_TOGGLE_STATUS',\n          data: status\n        })          \n      }).catch((e) => {\n        notifyError(e.message)\n        console.log(\"Error in Feed Post: \", e)\n        \n      })\n    }\n  }\n\nexport const getbannerlistType = (page) => {\n  return async (dispatch) => {\n    // dispatch(getAllbannerDataInit())\n    await http.get(`/banner/list?page=${page}&sports=cricket`).then((response) => {  \n      notifySuccessadd(response.data.message)               \n      dispatch({\n        type: 'GET_ALL_BANNER_TYPE',\n        data: response.data.data\n      })\n    }).catch(() => {\n      dispatch(getAllbannerDataFail())\n    })\n  } \n}\n\nexport const getfootballbannerlist = (page) => {\n  //banner/list?sports=\"cricket\"\n  return async (dispatch) => {\n    // dispatch(getAllbannerDataInit())\n    await http.get(`/banner/list?page=${page}&sports=football`).then((response) => {  \n      notifySuccessadd(response.data.message)           \n      console.log(response.data.data)\n      dispatch({\n        type: 'GET_FOOTBALL_BANNER_LIST',\n        data: response.data.data\n      })\n    }).catch(() => {\n     // console.log(e)\n      dispatch(getAllbannerDataFail())\n    })\n  } \n}\n\nexport const banneradd = (banner) => {\n  return (dispatch) => {\n    http\n    .post('/banner/add', banner)\n    .then((response) => {\n      notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'BANNER_ADD',\n        data: response.data\n      })    \n    })\n    .catch((err) => {\n      notifyError(err.message)\n      \n     })\n  }\n}\n\nexport const editPostData = (params) => ({\n  type: 'EDIT_POST_DATA',\n  data: params\n})\n\n\nexport const viewbanner = (id) => {\n\n  return async (dispatch) => {\n    dispatch(getAllbannerDataInit())\n    await http.get(`/banner/${id}`).then((response) => {\n      notifySuccessadd(response.data.message)\n      console.log(\"Respont : \", response)\n      dispatch({\n        type: 'GET_BANNER_VIEW',\n        data: response.data.data\n      })\n    }).catch((e) => {\n      console.log(\"Error in View banner: \", e)\n    \n    })\n  }\n}\n\nexport const editbanner = (id, params) => {\n  return async (dispatch) => {\n  dispatch(getAllbannerDataInit())\n    await http.post(`/banner/update/${id}`, params).then((response) => {\n      notifySuccessadd(response.data.message)\n    console.log(\"Respont : \", response)\n      dispatch({\n        type: 'EDIT_BANNER_POST',\n        data: response.data\n      })\n    }).catch((err) => {\n      notifyError(err.message)\n    \n    })\n  }\n}\nexport const cricketdeletebanner = (id) => {\n  return (dispatch) => {\n     return http.delete(`/cricket/banner/delete/${id}`).then((response) => {\n       console.log(id)\n       dispatch({ type: 'DELETE_CRICKET_BANNER', data: response.data.data })\n       dispatch(getbannerlistType())\n     })\n   }\n }\n export const footballdeletebanner = (id) => {\n  return (dispatch) => {\n     return http.delete(`/football/banner/delete/${id}`).then((response) => {\n       dispatch({ type: 'DELETE_FOOTBALL_BANNER', data: response.data.data })\n       dispatch(getfootballbannerlist())\n     })\n   }\n }\n\n export const getcricketTotal = (page) => {\n  console.log(page)\n  return async (dispatch) => {\n    // dispatch(getteamsdatainit())\n    await http.get(`/cricket/series/list?page=${page}`).then((response) => {\n      dispatch({\n        type: 'CRICKET_SERIES_TOTAL',\n        data: response.data\n      })\n      console.log(response.data, \"this\")\n    })\n  }\n}\n\nexport const getfootballTotal = (page) => {\n  console.log(page)\n  return async (dispatch) => {\n    // dispatch(getteamsdatainit())\n    await http.get(`/football/series/list?page=${page}`).then((response) => {\n      dispatch({\n        type: 'FOOTBALL_SERIES_TOTAL',\n        data: response.data\n      })\n      console.log(response.data, \"this\")\n    })\n  }\n}\n","export default __webpack_public_path__ + \"static/media/Football-yellow.7ef30446.svg\";","// ** React Imports\r\nimport { Fragment, useState, useEffect, memo } from 'react'\r\nimport UiLoader from '@components/ui-loader'\r\n// ** Table Columns\r\nimport logo from '../../../../assets/images/boomer11sports/Football-yellow.svg'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AppCollapse from '@components/app-collapse'\r\n// ** Store & Actions\r\nimport { getfootballbannerlist, bannertoggle, viewbanner } from '../../store/action' //cricketdeletebanner\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n// import withReactContent from 'sweetalert2-react-content'\r\n// import Swal from 'sweetalert2'\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown, Edit, Filter } from 'react-feather' //Trash2\r\nimport DataTable from 'react-data-table-component'\r\nimport { Card, Input, Label, Row, Col, CustomInput } from 'reactstrap'\r\nconst DataTableTransaction = () => {\r\n\r\n  // ** Store Vars\r\n\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.banner)\r\n  \r\n  console.log(store)\r\n  // ** States\r\n  const history = useHistory()\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [filteredData, setFilteredData] = useState([])\r\n  // const MySwal = withReactContent(Swal)\r\n  const [status, setStatus] = useState(false)\r\n  useEffect(() => {            \r\n    dispatch(getfootballbannerlist(currentPage))\r\n  }, [currentPage, store.banner_status])\r\n  console.log(store.banner_status)\r\n  // ** Get data on mount\r\n  \r\n  // ** Function to handle filter\r\n  const handleFilter = e => {\r\n    const value = e.target.value\r\n    let updatedData = []\r\n    setSearchValue(value)\r\n    if (value.length) {\r\n      updatedData = store.football_banner.data.filter(item => {        \r\n        console.log(item)\r\n       const startsWith =\r\n          item.type?.toLowerCase().startsWith(value.toLowerCase()) ||\r\n           item.position?.toString().toLowerCase().startsWith(value.toLowerCase()) \r\n          // item.debit_credit?.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          // date?.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n          // item.transaction_type?.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          // item.txn_id.toLowerCase()?.startsWith(value.toLowerCase())\r\n\r\n        const includes =\r\n          item.type?.toLowerCase().includes(value.toLowerCase()) ||\r\n           item.position?.toString().toLowerCase().includes(value.toLowerCase()) \r\n          // item.debit_credit?.toLowerCase().includes(value.toLowerCase()) ||\r\n          // date?.toString().toLowerCase().includes(value.toLowerCase()) ||\r\n          // item.transaction_type?.toLowerCase().includes(value.toLowerCase()) ||\r\n          // item.txn_id?.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWith) {\r\n          return startsWith\r\n        } else if (!startsWith && includes) {\r\n          return includes\r\n        } else return null\r\n      })\r\n      setFilteredData(updatedData)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle Pagination and get data\r\n\r\n  const handlePagination = page => {\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const SwitchClick = (row) => {    \r\n    setStatus(!status)\r\n    dispatch(bannertoggle(row, status))\r\n  }\r\n \r\n  // const deleteHandler = (id) => {\r\n  //   return MySwal.fire({\r\n  //     title: 'Are you sure?',\r\n  //     text: \"You won't be able to revert this!\",\r\n  //     icon: 'warning',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonText: 'Yes, delete it!',\r\n  //     customClass: {\r\n  //       confirmButton: 'btn btn-primary',\r\n  //       cancelButton: 'btn btn-outline-danger ml-1'\r\n  //     },\r\n  //     buttonsStyling: false\r\n  //   }).then(function (result) {\r\n      \r\n  //    if (result.value) {\r\n  //       dispatch(cricketdeletebanner(id))\r\n  //       MySwal.fire({\r\n  //         icon: 'success',\r\n  //         title: 'Deleted!',\r\n  //         text: 'Your file has been deleted.',\r\n  //         customClass: {\r\n  //           confirmButton: 'btn btn-success'\r\n  //         }\r\n  //       })\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  const editHandler = (row) => {\r\n   \r\n    history.push({pathname:\"banner/edit1\"})\r\n    dispatch(viewbanner(row.id))\r\n    \r\n  }\r\n\r\n  console.log(store)\r\n\r\n  const customStyles = {\r\n    rows: {\r\n      style: {\r\n        minHeight: '102px' // override the row height\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        marginLeft:'20px',\r\n        paddingLeft: '8px', // override the cell padding for head cells\r\n        paddingRight: '8px'\r\n      }\r\n    },\r\n    cells: {\r\n      style: {\r\n        margin:'30px 10px',\r\n        // marginRight: '30px',\r\n        // paddingTop:'20px',\r\n        paddingLeft: '8px', // override the cell padding for data cells\r\n        paddingRight: '8px'\r\n      }\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: '#',\r\n      minWidth: '10px',\r\n      selector: '#',\r\n      sortable: true,\r\n      cell: (row, pos) => `#${store.football_banner.from + pos}`\r\n    }, \r\n    {\r\n      name: 'Banner',\r\n      minWidth: '100px',\r\n      selector: 'banner_image',\r\n      sortable: true,\r\n     cell: (row) => (\r\n      <img src={row.assets_url} style={{ height: '80px', with: '180px', marginLeft:'-30px', marginRight: '-40px'}} />\r\n      )\r\n    },\r\n    {\r\n      name: 'Sports',\r\n      minWidth: '20px',\r\n      selector: 'id',\r\n      sortable: true,\r\n      cell: () => (\r\n        <img src={logo} style={{ height: '40px', width: '40px', marginLeft:'30px'}} />\r\n      )\r\n    },\r\n  \r\n    {\r\n      name: 'Position',\r\n      minWidth: '20px',\r\n      selector: 'id',\r\n      sortable: true,\r\n      cell: (row) => row.position\r\n    },\r\n    {\r\n      name: 'Screen',\r\n      minWidth: '20px',\r\n      selector: 'type',\r\n      sortable: true,\r\n      cell: (row) => row.type\r\n    },\r\n    {\r\n      name: 'Status',\r\n      minWidth: '138px',\r\n      selector: 'active',\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <div className=\"column-action\">\r\n          {\r\n            \r\n            (\r\n              <CustomInput \r\n            className='custom-control-success'\r\n            type='switch'\r\n            id={`success${row.id}`}\r\n            name='success'\r\n            onChange={() => SwitchClick(row.id)}\r\n            inline\r\n            defaultChecked = {row.active !== 0 }\r\n          />\r\n            ) \r\n          }\r\n                 \r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: 'Active',\r\n      minWidth: '138px',\r\n      selector: 'active',\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <div className=\"column-action\">\r\n          {/* <a href={`/walls/edit/${row.feed_id}`}> */}\r\n          <Edit width=\"17\" className=\"cursor-pointer\" title=\"Edit Banner\" onClick={() => editHandler(row)} />\r\n          {/* </a> */}\r\n          {/* <Trash2 width=\"17\" className=\"ml-2 cursor-pointer\" title=\"Add Feed\" onClick={() => deleteHandler(row.feed_id)} /> */}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    \r\n  ]\r\n\r\n  // ** Function to handle per page\r\n\r\n  const handlePerPage = e => {\r\n    setRowsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n\r\n     const count = store.football_banner.last_page\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        breakLabel='...'\r\n        pageCount={count}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={2}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        breakClassName='page-item'\r\n        breakLinkClassName='page-link'\r\n        containerClassName={\r\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\r\n        }\r\n      />\r\n    )\r\n  }\r\nconsole.log(store.football_banner.data)\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    if (store.football_banner.data?.length > 0) {\r\n      return searchValue.length ? filteredData : store.football_banner.data?.slice(0, rowsPerPage)\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  if (store.isloading) {\r\n    return (\r\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\r\n        <UiLoader\r\n          blocking\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const data = [\r\n    {\r\n      title: <div><Filter size={18}/> Filter...</div>,\r\n      content: (\r\n        <Row xl={12}>\r\n          <Col\r\n          xl=\"12\"\r\n          className=\"d-flex align-items-sm-center justify-content justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1 ml-1\">\r\n            <Label className=\"mb-0 mr-1\" for=\"search-invoice\">\r\n              Search:\r\n            </Label>\r\n            <Input\r\n              className='dataTable-filter'\r\n              type='text'\r\n              bsSize='sm'\r\n              id='search-input'\r\n              value={searchValue}\r\n              onChange={handleFilter}\r\n              placeholder='search...'\r\n            />\r\n          </div>\r\n          \r\n       </Col>\r\n        </Row>\r\n      )\r\n    }\r\n  ]\r\n \r\n  return (\r\n    <Fragment>\r\n    <Card>\r\n    <AppCollapse data={data} type='border' accordion />\r\n    </Card>\r\n   \r\n    <Card>\r\n     <Row className='mx-0 mt-1 mb-50'>\r\n        <Col sm='6'>\r\n          <div className='d-flex align-items-center'>\r\n            <Label for='sort-select'>show</Label>\r\n            <Input\r\n              className='dataTable-select'\r\n              type='select'\r\n              id='sort-select'\r\n              value={rowsPerPage}\r\n              onChange={e => handlePerPage(e)}\r\n            >\r\n              <option value={10}>10</option>\r\n              <option value={50}>50</option>\r\n              <option value={100}>100</option>\r\n            </Input>\r\n            <Label for='sort-select'>entries</Label>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <DataTable\r\n        noHeader\r\n        pagination\r\n        paginationServer\r\n        className='react-dataTable'\r\n        columns={columns}\r\n        customStyles={customStyles}\r\n        sortIcon={<ChevronDown size={10} />}\r\n        paginationComponent={CustomPagination}\r\n        data={dataToRender()}\r\n      />\r\n    </Card>\r\n  </Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(DataTableTransaction)\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UsersList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n"],"sourceRoot":""}