{"version":3,"sources":["views/ManageAdd/BRD/list/Table.js","views/ManageAdd/BRD/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/ui-loader/index.js","views/ManageAdd/store/actions/index.js"],"names":["DataTableTransaction","dispatch","useDispatch","store","useSelector","state","ads","history","useHistory","MySwal","withReactContent","Swal","useState","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchValue","setSearchValue","filteredData","setFilteredData","status","setStatus","useEffect","getADData","toggle_data","console","log","columns","name","minWidth","sortable","cell","row","pos","adData","data","from","selector","type","Moment","expiry_date","format","href","cta","url","target","playing_time","className","CustomInput","id","onChange","adToggleStatus","inline","defaultChecked","UncontrolledDropdown","DropdownToggle","tag","size","DropdownMenu","right","DropdownItem","title","onClick","push","editAdData","width","fire","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","result","value","adDelete","last_page","isloading","blocking","e","updatedData","length","get_cricket_prize","filter","item","startsWith","toString","toLowerCase","caption","includes","Card","Row","Col","sm","Label","for","Input","parseInt","handlePerPage","noHeader","pagination","paginationServer","sortIcon","paginationComponent","count","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","slice","dataToRender","memo","UsersList","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","color","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","UILoader","props","children","loader","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","AD_ADD","add","http","post","response","catch","get","err","updateAdData","params","patch","delete","getPrizeList"],"mappings":"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","file":"static/js/159.6315b7aa.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\nimport UiLoader from '@components/ui-loader'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n// ** Table Columns\n\n// ** Store & Actions\nimport { adDelete, getADData, editAdData, adToggleStatus} from '../../store/actions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\nimport Moment from \"moment\"\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown, Edit, MoreVertical, Trash2 } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { Card, Input, CustomInput, Label, Row, Col, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown } from 'reactstrap'\n\nconst DataTableTransaction = () => {\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.ads)\n  const history = useHistory()\n\n  // ** States\n  const MySwal = withReactContent(Swal)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [status, setStatus] = useState(false)\n\n  useEffect(() => {\n    dispatch(getADData(currentPage))\n  }, [currentPage, store.toggle_data])\n  console.log(currentPage)\n\n  // ** Get data on mount\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n    if (value.length) {\n      updatedData = store.get_cricket_prize.data.filter(item => {\n        const startsWith =\n          item.name?.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n          item.caption?.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n          item.type?.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes =\n          item.name?.toString().toLowerCase().includes(value.toLowerCase()) ||\n          item.caption?.toString().toLowerCase().includes(value.toLowerCase()) ||\n          item.type?.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData(updatedData)\n    }\n  }\n\n  const editHandler = (id) => {\n   \n    history.push(`/manage_ad/edit/${id}`)\n    dispatch(editAdData(id))\n  }\n\n  const SwitchClick = (id) => {\n    setStatus(!status)\n    dispatch(adToggleStatus(id, status))\n\n}\n\n  const handleConfirmText = (id) => {\n    \n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ml-1'\n      },\n      buttonsStyling: false\n    }).then(function (result) {\n\n      if (result.value) {\n        dispatch(adDelete(id))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Your file has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const columns = [\n    {\n      name: '#',\n      minWidth: '20px',\n      sortable: true,\n      cell: (row, pos) => `#${store.adData?.data?.from + pos}`\n    },\n    {\n      name: 'Name',\n      minWidth: '20px',\n      selector: 'name',\n      sortable: true,\n      cell: (row) => row.name\n    },\n    {\n      name: 'Type',\n      minWidth: '20px',\n      selector: 'feed_id',\n      sortable: true,\n      cell: (row) => { return row.type === 1 ? 'Video' : row.type === 2 ? 'Image' : row.type === 3 ? 'Gif' : '-' }\n    },\n    {\n      name: 'Expiry Date',\n      minWidth: '20px',\n      selector: 'expirydate',\n      sortable: true,\n      cell: (row) => { return Moment((row.expiry_date), 'YYYY-MM-DD').format(\"DD MMM YYYY\") }\n    },\n    {\n      name: 'Redirecting Screen',\n      minWidth: '20px',\n      selector: 'redirectingscreen',\n      sortable: true,\n      cell: (row) => <a href={row?.cta?.url} target={`_blank`}>{row.cta.url ? row.cta.url : '-'}</a> \n    },\n    {\n      name: 'Frequency',\n      minWidth: '20px',\n      selector: 'frequency',\n      sortable: true,\n      cell: (row) => row.playing_time\n    },\n    {\n      name: 'Status',\n      minWidth: '138px',\n      selector: 'active',\n      sortable: true,\n      cell: (row) => (\n        <div className=\"column-action\">\n          {\n\n            (\n              <CustomInput\n                className='custom-control-success'\n                type='switch'\n                id={`success${row.id}`}\n                name='success'\n                onChange={() => SwitchClick(row.id)}\n                inline\n                defaultChecked={row.status !== 0 }\n              />\n            )\n          }\n\n\n        </div>\n      )\n    },\n    {\n      name: 'Action',\n      minWidth: '138px',\n      selector: 'active',\n      sortable: true,\n      cell: (row) => (\n        <UncontrolledDropdown>\n          <DropdownToggle className='pr-1' tag='span'>\n            <MoreVertical size={15} />\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem className=\"cursor-pointer w-100\" title=\"Edit Feed\" onClick={() => editHandler(row.id)}  >\n              <Edit width=\"17\" />\n              <span className='align-middle ml-50'>Edit</span>\n            </DropdownItem>\n            <DropdownItem className=\"cursor-pointer w-100\" title=\"Add Feed\" onClick={() => handleConfirmText(row.id)} >\n              <Trash2 width=\"17\" />\n              <span className='align-middle ml-50'>Delete</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      )\n    }\n  ]\n  // ** Function to handle Pagination and get data\n\n  const handlePagination = page => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function to handle per page\n\n  const handlePerPage = e => {\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  console.log(store.adData?.data?.last_page)\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n\n    const count = store.adData?.data?.data?.length ? store.adData?.data?.last_page : 1\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={count}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        }\n      />\n    )\n  }\n  console.log(store.adData)\n  // ** Table data to render\n  const dataToRender = () => {\n    if (store.adData?.data?.data?.length > 0) {\n      return searchValue.length ? filteredData : store.adData?.data?.data?.slice(0, rowsPerPage)\n    } else {\n      return []\n    }\n  }\n\n  if (store.isloading) {\n    return (\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n        <UiLoader\n          blocking\n        />\n      </div>\n    )\n  }\n  console.log(store, handleFilter)\n  return (\n    <Fragment>\n      <Card>\n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                id='sort-select'\n                value={rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n                <option value={10}>10</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>entries</Label>\n            </div>\n          </Col>\n          {/* <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n              placeholder='search...'\n            />\n          </Col> */}\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          className='react-dataTable'\n          columns={columns}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default memo(DataTableTransaction)","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","import http from '../../../../configs/httpConfig'\nimport {notifyError, notifySuccessadd, notifySuccessdelete} from \"../../../Toast\"\n\nexport const AddPrizeMasterCricket = (add) => {\n  return (dispatch) => {\n    http\n    .post('/cricket/contest_prizes/add_prize', add)\n    .then((response) => {\n      dispatch({\n        type: 'ADD_PRIZE_MASTER_CRICKET',\n        data: response.data\n      })    \n    })\n    .catch((err) => console.log(err))\n  }\n}\n// api/cricket/contest_prizes/add_prize\nexport const AD_ADD = (add) => {\n  return (dispatch) => {\n    http\n    .post('/ads', add)\n    .then((response) => {\n      notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'ADD_ADS',\n        data: response\n      })    \n      console.log(add)\n    })\n    .catch(() => console.log(add))\n  }\n}\n\nexport const getADData = (page) => {\n  return (dispatch) => {\n    http\n    .get(`/ads?page=${page}`)\n    .then((response) => {\n      dispatch({\n        type: 'GET_AD_DATA',\n        data: response.data\n      })    \n      console.log(response)\n    })\n    .catch((err) => console.log(err))\n  }\n}\n\nexport const clearData = () => {\n  return {type:'CLEAR_DATA'}\n}\n\nexport const getAllCricketcontestprize = () => ({\n  type: 'GET_ALL_CRICKET_CONTEST_PRIZE'\n})\n\nexport const getAllCricketcontestFail = () => ({\n  type: 'GET_ALL_USERS_FAIL'\n})\n\nexport const getcricketprize = (page) => {\n  return async (dispatch) => {\n    dispatch(getAllCricketcontestprize())\n    await http.get(`cricket/contest_prizes/prize_list?page=${page}`).then((response) => {      \n      dispatch({\n        type: 'PRIZE_MASTER_CRICKET',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\nexport const getfootballprize = (page) => {\n  return async (dispatch) => {\n    dispatch(getAllCricketcontestprize())\n    await http.get(`football/contest_prizes/prize_list?page=${page}`).then((response) => {      \n      dispatch({\n        type: 'PRIZE_MASTER_CRICKET_FOOTBALL',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\n\nexport const getcricketprizeType = (page, type) => {\n  return async (dispatch) => {\n    dispatch(getAllCricketcontestprize())\n    await http.get(`cricket/contest_prizes/prize_list?page=${page}&type=${type}`).then((response) => {      \n      dispatch({\n        type: 'PRIZE_MASTER_CRICKET_TYPE',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\nexport const getprizecricketdetails = (id) => {\n  return async (dispatch) => {\n   await http\n      .put(`/cricket/view/${id}`)\n      .then((response) => {\n        dispatch({\n          type: 'PRIZE_DETAILS_CRICKET',\n          data: response.data.data\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const getprizefootballdetails = (id) => {\n  return async (dispatch) => {\n   await http\n      .put(`/foootball/view/${id}`)\n      .then((response) => {\n        dispatch({\n          type: 'PRIZE_DETAILS_CRICKET',\n          data: response.data.data\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const deleteprizecricket = (id) => {\n  return () => {\n    http\n      .delete(`/cricket/${id}`)\n      .then(() => {\n        notifySuccessdelete()\n        // dispatch(getAllData())\n      })\n      .catch((err) => {\n        notifyError()\n        console.log(err)\n      })\n  }\n}\n\nexport const deleteprizefootball = (id) => {\n  return () => {\n    http\n      .delete(`/football/${id}`)\n      .then(() => {\n        notifySuccessdelete()\n        // dispatch(getAllData())\n      })\n      .catch((err) => {\n        notifyError()\n        console.log(err)\n      })\n  }\n}\n\n\nexport const getAdData = () => {\n  return (dispatch) => {\n    http\n    .get('/ads')\n    .then((response) => {\n      dispatch({\n        type: 'GET_AD_DATA',\n        data: response.data\n      }) \n      console.log(response.data)   \n    })\n    .catch((err) => console.log(err))\n  }\n}\n\nexport const getspinner = () => ({\n  type: 'SPINNER'\n})\n\n\nexport const editAdData = (id) => {\n  return (dispatch) => {\n    dispatch(getspinner())\n    http\n    .get(`/ads/${id}`)\n    .then((response) => {\n      dispatch({\n        type: 'EDIT_AD_DATA',\n        data: response.data.data\n      }) \n      console.log(response.data)   \n    })\n    .catch((err) => console.log(err))\n  }\n}\n\nexport const updateAdData = (id, params) => {\n  return (dispatch) => {\n    dispatch(getspinner())\n    http\n    .patch(`/ads/${id}`, params)\n    .then((response) => {\n      dispatch({\n        type: 'EDIT_AD_DATA',\n        data: response.data.data\n      }) \n      console.log(response.data)   \n    })\n    .catch((err) => console.log(err))\n  }\n}\n\nexport const adDelete = (id) => {\n  return (dispatch) => {\n     return http.delete(`/ads/${id}`).then((response) => {\n       console.log(id)\n       dispatch({ type: 'DELETE_AD', data: response.data.data })\n       dispatch(getADData())\n     })\n   }\n }\n\n export const adToggleStatus = (id, status) => {\n  return async (dispatch) => {    \n    dispatch(getAllCricketcontestprize())\n    await http.post(`ads/toggle_status/${id}`).then(() => {\n      notifySuccessadd('successfully updated')\n    dispatch({\n        type: 'AD_TOGGLE_STATUS',\n        data: status\n      })            \n    }).catch((e) => {\n      notifyError('error')\n      console.log(\"Error in Feed Post: \", e)      \n    })\n  }\n}\n\nexport const getPrizeList = (page) => {\n  console.log(page)\n  return async (dispatch) => {\n    // dispatch(getteamsdatainit())\n    await http.get(`/prizes/list?page=${page}`).then((response) => {\n      dispatch({\n        type: 'GET_PRIZE_LIST',\n        data: response.data\n      })\n      console.log(response.data, \"this\")\n    })\n  }\n}"],"sourceRoot":""}