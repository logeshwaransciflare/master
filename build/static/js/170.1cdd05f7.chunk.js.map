{"version":3,"sources":["views/commonReport/RedeemReport/list/columns.js","views/commonReport/RedeemReport/list/Table.js","views/commonReport/RedeemReport/list/index.js","configs/httpConfig.js","../node_modules/reactstrap/es/Form.js","views/commonReport/store/actions/index.js"],"names":["columns","name","minWidth","selector","sortable","cell","row","redeem_prizes_id","redeem_prizes_name","prizes_id","redeem_prizes_value","created_on","redeem_prizes_status","user","id","team_name","email","mobile","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","useState","picker","setPicker","dropdownOpen","setDropdownOpen","className","Row","Col","xl","Label","for","CustomInput","type","value","onChange","style","width","padding","backgroundPosition","Form","date","options","mode","defaultDate","FormGroup","Button","Ripple","color","onClick","e","console","log","preventDefault","onSubmit","Input","target","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","getContestsListPDF","tag","getContestsListCSV","ContestsList","dispatch","useDispatch","store","useSelector","state","winner","data","links","setSearchTerm","listData","setListData","currentPage","setCurrentPage","useEffect","getAllContestsWinner","length","JSON","stringify","filterList","filter","userItem","contest_name","toLowerCase","includes","Card","noHeader","pagination","subHeader","responsive","paginationServer","paginationPerPage","paginationDefaultPage","sortIcon","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","q","isFiltered","Object","keys","some","k","dataToRender","subHeaderComponent","val","UsersList","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","propTypes","children","PropTypes","node","inline","bool","tagPropType","innerRef","oneOfType","object","func","string","cssModule","_Component","props","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","Component","defaultProps","getAllContests","http","get","then","response","catch","url","getAllContestsQuiz","responseType","window","URL","createObjectURL","Blob","link","document","href","setAttribute","Date","valueOf","body","appendChild","click"],"mappings":"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","file":"static/js/170.1cdd05f7.chunk.js","sourcesContent":["export const columns = [\n  {\n    name: 'ID',\n    minWidth: '20px',\n    selector: 'id',\n    sortable: true,\n    cell: (row) => row.redeem_prizes_id\n  },\n  {\n    name: 'Redeem Prize',\n    minWidth: '250px',\n    selector: 'name',\n    sortable: true,\n    cell: (row) => row.redeem_prizes_name\n  },\n  {\n    name: 'Prizes_id',\n    minWidth: '160px',\n    selector: 'type',\n    sortable: true,\n    cell: (row) => row.prizes_id\n  },\n  {\n    name: 'Prize Value',\n    minWidth: '160px',\n    selector: 'invite_id',\n    sortable: true,\n    cell: (row) => row.redeem_prizes_value\n  },\n  {\n    name: 'Transaction Time',\n    minWidth: '160px',\n    selector: 'series_name',\n    sortable: true,\n    cell: (row) => row.created_on\n  },\n  {\n    name: 'Redeem Status',\n    minWidth: '160px',\n    selector: 'fixture_name',\n    sortable: true,\n    cell: (row) => row.redeem_prizes_status\n  },\n  {\n    name: 'User ID',\n    minWidth: '160px',\n    selector: 'fixture_name',\n    sortable: true,\n    cell: (row) => row.user.id\n  },\n  {\n    name: 'UserName',\n    minWidth: '160px',\n    selector: 'fixture_name',\n    sortable: true,\n    cell: (row) => row.user.team_name\n  },\n  {\n    name: 'Email',\n    minWidth: '160px',\n    selector: 'fixture_name',\n    sortable: true,\n    cell: (row) => row.user.email\n  },\n  {\n    name: 'Phone no.',\n    minWidth: '160px',\n    selector: 'fixture_name',\n    sortable: true,\n    cell: (row) => row.user.mobile\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Invoice List Sidebar\n\n// ** Columns\nimport { columns } from './columns'\n// import AddQuiz from '../add'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport Flatpickr from 'react-flatpickr'\nimport {\n  Card,\n  Input,\n  Row,\n  Col,\n  Label,\n  Form,\n  FormGroup,\n  Button,\n  CustomInput,\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport {\n  getAllContestsWinner,\n  getContestsListCSV,\n  getContestsListPDF\n} from '../../store/actions'\n\n// ** Table Header\nconst CustomHeader = ({\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm\n}) => {\n  const [picker, setPicker] = useState()\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n  // const edittime = (date) => {\n  //   //e.preventDefault()\n  //   const local = new Date(date)\n  //   const datestring = `${local.getFullYear()}-${(local.getMonth()) + 1}-${local.getDate()}-${local.getHours()}:${local.getMinutes()}`\n  //   console.log(datestring)\n  //   //console.log(prizeform)               \n  //   setPicker({ expires_at: datestring })\n  // }\n  const onSubmit = (e) => {\n    console.log(picker)\n    e.preventDefault()\n   //dispatch(getAllContests())\n  }\n\n  \n  return (\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"2\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <Label for=\"rows-per-page\">Show</Label>\n            <CustomInput\n              className=\"form-control mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{\n                width: '5rem',\n                padding: '0 0.8rem',\n                backgroundPosition:\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n              }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </CustomInput>\n            <Label for=\"rows-per-page\">Entries</Label>\n          </div>\n        </Col>\n    {/* <Form xl=\"3\" onClick={(e) => onSubmit(e)}>\n        <Col >\n        <Flatpickr\n        value={picker}\n        id='range-picker'\n        className='form-control'\n        onChange={(date, e) => edittime(date, e)}\n        \n        // onChange={date => setPicker(date)}\n        options={{\n          mode: 'range',\n          defaultDate: ['2020-02-01', '2020-02-15']\n        }}\n      />\n     \n      </Col>\n      <Col col='2' >\n      <Button.Ripple\n      className=\"mr-1\"\n      color=\"primary\"\n      type=\"submit\"\n      \n      >Submit</Button.Ripple>\n      </Col>\n  </Form> */}\n  <Form>\n  <Row>\n    <Col>\n    <Flatpickr\n     value={picker}\n     id='range-picker'\n     className='form-control'\n     onChange={date => setPicker(date)}\n       options={{\n         mode: 'range',\n         defaultDate: ['2020-02-01', '2020-02-15']\n       }}\n      />\n    </Col>\n    <FormGroup className=\"d-flex mb-0\">\n                <Button.Ripple\n                  className=\"mr-1\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={(e) => onSubmit(e)}\n                  options={{\n                    mode: 'range',\n                    defaultDate: ['2020-02-01', '2020-02-15']\n                  }}\n                >\n                  Submit\n                </Button.Ripple>\n      </FormGroup>          \n    </Row>\n  </Form>\n        <Col\n          xl=\"4\"\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\n        >\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1\">\n            <Label className=\"mb-0\" for=\"search-invoice\">\n              Search:\n            </Label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ml-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n          <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n            <DropdownToggle color=\"primary\" caret>\n              Export Contests List\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={getContestsListPDF()} tag=\"button\">\n                Export as PDF\n              </DropdownItem>\n              <DropdownItem onClick={getContestsListCSV()} tag=\"button\">\n                Export as CSV\n              </DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst ContestsList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.winner)\n  const {data} = store\n  console.log(data.links)\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  //const [rowsPerPage, setRowsPerPage] = useState(15)\n  // const [sidebarOpen, setSidebarOpen] = useState(false)\n \n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllContestsWinner(currentPage))\n  }, [currentPage])\n\n  useEffect(() => {\n    console.log(store.data.links)\n    if (store.data.data && store.data.data.length) {\n      setListData(store.data.data)\n    }\n  }, [JSON.stringify(store.data.data)]) \n\n  // useEffect(() => {\n  //   if (store.feedAllData.records && store.feedAllData.records.length) {\n  //     setListData(store.feedAllData.records)\n  //   }\n  // }, [JSON.stringify(store.feedAllData)])\n \n\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n   \n  }\n\n  // ** User filter options\n\n  // ** Function in get data on page change\n\n  // ** Function in get data on rows per page\n  const handlePerPage = () => {\n   // const value = parseInt(e.currentTarget.value)\n    //setRowsPerPage(value)\n    setCurrentPage(1)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n  }\n\n  useEffect(() => {\n    if (searchTerm) {\n      const filterList = store.data.filter((userItem) => {\n        \n        if (userItem.contest_name) {\n          return userItem.contest_name.toLowerCase().includes(searchTerm.toLowerCase())\n        }\n      })\n\n      setListData(filterList)\n      setCurrentPage(1)\n    } else {\n      setListData(store.data)\n    }\n  }, [searchTerm])\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.data.links.length))\n    //const count = store.allCricketdata.links.length\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    // if (store.allContests.length > 0) {\n    //   return store.allContests\n    // } else\n    if (listData.length === 0 && isFiltered) {\n      return []\n    } else {\n      return listData\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          paginationPerPage\n          paginationDefaultPage={currentPage}\n          sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              handlePerPage={handlePerPage}\n              rowsPerPage\n              searchTerm={searchTerm}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default ContestsList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import http from '../../../../configs/httpConfig'\nexport const getAllWallDataFail = () => ({\n  type: 'GET_ALL_WALL_DATA_FAIL'\n})\nexport const getAllWallDataInit = () => ({\n  type: 'GET_ALL_WALL_DATA_INIT'\n})\n\n\nexport const getAllContests = () => {\n \n  return async (dispatch) => {\n    dispatch(getAllWallDataInit())\n    await http.get('/reports/referralReport').then((response) => {\n      console.log(\"Ajit\", response.data)\n      dispatch({\n        type: 'GET_ALL_CRICKET_CONTESTS_REPORT',\n        data: response.data.data\n      })\n    }).catch((e) => {\n      console.log(e)\n      dispatch(getAllWallDataFail())\n    })\n  }\n}\nexport const getAllContestsWinner = (page) => {\n  return async (dispatch) => {\n    const url = `/reports/redeemReport?page=${page}`\n    await http.get(url).then((response) => {\n      console.log(response.data)\n      dispatch({\n        type: 'GET_ALL_WINNER_CONTESTS_REPORT',\n        data: response.data\n      })\n    })\n  }\n}\nexport const getAllContestsQuiz = (page) => {\n  return async (dispatch) => {\n    const url = `/reports/userReport?page=${page}`\n    await http.get(url).then((response) => {\n      console.log(response.data)\n      dispatch({\n        type: 'GET_ALL_Quiz_CONTESTS_REPORT',\n        data: response.data\n      })\n    })\n  }\n}\n\nexport const getContestsListPDF = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_pdf', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.pdf`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\nexport const getContestsListCSV = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_csv', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.csv`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n"],"sourceRoot":""}