{"version":3,"sources":["views/Redeem/store/actions/index.js","views/Redeem/list/Table.js","views/Redeem/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/breadcrumbs/index.js","@core/components/ui-loader/index.js","@core/components/app-collapse/index.js"],"names":["getredeem","page","dataPerPage","dispatch","a","type","http","get","then","response","data","console","log","catch","CustomHeader","className","UsersList","useDispatch","store","useSelector","state","redeem","redeem_list","useState","searchTerm","setSearchTerm","listData","setListData","currentPage","setCurrentPage","status","setStatus","setDataPerPage","useEffect","isloader","Spinner","SwitchClick","row","id","post","notifySuccessadd","message","e","notifyError","redeemtoggle","columns","name","minWidth","selector","cell","pos","redeem_page","from","sortable","src","redeem_prizes_assets_url","style","height","width","redeem_prizes_name","redeem_prizes_status","CustomInput","onChange","inline","defaultChecked","active","Moment","created_on","format","filterList","cricket_series","filter","userItem","date","value","formatting","month","day","year","hour","minute","second","Intl","DateTimeFormat","Date","formatDate","date_time","newserch","toString","toLowerCase","startsWith","series_name","includes","blocking","CustomPagination","count","last_page","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","title","size","content","Row","Col","md","sm","Label","menuPortalTarget","document","querySelector","theme","selectThemeColors","classNamePrefix","isMulti","placeholder","isClearable","xl","Input","Button","Ripple","color","onClick","breadCrumbTitle","breadCrumbActive","accordion","Card","CardHeader","for","target","padding","backgroundPosition","noHeader","responsive","paginationServer","paginationPerPage","paginationDefaultPage","sortIcon","paginationComponent","filters","q","isFiltered","Object","keys","some","k","length","dataToRender","subHeaderComponent","handlePerPage","rowsPerPage","handleFilter","val","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessedit","notifySuccessdelete","error","notifyWarning","warning","BreadCrumbs","props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","tag","to","UILoader","children","loader","overlayColor","Tag","classnames","backgroundColor","defaultProps","AppCollapse","toggle","titleKey","contentKey","openCollapse","setOpenCollapse","handleCollapseToggle","arr","index","indexOf","splice","push","map","item","collapsed","onMouseEnter","isOpen"],"mappings":"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","file":"static/js/124.a28a1238.chunk.js","sourcesContent":["import http from '../../../../configs/httpConfig'\nimport {notifyError, notifySuccessadd, notifySuccessdelete} from \"../../../Toast\"\n\nexport const AddPrizeMasterCricket = (add) => {\n  return (dispatch) => {      \n    http\n    .post('/cricket/contest_prizes/add_prize', add)\n    .then((response) => {\n      notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'ADD_PRIZE_MASTER_CRICKET',\n        data: response.data\n      })    \n    })\n    .catch((err) => notifyError(err.message))\n  }\n}\n\n// api/cricket/contest_prizes/add_prize\nexport const AddPrizeMasterFootball = (add) => {\n  return (dispatch) => {\n    http\n    .post('/football/contest_prizes/add_prize', add)\n    .then((response) => {\n      notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'ADD_PRIZE_MASTER_FOOTBALL',\n        data: response.data\n      })    \n    })\n    .catch((err) => notifyError(err.message))\n  }\n}\n\nexport const clearData = () => {\n  return {type:'CLEAR_DATA'}\n}\n\nexport const getAllCricketcontestprize = () => ({\n  type: 'GET_ALL_CRICKET_CONTEST_PRIZE'\n})\n\nexport const getspinner = () => ({\n  type: 'GET_SPINNER'\n})\n\nexport const getAllCricketcontestFail = () => ({\n  type: 'GET_ALL_USERS_FAIL'\n})\n\nexport const getredeem = (page, dataPerPage = '') => {\n  return async (dispatch) => {\n    dispatch(getspinner())\n    await http.get(`redeem_prizes/list?page=${page}limit=${dataPerPage}`).then((response) => {            \n      dispatch({\n        type: 'REDEEM_LIST',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\nexport const redeemtoggle = (id, status) => {\n  return async (dispatch) => {\n    dispatch(getspinner())  \n    console.log(status)  \n    await http.post(`/banner/toggle_active/${id}`).then((response) => {   \n      notifySuccessadd(response.data.message)                  \n      dispatch({\n        type: 'BANNER_TOGGLE_STATUS',\n        data: status\n      })          \n    }).catch((e) => {\n      notifyError(e.message)\n      console.log(\"Error in Feed Post: \", e)\n      \n    })\n  }\n}\n\nexport const getcricketprize = (page) => {\n  return async (dispatch) => {\n    dispatch(getspinner())\n    await http.get(`cricket/contest_prizes/prize_list?page=${page}`).then((response) => {            \n      dispatch({\n        type: 'PRIZE_MASTER_CRICKET',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\nexport const getfootballprize = (page) => {\n  return async (dispatch) => {\n    dispatch(getspinner())\n    await http.get(`football/contest_prizes/prize_list?page=${page}`).then((response) => {      \n      dispatch({\n        type: 'PRIZE_MASTER_CRICKET_FOOTBALL',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\nexport const getcricketprizeType = (page, type) => {\n  return async (dispatch) => {\n    dispatch(getAllCricketcontestprize())\n    await http.get(`cricket/contest_prizes/prize_list?page=${page}&type=${type}`).then((response) => {      \n      dispatch({\n        type: 'PRIZE_MASTER_CRICKET_TYPE',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\nexport const getprizecricketdetails = (id) => {\n  return async (dispatch) => {\n   await http\n      .put(`/cricket/view/${id}`)\n      .then((response) => {\n        dispatch({\n          type: 'PRIZE_DETAILS_CRICKET',\n          data: response.data.data\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const getprizefootballdetails = (id) => {\n  return async (dispatch) => {\n   await http\n      .put(`/foootball/view/${id}`)\n      .then((response) => {\n        dispatch({\n          type: 'PRIZE_DETAILS_CRICKET',\n          data: response.data.data\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const deleteprizecricket = (id) => {\n  return () => {\n    http\n      .delete(`/cricket/${id}`)\n      .then(() => {\n        notifySuccessdelete()\n        // dispatch(getAllData())\n      })\n      .catch((err) => {\n        notifyError()\n        console.log(err)\n      })\n  }\n}\n\nexport const deleteprizefootball = (id) => {\n  return () => {\n    http\n      .delete(`/football/${id}`)\n      .then(() => {\n        notifySuccessdelete()\n        // dispatch(getAllData())\n      })\n      .catch((err) => {\n        notifyError()\n        console.log(err)\n      })\n  }\n}","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n//import UiLoader from '@components/ui-loader' \nimport UiLoader from '@components/ui-loader'\nimport Moment from \"moment\"\n// import AddQuiz from '../add'\nimport BreadCrumbs from '@components/breadcrumbs'\nimport { selectThemeColors } from '@utils'\nimport Select from 'react-select'\n// ** Store & Actions\nimport { getredeem, redeemtoggle} from '../store/actions'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown, Filter } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { Card, Row, Col, Label, CustomInput,  Input, Spinner, Button, CardHeader } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport AppCollapse from '@components/app-collapse'\n\n// ** Table Header\nconst CustomHeader = () => {\n  \n  return (\n    \n     <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\"> \n     \n    </div>\n  \n  )\n}\n\nconst UsersList = () => {\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.redeem)\n  console.log(store.redeem_list)\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [status, setStatus] = useState(false)\n  const [dataPerPage, setDataPerPage] = useState('')\n  console.log(store)\n  // ** Get data on mount\n  useEffect(() => {    \n    dispatch(getredeem(currentPage, dataPerPage))\n  }, [currentPage])\n\n  useEffect(() => {\n    dispatch(getredeem(currentPage, dataPerPage))\n  }, [dataPerPage])\n\n  useEffect(() => {\n    if (store.isloader) {      \n      <Spinner/>\n    } else {\n      setListData(store.redeem_list)\n    }\n  }, [store.isloader])\n  console.log(listData)\nconsole.log(store.redeem_list)\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  const SwitchClick = (row) => {  \n    setStatus(!status)         \n    dispatch(redeemtoggle(row, status))   \n  }\n\n  const columns = [\n        {\n          name: '#',\n          minWidth: '10px',\n          selector: '#',\n          cell: (row, pos) =>  `#${store.redeem_page.from + pos}` \n        }, \n        {\n          name: 'Prize image',\n          minWidth: '10px',\n          selector: 'redeem_prizes_assets_url',\n          sortable: true,\n          cell: (row) => (\n            <img src={row.redeem_prizes_assets_url} style={{ height: '50px', width: '50px'}} />\n          )\n        },\n        {\n          name: 'prize name',\n          minWidth: '20px',\n          selector: 'redeem_prizes_name',\n          sortable: true,\n          cell: (row) => row.redeem_prizes_name\n        },\n          {\n        name: 'prize status',\n        minWidth: '20px',\n        selector: 'redeem_prizes_status',\n        sortable: true,\n        cell: (row) => row.redeem_prizes_status\n      },\n      {\n        name: 'Status',\n        minWidth: '138px',\n        selector: 'id',\n        sortable: true,\n        cell: (row) => (\n          <div className=\"column-action\">\n            {            \n              (\n                <CustomInput \n              className='custom-control-success'\n              type='switch'\n              id={`success${row.id}`}\n              name='success'\n              onChange={() => SwitchClick(row.id)}\n              inline\n              defaultChecked = {row.active !== 0}\n            />\n              ) \n            }                 \n          </div>\n        )\n      }, \n      {\n        name: 'date',\n        minWidth: '160px',\n        selector: 'created_on',\n        sortable: true,\n        cell: (row) => { return Moment((row.created_on), 'YYYY-MM-DD').format(\"DD MMM YYYY HH:MM:SS\") }\n      }\n      ]\n  \n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n  }\n\n  const submit = () => {}\n\n  useEffect(() => {\n    if (searchTerm) {\n       const filterList = store.cricket_series.filter((userItem) => {\n         \n        const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric',  hour: 'numeric', minute: 'numeric', second: 'numeric'}) => {\n          if (!value) return value \n          return new Intl.DateTimeFormat('en-GB', formatting).format(new Date(value))\n         \n        }       \n        const date = formatDate(userItem.date_time)\n\n         const newserch =\n         userItem.id.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) || \n         userItem.series_name?.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n         status?.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n         userItem.type.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n         date?.toLowerCase().startsWith(searchTerm.toLowerCase()) \n                \n        const includes = \n        userItem.id.toString().toLowerCase().includes(searchTerm.toLowerCase()) || \n        userItem.series_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        status?.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n        userItem.type.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        date?.toLowerCase().includes(searchTerm.toLowerCase()) \n        \n     if (newserch) {\n         return newserch\n       } else if (!newserch && includes) {\n         return includes\n       } else return null\n \n       })\n \n       setListData(filterList)\n     } else {\n       setListData(store.redeem_list)\n     }\n   }, [searchTerm]) \nconsole.log(store.redeem_list)\nconsole.log(store.redeem_page)\nconsole.log(listData)\n  if (store.isloader) {    \n    return (\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n        <UiLoader\n          blocking\n        />\n      </div>\n    )\n  }\n  console.log(store)\n  // ** Custom Pagination \n  const CustomPagination = () => {\n    const count =  store.redeem_page.last_page\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    // if (store.allContests.length > 0) {\n    //   return store.allContests\n    // } else\n    if (listData?.length === 0 && isFiltered) {\n      return []\n    } else {\n      return listData\n    }\n  }\n\n  const data = [\n    {\n      title: <div><Filter size={18} /> Filter</div>,\n      content: (\n        <>\n          <Row>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Status</Label>\n              <Select\n              menuPortalTarget={document.querySelector('body')}\n                theme={selectThemeColors}               \n                classNamePrefix='select'       \n                // options={prizestatus}      \n                // value={value?.label}                \n                // onChange={(e) => serieslist(e)}\n                // onKeyDown={(e) => handleKeyPress(e)}\n              />             \n            </Col>\n            <Col className='mb-1' md='6' sm='12'>\n              <Label>Fixture</Label>\n              <Select\n                // isDisabled={store.fixloader}\n                // onChange={(e) => fixturelist(e)}\n                theme={selectThemeColors}\n                // value={refresh ? \"\" : fid}\n                className='react-select'\n                classNamePrefix='select'\n                isMulti\n                // defaultValue={fixture[0]}\n                // options={fixture ? fixture : \"\"}\n                placeholder='Select cricket fixture...'\n                isClearable={true}\n              />\n            </Col>\n          </Row>         \n          <Row>\n            <Col className='mb-1 mt-1' xl={6}>\n              <Label>Player Name:</Label>\n              <Input\n                id=\"search-invoice\"\n                className=\"w-100\"\n                type=\"text\"\n                // value={searchName}\n                placeholder='Enter player name'\n                // onChange={(e) => setSearchName(e.target.value)}\n                // onKeyDown={(e) => handleKeyPress(e)}\n              />\n            </Col>\n            <Col className='mb-1 mt-1' xl={6}>\n              <Label>Player Type:</Label>\n              <Select\n                menuPortalTarget={document.querySelector('body')}\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                // options={typeOptions}\n                placeholder='search player type...'\n                isClearable={true}\n                // onChange={(e) => typeHandler(e?.label)}\n                // onKeyDown={(e) => handleKeyPress(e)}\n              />\n            </Col>\n          </Row>\n          <Button.Ripple\n            color='primary'\n            onClick={(e) => submit(e)}\n          >submit</Button.Ripple>\n        </>\n      )\n    }\n  ]\n  \n  return (\n    <Fragment>\n        <BreadCrumbs breadCrumbTitle='Redeem' breadCrumbActive='List' />\n        <AppCollapse data={data} type='border' accordion className='mb-1'/>\n      <Card>\n      <CardHeader>\n          <Col xl=\"12\" className=\"d-flex align-items-center p-0\">\n            <div className=\"d-flex align-items-center w-100\">\n              <Label for=\"rows-per-page\">Show</Label>\n              <CustomInput\n                className=\"form-control mx-50\"\n                type=\"select\"\n                id=\"rows-per-page\"\n                value={dataPerPage}\n                onChange={(e) => setDataPerPage(e.target.value)}\n                style={{\n                  width: '5rem',\n                  padding: '0 0.8rem',\n                  backgroundPosition:\n                    'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n                }}\n              >\n                <option value=\"10\">10</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n              </CustomInput>\n              <Label for=\"rows-per-page\">Entries</Label>\n            </div>\n          </Col>\n        </CardHeader>\n        <DataTable\n          noHeader\n          // pagination\n          responsive\n          paginationServer\n          columns={columns}\n          paginationPerPage\n          paginationDefaultPage={currentPage}\n          sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              handlePerPage\n              rowsPerPage\n              searchTerm={searchTerm}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n      <CustomPagination />\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n//import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n  //UncontrolledButtonDropdown,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  //DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  <Link to={`/${breadCrumbParent}`}>{breadCrumbParent}</Link>\r\n                </BreadcrumbItem>\r\n                ) : ''\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { ChevronUp } from 'react-feather'\r\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\r\n\r\nconst AppCollapse = props => {\r\n  // ** Props\r\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\r\n\r\n  /**\r\n   ** If accordion is true then return only one active index else return an Array\r\n   */\r\n  const defaultActive = () => {\r\n    if (accordion) {\r\n      return active\r\n    } else {\r\n      return [...active]\r\n    }\r\n  }\r\n\r\n  // ** State\r\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\r\n\r\n  // ** Function to handle Collapse Toggle\r\n  const handleCollapseToggle = id => {\r\n    if (accordion) {\r\n      if (id === openCollapse) {\r\n        setOpenCollapse(null)\r\n      } else {\r\n        setOpenCollapse(id)\r\n      }\r\n    } else {\r\n      const arr = openCollapse,\r\n        index = arr.indexOf(id)\r\n      if (arr.includes(id)) {\r\n        arr.splice(index, 1)\r\n        setOpenCollapse([...arr])\r\n      } else {\r\n        arr.push(id)\r\n        setOpenCollapse([...arr])\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to render collapse\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const title = titleKey ? item[titleKey] : item.title,\r\n        content = contentKey ? item[contentKey] : item.content\r\n\r\n      return (\r\n        <Card\r\n          className={classnames('app-collapse', {\r\n            [item.className]: item.className,\r\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\r\n          })}\r\n          key={index}\r\n        >\r\n          <CardHeader\r\n            className={classnames('align-items-center', {\r\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\r\n            })}\r\n            /*eslint-disable */\r\n            {...(toggle === 'hover'\r\n              ? {\r\n                  onMouseEnter: () => handleCollapseToggle(index)\r\n                }\r\n              : {\r\n                  onClick: () => handleCollapseToggle(index)\r\n                })}\r\n            /*eslint-enable */\r\n          >\r\n            <CardTitle className='collapse-title'>{title}</CardTitle>\r\n            <ChevronUp size={14} />\r\n          </CardHeader>\r\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\r\n            <CardBody>{content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('collapse-icon', {\r\n        [className]: className,\r\n        'collapse-default': !type,\r\n        'collapse-shadow': type === 'shadow',\r\n        'collapse-border': type === 'border',\r\n        'collapse-margin': type === 'margin'\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCollapse\r\n\r\n// ** PropTypes\r\nAppCollapse.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  accordion: Proptypes.bool,\r\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\r\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\r\n  titleKey: Proptypes.string,\r\n  contentKey: Proptypes.string,\r\n  className: Proptypes.string\r\n}\r\n\r\n// ** Default Props\r\nAppCollapse.defaultProps = {\r\n  active: [],\r\n  toggle: 'click'\r\n}\r\n"],"sourceRoot":""}