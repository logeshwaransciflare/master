{"version":3,"sources":["assets/images/illustration/faq-illustrations.svg","views/Cms/Faqs.js","views/Cms/index.js","@core/components/app-collapse/index.js"],"names":["Faqs","data","dataToRender","useState","activeTab","setActiveTab","Object","entries","forEach","val","push","id","Row","Col","lg","md","sm","className","Nav","tag","pills","vertical","map","item","IconTag","Icon","icon","NavItem","NavLink","active","title","onClick","tab","size","src","illustration","alt","style","transform","TabContent","TabPane","tabId","subtitle","type","qandA","titleKey","contentKey","accordion","Faq","setData","searchTerm","setSearchTerm","useEffect","query","axios","get","params","q","then","response","AppCollapse","props","toggle","openCollapse","setOpenCollapse","handleCollapseToggle","arr","index","indexOf","includes","splice","classnames","content","collapsed","onMouseEnter","isOpen","defaultProps"],"mappings":"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","file":"static/js/223.6a56fe11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/faq-illustrations.f8c4ea78.svg\";","import { useState } from 'react'\r\nimport * as Icon from 'react-feather'\r\nimport AppCollapse from '@components/app-collapse'\r\nimport illustration from '@src/assets/images/illustration/faq-illustrations.svg'\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane\r\n} from 'reactstrap'\r\n\r\nconst Faqs = ({ data }) => {\r\n  const dataToRender = []\r\n\r\n  const [activeTab, setActiveTab] = useState('Terms & Condition')\r\n\r\n  const toggleTab = (tab) => setActiveTab(tab)\r\n\r\n  Object.entries(data).forEach(([, val]) => {\r\n    dataToRender.push(val)\r\n  })\r\n\r\n  const renderTabs = () => {\r\n    return dataToRender.map((item) => {\r\n      const IconTag = Icon[item.icon]\r\n      return (\r\n        <NavItem key={item.title} tag=\"li\">\r\n          <NavLink\r\n            active={activeTab === item.title}\r\n            onClick={() => toggleTab(item.title)}\r\n          >\r\n            <IconTag size={18} className=\"mr-1\" />\r\n            <span className=\"font-weight-bold\">{item.title}</span>\r\n          </NavLink>\r\n        </NavItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderTabContent = () => {\r\n    return dataToRender.map((item) => {\r\n     const IconTag = Icon[item.icon]\r\n     \r\n      return (\r\n        <TabPane key={item.title} tabId={item.title}>\r\n          <div className=\"d-flex align-items-center\">\r\n            <div className=\"avatar avatar-tag bg-light-primary mr-1\">\r\n              <IconTag size={20} />\r\n            </div>\r\n            <div>\r\n              <h4 className=\"mb-0\">{item.title}</h4>\r\n              <span>{item.subtitle}</span>\r\n           </div>\r\n          </div>\r\n          <AppCollapse\r\n            className=\"mt-2\"\r\n            type=\"margin\"\r\n            data={item.qandA}\r\n            titleKey=\"question\"\r\n            contentKey=\"ans\"\r\n            accordion\r\n            //{...(item.title === 'Terms & Condition' ? { active: 1 } : {})}\r\n          />\r\n        </TabPane>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id=\"faq-tabs\">\r\n      <Row>\r\n        <Col lg=\"3\" md=\"4\" sm=\"12\">\r\n          <div className=\"faq-navigation d-flex justify-content-between flex-column mb-2 mb-md-0\">\r\n            <Nav tag=\"ul\" className=\"nav-left\" pills vertical>\r\n              {renderTabs()}\r\n            </Nav>\r\n            <img\r\n              className=\"img-fluid d-none d-md-block\"\r\n              src={illustration}\r\n              alt=\"illustration\"\r\n              style={{\r\n                transform: 'scaleX(1)'\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col lg=\"9\" md=\"8\" sm=\"12\">\r\n          <TabContent activeTab={activeTab}>{renderTabContent()}</TabContent>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Faqs\r\n","import { Fragment, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Faqs from './Faqs'\r\n// import FaqFilter from './FaqFilter'\r\n// import FaqContact from './FaqContact'\r\n\r\nimport '@styles/base/pages/page-faq.scss'\r\n\r\nconst Faq = () => {\r\n  const [data, setData] = useState(null),\r\n    [searchTerm, setSearchTerm] = useState('')\r\n\r\n  const getFAQData = (query) => {\r\n    return axios.get('/faq/data', { params: { q: query } }).then((response) => {\r\n      setData(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFAQData(searchTerm)\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <FaqFilter\r\n        searchTerm={searchTerm}\r\n        setSearchTerm={setSearchTerm}\r\n        getFAQData={getFAQData}\r\n      /> */}\r\n      {data !== null ? (\r\n        <Faqs\r\n          data={data}\r\n          searchTerm={searchTerm}\r\n          setSearchTerm={setSearchTerm}\r\n        />\r\n      ) : null}\r\n      {/* <FaqContact /> */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Faq\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { ChevronUp } from 'react-feather'\r\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\r\n\r\nconst AppCollapse = props => {\r\n  // ** Props\r\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\r\n\r\n  /**\r\n   ** If accordion is true then return only one active index else return an Array\r\n   */\r\n  const defaultActive = () => {\r\n    if (accordion) {\r\n      return active\r\n    } else {\r\n      return [...active]\r\n    }\r\n  }\r\n\r\n  // ** State\r\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\r\n\r\n  // ** Function to handle Collapse Toggle\r\n  const handleCollapseToggle = id => {\r\n    if (accordion) {\r\n      if (id === openCollapse) {\r\n        setOpenCollapse(null)\r\n      } else {\r\n        setOpenCollapse(id)\r\n      }\r\n    } else {\r\n      const arr = openCollapse,\r\n        index = arr.indexOf(id)\r\n      if (arr.includes(id)) {\r\n        arr.splice(index, 1)\r\n        setOpenCollapse([...arr])\r\n      } else {\r\n        arr.push(id)\r\n        setOpenCollapse([...arr])\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to render collapse\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const title = titleKey ? item[titleKey] : item.title,\r\n        content = contentKey ? item[contentKey] : item.content\r\n\r\n      return (\r\n        <Card\r\n          className={classnames('app-collapse', {\r\n            [item.className]: item.className,\r\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\r\n          })}\r\n          key={index}\r\n        >\r\n          <CardHeader\r\n            className={classnames('align-items-center', {\r\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\r\n            })}\r\n            /*eslint-disable */\r\n            {...(toggle === 'hover'\r\n              ? {\r\n                  onMouseEnter: () => handleCollapseToggle(index)\r\n                }\r\n              : {\r\n                  onClick: () => handleCollapseToggle(index)\r\n                })}\r\n            /*eslint-enable */\r\n          >\r\n            <CardTitle className='collapse-title'>{title}</CardTitle>\r\n            <ChevronUp size={14} />\r\n          </CardHeader>\r\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\r\n            <CardBody>{content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('collapse-icon', {\r\n        [className]: className,\r\n        'collapse-default': !type,\r\n        'collapse-shadow': type === 'shadow',\r\n        'collapse-border': type === 'border',\r\n        'collapse-margin': type === 'margin'\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCollapse\r\n\r\n// ** PropTypes\r\nAppCollapse.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  accordion: Proptypes.bool,\r\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\r\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\r\n  titleKey: Proptypes.string,\r\n  contentKey: Proptypes.string,\r\n  className: Proptypes.string\r\n}\r\n\r\n// ** Default Props\r\nAppCollapse.defaultProps = {\r\n  active: [],\r\n  toggle: 'click'\r\n}\r\n"],"sourceRoot":""}