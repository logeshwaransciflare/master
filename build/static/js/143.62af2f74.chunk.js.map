{"version":3,"sources":["views/Quiz/quizlist/cricket/list/Table.js","views/Quiz/quizlist/cricket/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/ui-loader/index.js","@core/components/app-collapse/index.js","views/Quiz/store/action/index.js"],"names":["CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","data","title","size","content","Row","xl","Col","className","Label","for","Input","id","type","value","onChange","e","target","placeholder","accordion","CustomInput","style","width","padding","backgroundPosition","UsersList","dispatch","useDispatch","store","useSelector","state","quiz","useState","setSearchTerm","listData","setListData","currentPage","setCurrentPage","status","setStatus","MySwal","withReactContent","Swal","history","useHistory","useEffect","getcricketquiz","toggle_status","loadAllData","Spinner","cric_data","Moment","format","columns","name","minWidth","selector","sortable","cell","row","pos","cric_quiz_page","from","quiz_name","quiz_coins","quiz_expiry","quiz_id","quiztogglestatus","SwitchClick","inline","defaultChecked","quiz_status","onClick","getquizDetails","push","fire","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","result","deleteQuiz","filterList","filter","userItem","date","newserch","toString","toLowerCase","startsWith","includes","blocking","console","log","last_page","Card","noHeader","pagination","subHeader","responsive","paginationServer","paginationPerPage","paginationDefaultPage","sortIcon","paginationComponent","count","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","q","isFiltered","Object","keys","some","k","length","dataToRender","subHeaderComponent","val","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","color","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","UILoader","props","children","loader","tag","overlayColor","Tag","classnames","backgroundColor","defaultProps","AppCollapse","active","toggle","titleKey","contentKey","openCollapse","setOpenCollapse","handleCollapseToggle","arr","index","indexOf","splice","map","item","collapsed","onMouseEnter","isOpen","getAllData","params","http","get","response","getfootballquiz","getbasketballquiz","getLangcount","getLang","getengquestions","question","getlangs","addQuiz","post","catch","addQuestion","delete","err","put","getQuizQuestions","resetQuizEditQuestions","quizEditQuestions","quizData","quizEditQuestionsEach"],"mappings":"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","file":"static/js/143.62af2f74.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n// ** Invoice List Sidebar\nimport UiLoader from '@components/ui-loader'\n// ** Columns\n\nimport Moment from \"moment\"\n// import { columns } from './columns' \n// import AddQuiz from '../add'\nimport { useHistory } from 'react-router-dom'\n\n// import AddQuiz from '../add'\n// ** Store & Actions\nimport { getcricketquiz, quiztogglestatus, deleteQuiz, getquizDetails} from '../../../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n// import { selectThemeColors } from '@utils'\nimport Swal from 'sweetalert2' \n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown,  Edit, Filter, Trash2 } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n//import UiLoader from '@components/ui-loader'\nimport { Card, Row, Col, Label, CustomInput,  Input, Spinner} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport withReactContent from 'sweetalert2-react-content'\nimport AppCollapse from '@components/app-collapse'\n\n// ** Table Header\nconst CustomHeader = ({\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm\n}) => {\n  \n  const data = [\n    {\n      title: <div><Filter size={18}/> Filter...</div>,\n      content: (\n        <Row xl={12}>\n          <Col\n          xl=\"12\"\n          className=\"d-flex align-items-sm-center justify-content justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\n        >\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1 ml-1\">\n            <Label className=\"mb-0\" for=\"search-invoice\">\n              Search:\n            </Label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ml-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n              placeholder='search...'\n            />\n          </div>\n          \n       </Col>\n        </Row>\n      )\n    }\n  ]\n\n  return (\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\n      <AppCollapse data={data} type='border' accordion />\n      <Row className='mt-1'>\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <Label for=\"rows-per-page\">Show</Label>\n            <CustomInput\n              className=\"form-control mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{\n                width: '5rem',\n                padding: '0 0.8rem',\n                backgroundPosition:\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n              }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </CustomInput>\n            <Label for=\"rows-per-page\">Entries</Label>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.quiz)\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [status, setStatus] = useState(false)\n  const MySwal = withReactContent(Swal)\n  const history = useHistory()\n  // const [sidebarOpen, setSidebarOpen] = useState(false)\n  // ** Get data on mount\n  \n  useEffect(() => {        \n    dispatch(getcricketquiz(\"\", currentPage))\n  }, [currentPage, store.toggle_status])\n\n  useEffect(() => {\n    if (store.loadAllData) {\n      <Spinner/>\n    } else {\n      setListData(store.cric_data)\n    }\n  }, [store.loadAllData])\n\n//const columnsList = useCallback(columns(), [])\n  // ** User filter options\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  const handleConfirmText = (id) => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ml-1'\n      },\n      buttonsStyling: false\n    }).then(function (result) {      \n     if (result.value) {\n        dispatch(deleteQuiz(id))        \n      }\n    })\n  }\n\n  // const handleDelete = (id) => {\n  //   dispatch(deleteQuiz(id))\n  // }\n\n  const editHandler = (id) => {\n    dispatch(getquizDetails(id))\n    history.push(`/quiz/edit/${id}`)\n  }\n\n  const SwitchClick = (row) => {\n    setStatus(!status)\n    dispatch(quiztogglestatus(row, status))  \n  }\n\n  Moment().format(\"MMM Do YY\")\n  const columns = [\n    {\n      name: '#',\n      minWidth: '10px',\n      selector: 's_no',\n      sortable: true,\n      cell: (row, pos) =>  `#${store.cric_quiz_page.from + pos}` \n    }, \n    {\n      name: 'Name',\n      minWidth: '250px',\n      selector: 'quiz_name',\n      sortable: true,\n      cell: (row) => (row.quiz_name === '' ? '-' : row.quiz_name)\n    },\n    {\n      name: 'Coins',\n      minWidth: '200px',\n      selector: 'quiz_coins',\n      sortable: true,\n      cell: (row) => row.quiz_coins\n    },\n    {\n      name: 'Expiry',\n      minWidth: '200px',\n      selector: 'quiz_expiry',\n      sortable: true,\n      cell: (row) => Moment((row.quiz_expiry), 'DD-MM-YYYY').format(\"DD MMM YYYY HH:MM:SS\")\n    },\n    {\n      name: 'Status',\n      minWidth: '138px',\n      selector: 'active',\n      sortable: true,\n      cell: (row) => (\n        <div className=\"column-action\">\n          {\n            \n            (\n              <CustomInput \n            className='custom-control-success'\n            type='switch'\n            id={`success${row.quiz_id}`}\n            name='success'\n            onChange={() => SwitchClick(row.quiz_id)}\n            inline\n            defaultChecked = {row.quiz_status !== \"CLOSE\"}\n          />\n            ) \n          }\n         \n        \n        </div>\n      )\n    },\n    {\n      name: 'Action',\n      minWidth: '130px',\n      selector: 'action',\n      cell: (row) => (\n        <div className=\"column-action\">\n          {/* <a href={`/quiz/edit/${row.quiz_id}`}>\n            <Edit width=\"17\" className=\"cursor-pointer\" />\n          </a> */}\n           <Edit width=\"17\" className=\"cursor-pointer\" title=\"Edit Feed\" onClick={() => editHandler(row.quiz_id)} />\n          <Trash2\n            width=\"17\"\n            className=\"ml-2 cursor-pointer\"\n            onClick={() => handleConfirmText(row.quiz_id)}\n            />\n        </div>\n      )\n    }\n  ]\n\n  // ** Function in get data on rows per pag\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n  }\n\n  useEffect(() => {\n   if (searchTerm) {\n      const filterList = store.cric_data.filter((userItem) => {\n        const date = Moment((userItem.quiz_expiry), 'DD-MM-YYYY').format(\"DD MMM YYYY HH:MM:SS\")\n        const newserch =\n        userItem.quiz_id.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) || \n        userItem.quiz_name.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n        userItem.quiz_coins?.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n        date.toLowerCase().startsWith(searchTerm.toLowerCase())      \n       \n       const includes = \n       userItem.quiz_id.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n       userItem.quiz_name.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n       userItem.quiz_coins?.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n       date.toLowerCase().includes(searchTerm.toLowerCase())  \n       \n    if (newserch) {\n        return newserch\n      } else if (!newserch && includes) {\n        return includes\n      } else return null\n\n      })\n\n      setListData(filterList)\n    } else {\n      setListData(store.cric_data)\n    }\n  }, [searchTerm])\n\n  if (store.loadAllData) {\n    return (\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n        <UiLoader\n          blocking\n        />\n      </div>\n    )\n  }\n\n  console.log(store.cric_quiz_page.last_page)\n  // ** Custom Pagination \n  const CustomPagination = () => {\n    const count = store.cric_quiz_page.last_page\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    // if (store.allContests.length > 0) {\n    //   return store.allContests\n    // } else\n    if (listData.length === 0 && isFiltered) {\n      return []\n    } else {\n      return listData\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          paginationPerPage\n          paginationDefaultPage={currentPage}\n          sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              handlePerPage\n              rowsPerPage\n              searchTerm={searchTerm}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { ChevronUp } from 'react-feather'\r\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\r\n\r\nconst AppCollapse = props => {\r\n  // ** Props\r\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\r\n\r\n  /**\r\n   ** If accordion is true then return only one active index else return an Array\r\n   */\r\n  const defaultActive = () => {\r\n    if (accordion) {\r\n      return active\r\n    } else {\r\n      return [...active]\r\n    }\r\n  }\r\n\r\n  // ** State\r\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\r\n\r\n  // ** Function to handle Collapse Toggle\r\n  const handleCollapseToggle = id => {\r\n    if (accordion) {\r\n      if (id === openCollapse) {\r\n        setOpenCollapse(null)\r\n      } else {\r\n        setOpenCollapse(id)\r\n      }\r\n    } else {\r\n      const arr = openCollapse,\r\n        index = arr.indexOf(id)\r\n      if (arr.includes(id)) {\r\n        arr.splice(index, 1)\r\n        setOpenCollapse([...arr])\r\n      } else {\r\n        arr.push(id)\r\n        setOpenCollapse([...arr])\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to render collapse\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const title = titleKey ? item[titleKey] : item.title,\r\n        content = contentKey ? item[contentKey] : item.content\r\n\r\n      return (\r\n        <Card\r\n          className={classnames('app-collapse', {\r\n            [item.className]: item.className,\r\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\r\n          })}\r\n          key={index}\r\n        >\r\n          <CardHeader\r\n            className={classnames('align-items-center', {\r\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\r\n            })}\r\n            /*eslint-disable */\r\n            {...(toggle === 'hover'\r\n              ? {\r\n                  onMouseEnter: () => handleCollapseToggle(index)\r\n                }\r\n              : {\r\n                  onClick: () => handleCollapseToggle(index)\r\n                })}\r\n            /*eslint-enable */\r\n          >\r\n            <CardTitle className='collapse-title'>{title}</CardTitle>\r\n            <ChevronUp size={14} />\r\n          </CardHeader>\r\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\r\n            <CardBody>{content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('collapse-icon', {\r\n        [className]: className,\r\n        'collapse-default': !type,\r\n        'collapse-shadow': type === 'shadow',\r\n        'collapse-border': type === 'border',\r\n        'collapse-margin': type === 'margin'\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCollapse\r\n\r\n// ** PropTypes\r\nAppCollapse.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  accordion: Proptypes.bool,\r\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\r\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\r\n  titleKey: Proptypes.string,\r\n  contentKey: Proptypes.string,\r\n  className: Proptypes.string\r\n}\r\n\r\n// ** Default Props\r\nAppCollapse.defaultProps = {\r\n  active: [],\r\n  toggle: 'click'\r\n}\r\n","import http from '../../../../configs/httpConfig'\r\nimport {notifyError, notifySuccessadd, notifySuccessdelete, notifyWarning} from \"../../../Toast\"\r\n\r\nexport const getAllQuizDataInit = () => ({\r\n  type: 'GET_ALL_DATA_INIT'\r\n})\r\n\r\n// ** Get all Data\r\nexport const getAllData = (params, page) => {\r\n  return async (dispatch) => {\r\n    console.log(page)\r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_ALL_DATA',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getcricketquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n    console.log(page)\r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Cricket&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_CRIC_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getfootballquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n    console.log(page)\r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Football&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_FOOT_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getbasketballquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n    console.log(page)\r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Basketball&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_BASK_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLangcount = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLang = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getengquestions = (question) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_QUESTION',\r\n      data:question\r\n    })\r\n  }\r\n}\r\n\r\nexport const getenganswers = (...answers) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_ANSWERS',\r\n      data:answers\r\n    })\r\n  }\r\n}\r\n\r\n// export const getquizdetails = (datas) => {\r\n//   return (dispatch) => {\r\n//     dispatch({\r\n//       type:'QUIZ_DETAILS',\r\n//       data:datas\r\n//     })\r\n//     console.log(datas)\r\n//   }\r\n// }\r\n\r\nexport const getlangs = () => {\r\n  return async (dispatch) => {\r\n    await http.get('/master/country/dropdownlist').then((response) => {\r\n      dispatch({\r\n        type: 'LANGS_ID',\r\n        data: response.data        \r\n      })\r\n      console.log(response)\r\n    })\r\n  }\r\n}\r\n// ** Add new quiz\r\nexport const addQuiz = (quiz) => {\r\n  return (dispatch) => {    \r\n    http\r\n      .post('/quiz/add', quiz)\r\n      .then((response) => {\r\n        console.log(response)\r\n        notifySuccessadd(response.data.message)        \r\n        dispatch({\r\n          type: 'QUIZ_ADD',\r\n          data: true\r\n        })\r\n      })\r\n      .catch(() => {\r\n        notifyError('failed to add')\r\n      })\r\n  }\r\n}\r\n\r\nexport const addQuizInit = () => ({\r\n  type: 'ADD_QUIZ_POST_INIT'\r\n})\r\n\r\nexport const addQuestion = (question) => {  \r\n  return (dispatch) => {\r\n    dispatch(addQuizInit())\r\n    http\r\n      .post('/quiz/questions/add', question)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_QUESTION_ADD',\r\n          data: response.data\r\n        })\r\n        console.log(response.data)\r\n      })\r\n      .catch(() => {\r\n        notifyWarning(\"failed to add\")  \r\n      })\r\n  }\r\n}\r\n\r\nexport const resetQuizQuestions = () => ({\r\n  type: 'RESET_QUESTIONS_ADDED'\r\n})\r\n\r\nexport const deleteQuiz = (id) => {\r\n  return (dispatch) => {\r\n    http\r\n      .delete(`/quiz/delete/${id}`)\r\n      .then(() => {\r\n        notifySuccessdelete('successfully delete')\r\n        dispatch(getAllData())\r\n      })\r\n      .catch((err) => {\r\n        notifyError('error')\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport const getViewInit = () => ({\r\n  type: 'DETAILS_VIEW_INIT'\r\n})\r\n\r\nexport const getquizDetails = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(getViewInit())\r\n   await http\r\n      .put(`/quiz/view/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_DET',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizQuestions = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/questions/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_QUESTIONS_DATA',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizAnswers = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/answers/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_ANSWERS_DATA',\r\n          data: response.data.data\r\n        })\r\n        console.log(response)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const resetQuizEditQuestions = () => ({\r\n  type: 'RESET_QUIZ_QUESTIONS'\r\n})\r\n\r\nexport const quizEditQuestions = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditQuestionsEach = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/questions/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_QUESTIONS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditAnswers = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/answers/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_ANSWERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const NUMBER_PLAYERS = (players) => {\r\n  return (dispatch) => {\r\n    http\r\n      .get('/quiz/players', players)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'NUMBER_PLAYERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quiztogglestatus = (id, status) => {\r\n  return async (dispatch) => {    \r\n    console.log(status)\r\n    // dispatch(getAllQuizDataInit())\r\n    await http.post(`quiz/toggle_status/${id}`).then((response) => {\r\n      notifySuccessadd(response.data.message)\r\n    dispatch({\r\n        type: 'QUIZ_TOGGLE_STATUS',\r\n        data: status\r\n      })            \r\n    }).catch((e) => {\r\n      notifyError(\"error\")\r\n      console.log(e)\r\n      console.log(\"Error in Feed Post: \", e)      \r\n    })\r\n  }\r\n}"],"sourceRoot":""}