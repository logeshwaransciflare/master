{"version":3,"sources":["views/Quiz/quizlist/cricket/list/Table.js","views/Quiz/quizlist/cricket/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/ui-loader/index.js","@core/components/app-collapse/index.js","views/Quiz/store/action/index.js"],"names":["CustomHeader","className","UsersList","dispatch","useDispatch","store","useSelector","state","quiz","useState","searchTerm","setSearchTerm","listData","setListData","currentPage","setCurrentPage","status","setStatus","dataPerPage","setDataPerPage","useEffect","getcricketquiz","toggle_status","loadAllData","Spinner","cric_data","Moment","format","columns","name","minWidth","selector","cell","row","pos","cric_quiz_page","from","sortable","quiz_name","quiz_coins","quiz_expiry","CustomInput","type","id","quiz_id","onChange","quiztogglestatus","SwitchClick","inline","defaultChecked","quiz_status","handleFilter","val","filterList","filter","userItem","date","newserch","toString","toLowerCase","startsWith","includes","blocking","console","log","last_page","CustomPagination","count","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","data","title","size","content","Row","xl","Col","Label","for","Input","value","e","target","accordion","Card","CardHeader","style","width","padding","backgroundPosition","noHeader","responsive","paginationServer","paginationPerPage","paginationDefaultPage","sortIcon","paginationComponent","filters","q","isFiltered","Object","keys","some","k","length","dataToRender","subHeaderComponent","handlePerPage","rowsPerPage","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","color","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","UILoader","props","children","loader","tag","overlayColor","Tag","classnames","backgroundColor","defaultProps","AppCollapse","active","toggle","titleKey","contentKey","openCollapse","setOpenCollapse","handleCollapseToggle","arr","index","indexOf","splice","push","map","item","collapsed","onMouseEnter","onClick","isOpen","getAllData","params","a","http","get","then","response","dataperPage","getfootballquiz","getbasketballquiz","getLangcount","getLang","getengquestions","question","getlangs","addQuiz","post","catch","err","addQuestion","getquizDetails","put","getQuizQuestions","resetQuizEditQuestions","quizEditQuestions","quizData","quizEditQuestionsEach"],"mappings":"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","file":"static/js/131.3a21fce3.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n// ** Invoice List Sidebar\nimport UiLoader from '@components/ui-loader'\n// ** Columns\n\nimport Moment from \"moment\"\n// import { columns } from './columns' \n// import AddQuiz from '../add'\n// import { useHistory } from 'react-router-dom'\n\n// import AddQuiz from '../add'\n// ** Store & Actions\nimport { getcricketquiz, quiztogglestatus } from '../../../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n// import { selectThemeColors } from '@utils'\n// import Swal from 'sweetalert2' \n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown, Filter } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n//import UiLoader from '@components/ui-loader'\nimport { Card, Row, Col, Label, CustomInput, Input, Spinner, CardHeader } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n// import withReactContent from 'sweetalert2-react-content's\nimport AppCollapse from '@components/app-collapse'\n\n\n// ** Table Header\nconst CustomHeader = () => {\n\n  return (\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\n\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.quiz)\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [status, setStatus] = useState(false)\n  const [dataPerPage, setDataPerPage] = useState('')\n  // const [sidebarOpen, setSidebarOpen] = useState(false)\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getcricketquiz(\"\", currentPage, dataPerPage))\n  }, [currentPage, store.toggle_status])\n\n\n  useEffect(() => {\n    setCurrentPage(1)\n    dispatch(getcricketquiz(\"\", 1, dataPerPage))\n  }, [dataPerPage])\n\n  useEffect(() => {\n    if (store.loadAllData) {\n      <Spinner />\n    } else {\n      setListData(store.cric_data)\n    }\n  }, [store.loadAllData])\n\n  //const columnsList = useCallback(columns(), [])\n  // ** User filter options\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // const handleConfirmText = (id) => {\n  //   return MySwal.fire({\n  //     title: 'Are you sure?',\n  //     text: \"You won't be able to revert this!\",\n  //     icon: 'warning',\n  //     showCancelButton: true,\n  //     confirmButtonText: 'Yes, delete it!',\n  //     customClass: {\n  //       confirmButton: 'btn btn-primary',\n  //       cancelButton: 'btn btn-outline-danger ml-1'\n  //     },\n  //     buttonsStyling: false\n  //   }).then(function (result) {\n\n  //    if (result.value) {\n  //       dispatch(deleteQuiz(id))\n  //       MySwal.fire({\n  //         icon: 'success',\n  //         title: 'Deleted!',\n  //         text: 'Your file has been deleted.',\n  //         customClass: {\n  //           confirmButton: 'btn btn-success'\n  //         }\n  //       })\n  //     }\n  //   })\n  // }\n\n  // const handleDelete = (id) => {\n  //   dispatch(deleteQuiz(id))\n  // }\n\n  // const editHandler = (id) => {\n  //   dispatch(getquizDetails(id))\n  //   history.push(`/quiz/edit/${id}`)\n  // }\n\n  const SwitchClick = (row) => {\n\n    dispatch(quiztogglestatus(row, status))\n\n    setStatus(!status)\n  }\n\n  Moment().format(\"MMM Do YY\")\n  const columns = [\n    {\n      name: 'Sno',\n      minWidth: '10px',\n      selector: 's_no',\n      cell: (row, pos) => store.cric_quiz_page.from + pos\n    },\n    {\n      name: 'Name',\n      minWidth: '250px',\n      selector: 'quiz_name',\n      sortable: true,\n      cell: (row) => row.quiz_name\n    },\n    {\n      name: 'Coins',\n      minWidth: '200px',\n      selector: 'quiz_coins',\n      sortable: true,\n      cell: (row) => row.quiz_coins\n    },\n    {\n      name: 'Expiry',\n      minWidth: '200px',\n      selector: 'quiz_expiry',\n      sortable: true,\n      cell: (row) => Moment((row.quiz_expiry), 'DD-MM-YYYY').format(\"DD MMM YYYY HH:MM:SS\")\n    },\n    {\n      name: 'Status',\n      minWidth: '138px',\n      selector: 'active',\n      sortable: true,\n      cell: (row) => (\n        <div className=\"column-action\">\n          {\n\n            (\n              <CustomInput\n                className='custom-control-success'\n                type='switch'\n                id={`success${row.quiz_id}`}\n                name='success'\n                onChange={() => SwitchClick(row.quiz_id)}\n                inline\n                defaultChecked={row.quiz_status !== \"CLOSE\"}\n              />\n            )\n          }\n\n\n        </div>\n      )\n    }\n    // {\n    //   name: 'Action',\n    //   minWidth: '130px',\n    //   selector: 'action',\n    //   cell: (row) => (\n    //     <div className=\"column-action\">\n    //       {/* <a href={`/quiz/edit/${row.quiz_id}`}>\n    //         <Edit width=\"17\" className=\"cursor-pointer\" />\n    //       </a> */}\n    //        <Edit width=\"17\" className=\"cursor-pointer\" title=\"Edit Feed\" onClick={() => editHandler(row.quiz_id)} />\n    //       <Trash2\n    //         width=\"17\"\n    //         className=\"ml-2 cursor-pointer\"\n    //         onClick={() => handleConfirmText(row.quiz_id)}\n    //         />\n    //     </div>\n    //   )\n    // }\n  ]\n\n  // ** Function in get data on rows per pag\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n  }\n\n  useEffect(() => {\n    if (searchTerm) {\n      const filterList = store.cric_data.filter((userItem) => {\n        const date = Moment((userItem.quiz_expiry), 'DD-MM-YYYY').format(\"DD MMM YYYY HH:MM:SS\")\n        const newserch =\n          userItem.quiz_id.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n          userItem.quiz_name.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n          userItem.quiz_coins?.toString().toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n          date.toLowerCase().startsWith(searchTerm.toLowerCase())\n\n        const includes =\n          userItem.quiz_id.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n          userItem.quiz_name.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n          userItem.quiz_coins?.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n          date.toLowerCase().includes(searchTerm.toLowerCase())\n\n        if (newserch) {\n          return newserch\n        } else if (!newserch && includes) {\n          return includes\n        } else return null\n\n      })\n\n      setListData(filterList)\n    } else {\n      setListData(store.cric_data)\n    }\n  }, [searchTerm])\n\n  if (store.loadAllData) {\n    return (\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n        <UiLoader\n          blocking\n        />\n      </div>\n    )\n  }\n\n  console.log(store.cric_quiz_page.last_page)\n  // ** Custom Pagination \n  const CustomPagination = () => {\n    const count = store.cric_quiz_page.last_page\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    // if (store.allChallenges.length > 0) {\n    //   return store.allChallenges\n    // } else\n    if (listData.length === 0 && isFiltered) {\n      return []\n    } else {\n      return listData\n    }\n  }\n\n  const data = [\n    {\n      title: <div><Filter size={18} /> Filter</div>,\n      content: (\n        <Row xl={12}>\n          <Col\n            xl=\"12\"\n            className=\"d-flex align-items-sm-center justify-content justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\n          >\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1 ml-1\">\n              <Label className=\"mb-0\" for=\"search-invoice\">\n                Search:\n              </Label>\n              <Input\n                id=\"search-invoice\"\n                className=\"ml-50 w-100\"\n                type=\"text\"\n                value={searchTerm}\n                onChange={(e) => handleFilter(e.target.value)}\n              />\n            </div>\n\n          </Col>\n        </Row>\n      )\n    }\n  ]\n\n  return (\n    <Fragment>\n      <AppCollapse data={data} type='border' accordion className='mb-1' />\n      <Card>\n        <CardHeader>\n          <Col xl=\"12\" className=\"d-flex align-items-center p-0\">\n            <div className=\"d-flex align-items-center w-100\">\n              <Label for=\"rows-per-page\">Show</Label>\n              <CustomInput\n                className=\"form-control mx-50\"\n                type=\"select\"\n                id=\"rows-per-page\"\n                value={dataPerPage}\n                onChange={(e) => setDataPerPage(e.target.value)}\n                style={{\n                  width: '5rem',\n                  padding: '0 0.8rem',\n                  backgroundPosition:\n                    'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n                }}\n              >\n                <option value=\"10\">10</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n              </CustomInput>\n              <Label for=\"rows-per-page\">Entries</Label>\n            </div>\n          </Col>\n        </CardHeader>\n        <DataTable\n          noHeader\n          // pagination\n          responsive\n          paginationServer\n          columns={columns}\n          paginationPerPage\n          paginationDefaultPage={currentPage}\n          sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              handlePerPage\n              rowsPerPage\n              searchTerm={searchTerm}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n      {\n        listData.length === 0 ? '' : <CustomPagination />\n      }   \n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { ChevronUp } from 'react-feather'\r\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\r\n\r\nconst AppCollapse = props => {\r\n  // ** Props\r\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\r\n\r\n  /**\r\n   ** If accordion is true then return only one active index else return an Array\r\n   */\r\n  const defaultActive = () => {\r\n    if (accordion) {\r\n      return active\r\n    } else {\r\n      return [...active]\r\n    }\r\n  }\r\n\r\n  // ** State\r\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\r\n\r\n  // ** Function to handle Collapse Toggle\r\n  const handleCollapseToggle = id => {\r\n    if (accordion) {\r\n      if (id === openCollapse) {\r\n        setOpenCollapse(null)\r\n      } else {\r\n        setOpenCollapse(id)\r\n      }\r\n    } else {\r\n      const arr = openCollapse,\r\n        index = arr.indexOf(id)\r\n      if (arr.includes(id)) {\r\n        arr.splice(index, 1)\r\n        setOpenCollapse([...arr])\r\n      } else {\r\n        arr.push(id)\r\n        setOpenCollapse([...arr])\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to render collapse\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const title = titleKey ? item[titleKey] : item.title,\r\n        content = contentKey ? item[contentKey] : item.content\r\n\r\n      return (\r\n        <Card\r\n          className={classnames('app-collapse', {\r\n            [item.className]: item.className,\r\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\r\n          })}\r\n          key={index}\r\n        >\r\n          <CardHeader\r\n            className={classnames('align-items-center', {\r\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\r\n            })}\r\n            /*eslint-disable */\r\n            {...(toggle === 'hover'\r\n              ? {\r\n                  onMouseEnter: () => handleCollapseToggle(index)\r\n                }\r\n              : {\r\n                  onClick: () => handleCollapseToggle(index)\r\n                })}\r\n            /*eslint-enable */\r\n          >\r\n            <CardTitle className='collapse-title'>{title}</CardTitle>\r\n            <ChevronUp size={14} />\r\n          </CardHeader>\r\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\r\n            <CardBody>{content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('collapse-icon', {\r\n        [className]: className,\r\n        'collapse-default': !type,\r\n        'collapse-shadow': type === 'shadow',\r\n        'collapse-border': type === 'border',\r\n        'collapse-margin': type === 'margin'\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCollapse\r\n\r\n// ** PropTypes\r\nAppCollapse.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  accordion: Proptypes.bool,\r\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\r\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\r\n  titleKey: Proptypes.string,\r\n  contentKey: Proptypes.string,\r\n  className: Proptypes.string\r\n}\r\n\r\n// ** Default Props\r\nAppCollapse.defaultProps = {\r\n  active: [],\r\n  toggle: 'click'\r\n}\r\n","import http from '../../../../configs/httpConfig'\r\nimport {notifyError, notifySuccessadd, notifySuccessdelete, notifyWarning} from \"../../../Toast\"\r\n\r\nexport const getAllQuizDataInit = () => ({\r\n  type: 'GET_ALL_DATA_INIT'\r\n})\r\n\r\n// ** Get all Data\r\nexport const getAllData = (params, page) => {\r\n  return async (dispatch) => {\r\n    \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_ALL_DATA',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getcricketquiz = (params, page, dataperPage = '') => {\r\n  return async (dispatch) => {\r\n   \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Cricket&page=${page}&limit=${dataperPage}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_CRIC_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getfootballquiz = (params, page, dataperPage) => {\r\n  return async (dispatch) => {\r\n    \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Football&page=${page}&limit=${dataperPage}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_FOOT_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getbasketballquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n  \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Basketball&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_BASK_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLangcount = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLang = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getengquestions = (question) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_QUESTION',\r\n      data:question\r\n    })\r\n  }\r\n}\r\n\r\nexport const getenganswers = (...answers) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_ANSWERS',\r\n      data:answers\r\n    })\r\n  }\r\n}\r\n\r\n// export const getquizdetails = (datas) => {\r\n//   return (dispatch) => {\r\n//     dispatch({\r\n//       type:'QUIZ_DETAILS',\r\n//       data:datas\r\n//     })\r\n//     console.log(datas)\r\n//   }\r\n// }\r\n\r\nexport const getlangs = (params) => {\r\n  return async (dispatch) => {\r\n    await http.get('/master/language/dropdownlist', { params }).then((response) => {\r\n      dispatch({\r\n        type: 'LANGS_ID',\r\n        data: response.data,\r\n        params\r\n      })\r\n      \r\n    })\r\n  }\r\n}\r\n// ** Add new quiz\r\nexport const addQuiz = (quiz) => {\r\n  return (dispatch) => {\r\n    http\r\n      .post('/quiz/add', quiz)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_ADD',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        notifyError(err.message)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addQuizInit = () => ({\r\n  type: 'ADD_QUIZ_POST_INIT'\r\n})\r\n\r\nexport const addQuestion = (question) => {\r\n  return (dispatch) => {\r\n    dispatch(addQuizInit())\r\n    http\r\n      .post('/quiz/questions/add', question)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_QUESTION_ADD',\r\n          data: response.data\r\n        })\r\n        \r\n      })\r\n      .catch((err) => {\r\n        notifyWarning(err.message)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const resetQuizQuestions = () => ({\r\n  type: 'RESET_QUESTIONS_ADDED'\r\n})\r\n\r\nexport const deleteQuiz = (id) => {\r\n  return (dispatch) => {\r\n    http\r\n      .delete(`/quiz/delete/${id}`)\r\n      .then(() => {\r\n        notifySuccessdelete()\r\n        dispatch(getAllData())\r\n      })\r\n      .catch((err) => {\r\n        notifyError(err)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport const getViewInit = () => ({\r\n  type: 'DETAILS_VIEW_INIT'\r\n})\r\n\r\nexport const getquizDetails = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(getViewInit())\r\n   await http\r\n      .put(`/quiz/view/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_DET',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizQuestions = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/questions/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_QUESTIONS_DATA',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizAnswers = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/answers/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_ANSWERS_DATA',\r\n          data: response.data.data\r\n        })\r\n       \r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const resetQuizEditQuestions = () => ({\r\n  type: 'RESET_QUIZ_QUESTIONS'\r\n})\r\n\r\nexport const quizEditQuestions = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditQuestionsEach = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/questions/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_QUESTIONS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditAnswers = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/answers/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_ANSWERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const NUMBER_PLAYERS = (players) => {\r\n  return (dispatch) => {\r\n    http\r\n      .get('/quiz/players', players)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'NUMBER_PLAYERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quiztogglestatus = (id, status) => {\r\n\r\n  return async (dispatch) => {\r\n   await http.post(`quiz/toggle_status/${id}`).then((response) => {\r\n      notifySuccessadd(response.data.message)\r\n      console.log(status)\r\n    dispatch({\r\n        type: 'QUIZ_TOGGLE_STATUS',\r\n        data: status\r\n      })  \r\n     \r\n    }).catch((e) => {\r\n      \r\n      console.log(\"Error in Feed Post: \", e)\r\n      \r\n    })\r\n  }\r\n}"],"sourceRoot":""}