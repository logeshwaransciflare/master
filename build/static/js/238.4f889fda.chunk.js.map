{"version":3,"sources":["views/Predictor/predictoradd/Quizfin.js","views/Predictor/predictoradd/index.js"],"names":["colourOptions","value","label","AddQuestions","stepper","useForm","register","errors","handleSubmit","trigger","store","useSelector","state","quiz","addedQuizID","addedQuizID2","lang_id","langs","eng_question","lang_count","addloader","useState","multi","setMulti","scorewinner","setScorewinner","dispatch","useDispatch","console","log","count","setCount","che","map","ques","quest","className","Form","onSubmit","isObjEmpty","next","i","FormGroup","Label","for","theme","selectThemeColors","classNamePrefix","id","onChange","e","val","target","options","isClearable","Row","tag","Col","md","Input","type","name","placeholder","innerRef","required","classnames","check","inline","Button","Ripple","color","onClick","id_1","then","res","param","quiz_id","translation_quiz_questions","master_language_id","translation_quiz_question","document","getElementById","id_2","quiz_question_duration","quiz_question_sno","quiz_question_answers","translation_quiz_answers","translation_quiz_answer","quiz_answer_sno","quiz_answer_correct","isDisabled","disabled","addQuestion","blocking","size","AddQuiz","setStepper","ref","useRef","steps","title","subtitle","content","Quizfin","breadCrumbTitle","breadCrumbParent","breadCrumbActive","instance","el"],"mappings":"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","file":"static/js/238.4f889fda.chunk.js","sourcesContent":["import { Fragment, useState } from 'react'\r\n// import { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\n\r\nimport { useForm} from 'react-hook-form' //Controller\r\n import Select from 'react-select'\r\nimport { isObjEmpty, selectThemeColors } from '@utils' //selectThemeColors\r\nimport { addQuestion } from '../../Quiz/store/action'\r\nimport Repeater from '@components/repeater'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\nimport { Plus } from 'react-feather'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport UiLoader from '@components/ui-loader'\r\nconst colourOptions = [\r\n  { value: 'winnerselection', label: 'Winner Selection' },\r\n  { value: 'Multiplechoice', label: 'Multiple choice' },\r\n  { value: 'scorepredictor', label: 'Score Predictor' }\r\n]\r\nconst AddQuestions = ({ stepper }) => {\r\n  const { register, errors, handleSubmit, trigger} = useForm()\r\n  // const history = useHistory()\r\n  const store = useSelector(state => state.quiz)\r\n  //const [check, setCheck] = useState(false)\r\n  const { addedQuizID, addedQuizID2, lang_id, langs, eng_question, lang_count, addloader } = store\r\n  \r\n  const [multi, setMulti] = useState(false)\r\n  const [scorewinner, setScorewinner] = useState(false) \r\n  const dispatch = useDispatch()\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n}\r\n\r\nconsole.log(\"id\", lang_id)\r\nconsole.log(langs)\r\nconst [count, setCount] = useState(1)\r\nlet che = 0\r\n\r\nconst increaseCount = () => {\r\n\r\n  if (count === 7) return\r\n  setCount(count + 1)\r\n  che = count\r\n  \r\n}\r\nconsole.log(che)\r\nconst editcategory = (val) => {\r\n\r\n  console.log(val.target.id)\r\n  if (val.value === ('winnerselection' && che === count) || (val.value === 'scorepredictor' && che === count)) {\r\n    \r\n    setMulti(false)\r\n    setScorewinner(true)\r\n  } else if (val.value === 'Multiplechoice') {       \r\n    setScorewinner(false)\r\n    setMulti(true)\r\n  } else {    \r\n   \r\n    setScorewinner(false)\r\n    setMulti(false)\r\n  }\r\n}\r\n// let ch = -1\r\nconsole.log(eng_question.map(ques => ques.quest))\r\n  const submitQuestion = (id_1, id_2) => {\r\n   \r\n    //setCheck(true)\r\n   \r\n    console.log(addedQuizID)\r\n    trigger().then((res) => {\r\n      if (res) {\r\n        if (lang_count === 2) {\r\n          const param = {\r\n            quiz_id: addedQuizID,\r\n            translation_quiz_questions: [\r\n              {\r\n                  master_language_id: 1,\r\n                  translation_quiz_question: document.getElementById(`question-${id_1}`).value\r\n                },\r\n              {\r\n                master_language_id: 2,\r\n                translation_quiz_question: document.getElementById(`question-${id_2}`).value\r\n              }\r\n            ],\r\n            quiz_question_duration: '30',\r\n            quiz_question_sno: id_1,\r\n            quiz_question_answers: [\r\n              {\r\n                translation_quiz_answers:[\r\n                  {\r\n                    // master_language_id:document.getElementById('quiz_lang').value,\r\n                    master_language_id:1,\r\n                    translation_quiz_answer: document.getElementById(`answer1-${id_1}`).value\r\n                  },\r\n                  {\r\n                      // master_language_id:document.getElementById('quiz_lang').value,\r\n                      master_language_id:2,\r\n                      translation_quiz_answer: document.getElementById(`answer1-${id_2}`).value\r\n                    }\r\n                ],\r\n              quiz_answer_sno: '1',\r\n             quiz_answer_correct: '1'\r\n\r\n             },\r\n            {\r\n              translation_quiz_answers:[\r\n                {\r\n                  master_language_id:1,\r\n                  translation_quiz_answer: document.getElementById(`answer2-${id_1}`).value\r\n                },\r\n                {\r\n                  master_language_id:2,\r\n                  translation_quiz_answer: document.getElementById(`answer2-${id_2}`).value\r\n                }\r\n              ],\r\n            quiz_answer_sno: '2',\r\n           quiz_answer_correct: '0'\r\n           },\r\n           {\r\n            translation_quiz_answers:[\r\n              {\r\n                master_language_id:1,\r\n                translation_quiz_answer: document.getElementById(`answer3-${id_1}`).value\r\n              },\r\n              {\r\n                  master_language_id:2,\r\n                  translation_quiz_answer: document.getElementById(`answer3-${id_2}`).value\r\n                }\r\n            ],\r\n          quiz_answer_sno: '3',\r\n         quiz_answer_correct: '0'\r\n         },\r\n         {\r\n          translation_quiz_answers:[\r\n            {\r\n              master_language_id:1,\r\n              translation_quiz_answer: document.getElementById(`answer4-${id_1}`).value\r\n            },\r\n            {\r\n              master_language_id:2,\r\n              translation_quiz_answer: document.getElementById(`answer4-${id_2}`).value\r\n            }\r\n          ],\r\n        quiz_answer_sno: '4',\r\n       quiz_answer_correct: '0'\r\n       }\r\n      ]}\r\n      const isDisabled =  document.getElementById(`btn-${id_1}`)\r\n      if (isDisabled.disabled) return\r\n      isDisabled.disabled = true\r\n        dispatch(addQuestion(param))\r\n        console.log(param)\r\n        } else {\r\n          const param = {\r\n            quiz_id: addedQuizID,\r\n            translation_quiz_questions: [\r\n              {\r\n                master_language_id: 1,\r\n                translation_quiz_question: document.getElementById(`question-${id_1}`).value\r\n              }\r\n            ],\r\n            quiz_question_duration: '30',\r\n            quiz_question_sno: id_1,\r\n            quiz_question_answers: [\r\n              {\r\n                translation_quiz_answers:[\r\n                  {\r\n                    // master_language_id:document.getElementById('quiz_lang').value,\r\n                    master_language_id:1,\r\n                    translation_quiz_answer: document.getElementById(`answer1-${id_1}`).value\r\n                  }\r\n                ],\r\n              quiz_answer_sno: '1',\r\n             quiz_answer_correct: '1'\r\n             },\r\n            {\r\n              translation_quiz_answers:[\r\n                {\r\n                  master_language_id:1,\r\n                  translation_quiz_answer: document.getElementById(`answer2-${id_1}`).value\r\n                }\r\n              ],\r\n            quiz_answer_sno: '2',\r\n           quiz_answer_correct: '0'\r\n           },\r\n           {\r\n            translation_quiz_answers:[\r\n              {\r\n                master_language_id:1,\r\n                translation_quiz_answer: document.getElementById(`answer3-${id_1}`).value\r\n              }\r\n            ],\r\n          quiz_answer_sno: '3',\r\n         quiz_answer_correct: '0'\r\n         },\r\n         {\r\n          translation_quiz_answers:[\r\n            {\r\n              master_language_id:1,\r\n              translation_quiz_answer: document.getElementById(`answer4-${id_1}`).value\r\n            }\r\n          ],\r\n        quiz_answer_sno: '4',\r\n       quiz_answer_correct: '0'\r\n       }\r\n      ]}\r\n      const isDisabled =  document.getElementById(`btn-${id_1}`)\r\n      if (isDisabled.disabled) return\r\n      isDisabled.disabled = true\r\n        dispatch(addQuestion(param))\r\n        console.log(param)\r\n        }\r\n      \r\n      }\r\n    })\r\n  }\r\n  console.log(count)\r\n  console.log(scorewinner)\r\n  console.log(multi)\r\n  \r\n  console.log(addloader, addedQuizID2)\r\n  return (\r\n    <Fragment>\r\n       <> \r\n       <div className=\"content-header\">\r\n         <h5 className=\"mb-0\">Questions</h5>\r\n        <small> Questions.</small>\r\n     </div>\r\n       <Form onSubmit={handleSubmit(onSubmit)}>\r\n         <Repeater count={count}>\r\n         \r\n          {(i) => (\r\n            \r\n            <li key={i} className=\"list-unstyled\">\r\n              <FormGroup>\r\n              <Label className=\"form-label\" for=\"quiz_category\">\r\n              Predictor Type\r\n            </Label>\r\n                <Select\r\n                  theme={selectThemeColors}\r\n                  className='react-select'\r\n                  classNamePrefix=\"select\"\r\n                  id={`item-${i}`}\r\n                //  Value={prizeform.category}              \r\n                  onChange={(e) => editcategory(e)}\r\n                  options={colourOptions}\r\n                  isClearable={false}\r\n                />\r\n              </FormGroup>\r\n          {multi ?\r\n          <div>\r\n             <Row>\r\n                <FormGroup tag={Col} md=\"12\">\r\n                  <Label className=\"form-label\" for={`question-${i}`}>\r\n                    Quiz question\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id={`question-${i}`}\r\n                    name={`question-${i}`}\r\n                    placeholder=\"Who is Lionel Messi?\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`question-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\r\n                    Answer 1\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer1-${i}`}\r\n                    id={`answer1-${i}`}\r\n                    placeholder=\"Cricketer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer1-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\r\n                    Answer2\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer2-${i}`}\r\n                    id={`answer2-${i}`}\r\n                    placeholder=\"Footballer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer2-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer3-${i}`}>\r\n                    Answer 3\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer3-${i}`}\r\n                    id={`answer3-${i}`}\r\n                    placeholder=\"VolleyBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer3-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              \r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer4-${i}`}>\r\n                    Answer 4\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer4-${i}`}\r\n                    id={`answer4-${i}`}\r\n                    placeholder=\"BasketBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer4-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                \r\n             </div> : \"\"}\r\n             {scorewinner ?\r\n              <div> \r\n              <Row>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\r\n                   Team A Name\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer1-${i}`}\r\n                    id={`answer1-${i}`}\r\n                    placeholder=\"Team A Name\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer1-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n               \r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\r\n                  Team A Logo\r\n                  </Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name={`file-${i}`}\r\n                    id={`file-${i}`}\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\r\n                   Team B Name\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer1-${i}`}\r\n                    id={`answer1-${i}`}\r\n                    placeholder=\"Team B Name\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer1-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n               \r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\r\n                  Team B Logo\r\n                  </Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name={`file-${i}`}\r\n                    id={`file-${i}`}\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n             \r\n            </div> : \"\"\r\n            }       \r\n            \r\n           <Row>\r\n                <FormGroup tag={Col} md=\"6\">\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <Button.Ripple\r\n                      type=\"button\"\r\n                      color=\"primary\"\r\n                     // disabled = {i === 0 }\r\n                       id = {`btn-${i}`}\r\n                      className=\"btn-next\"\r\n                      onClick={() => submitQuestion(i)}\r\n                    >\r\n                      <span className=\"align-middle d-sm-inline-block d-none\">\r\n                        Submit Questions\r\n                      </span>\r\n                    </Button.Ripple>\r\n                    {addloader && (\r\n                    <div className=\"ml-2 mt-2\">\r\n                      <UiLoader blocking />\r\n                    </div>\r\n                  )}\r\n                  {addedQuizID2  && (\r\n                    <p className=\"ml-2 pt-1 mb-0 success-msg\">\r\n                      Post Added Successfull\r\n                    </p>\r\n                  )}\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n            </li>\r\n          )}\r\n        </Repeater>\r\n        <div className=\"d-flex justify-content-between\">\r\n          {/* {count <= 4 && ( */}\r\n          {count <= 6 && (\r\n            <Button.Ripple\r\n              className=\"btn-icon\"\r\n              color=\"primary\"\r\n              onClick={increaseCount}\r\n            >\r\n              <Plus size={14} />\r\n              <span className=\"align-middle ml-25\">Add New Question</span>\r\n            </Button.Ripple>\r\n          )}\r\n        </div>\r\n      </Form>\r\n      </>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddQuestions\r\n\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\n// import Quizdet from \"./Quizdet\"\r\nimport Quizfin from \"./Quizfin\"\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nconst AddQuiz = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    // {\r\n    //   id: 'quiz-details',\r\n    //   title: 'Quiz Details',\r\n    //   subtitle: 'Enter Quiz Details.',\r\n    //   content: <Quizdet stepper={stepper} />\r\n    // },\r\n    {\r\n      id: 'step-questions-eng',\r\n      title: 'Questions',\r\n      subtitle: 'Add Questions',\r\n      content: <Quizfin stepper={stepper} />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"horizontal-wizard\">\r\n       <BreadCrumbs breadCrumbTitle='Predictor' breadCrumbParent='Predictor' breadCrumbActive='Add' />\r\n      <Wizard instance={(el) => setStepper(el)} ref={ref} steps={steps} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddQuiz\r\n"],"sourceRoot":""}