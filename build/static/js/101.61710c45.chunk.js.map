{"version":3,"sources":["views/Quiz/Add/QuizQuestions.js","views/testingg/quizadd/Quizeng.js","views/Quiz/Add/QuizDetails.js","views/Quiz/Add/index.js","configs/httpConfig.js","views/Toast.js","@core/components/breadcrumbs/index.js","@core/components/ui-loader/index.js","@core/components/repeater/index.js","views/Quiz/store/action/index.js","../node_modules/react-feather/dist/icons/arrow-right.js","@core/components/wizard/index.js","../node_modules/react-feather/dist/icons/arrow-left.js"],"names":["AddQuestions","stepper","useForm","register","errors","handleSubmit","trigger","store","useSelector","state","quiz","addedQuizID","addedQuizID2","lang_id","langs","eng_question","lang_count","addloader","dispatch","useDispatch","onSubmit","isObjEmpty","next","console","log","useState","count","setCount","increaseCount","map","ques","quest","submitQuestion","id_1","id_2","then","res","param","quiz_id","translation_quiz_questions","master_language_id","translation_quiz_question","document","getElementById","value","quiz_question_duration","quiz_question_sno","quiz_question_answers","translation_quiz_answers","translation_quiz_answer","quiz_answer_sno","quiz_answer_correct","addQuestion","className","Form","i","l","Row","FormGroup","tag","Col","md","Label","for","Input","type","id","name","placeholder","innerRef","required","classnames","check","inline","defaulChecked","Button","Ripple","color","onClick","size","previous","blocking","querySelector","getengquestions","colourOptions","label","langOptions","QuizDetails","lang","setLang","nextpage","setNextpage","control","deleteForm","e","preventDefault","useEffect","getLangcount","getlangs","master_language_name","val","quiz_coins","quiz_expiry","quiz_category","translation_quiz","translation_quiz_name","getElementsByName","addQuiz","QuizQuestions","Quizeng","CardBody","render","field","isClearable","onChange","rules","defaultValue","options","classNamePrefix","theme","selectThemeColors","outline","sm","as","Select","Flatpickr","min","onKeyPress","key","AddQuiz","setStepper","ref","useRef","steps","title","subtitle","content","breadCrumbTitle","breadCrumbActive","instance","el","token","localStorage","getItem","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","BreadCrumbs","props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","to","active","UILoader","children","loader","overlayColor","Tag","style","backgroundColor","defaultProps","Repeater","rest","items","push","getAllData","params","page","a","http","get","response","data","getcricketquiz","dataperPage","getfootballquiz","getbasketballquiz","getLang","question","post","catch","err","getquizDetails","put","getQuizQuestions","resetQuizEditQuestions","quizEditQuestions","quizData","quizEditQuestionsEach","quiztogglestatus","status","_extends","Object","assign","target","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRight","forwardRef","_ref","_ref$color","_ref$size","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","propTypes","PropTypes","string","oneOfType","number","displayName","Wizard","separator","activeIndex","setActiveIndex","Stepper","current","addEventListener","event","detail","indexStep","step","index","crossed","ArrowLeft"],"mappings":"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","file":"static/js/101.61710c45.chunk.js","sourcesContent":["import { Fragment, useState } from 'react'\n// import { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { isObjEmpty} from '@utils'\nimport { useForm} from 'react-hook-form'\nimport { addQuestion } from '../../Quiz/store/action'\nimport Repeater from '@components/repeater'\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\nimport { Plus, ArrowLeft } from 'react-feather'\nimport { useSelector, useDispatch } from 'react-redux'\nimport UiLoader from '@components/ui-loader'\n\nconst AddQuestions = ({ stepper }) => {\n  const { register, errors, handleSubmit, trigger} = useForm()\n  // const history = useHistory()\n  const store = useSelector(state => state.quiz)\n  const { addedQuizID, addedQuizID2, lang_id, langs, eng_question, lang_count, addloader } = store\n  const dispatch = useDispatch()\n  const onSubmit = () => {\n    trigger()\n    if (isObjEmpty(errors)) {\n      stepper.next()\n    }\n}\n\nconsole.log(\"id\", lang_id)\nconsole.log(langs)\nconst [count, setCount] = useState(1)\nconst increaseCount = () => {\n  if (count === 5) return\n  setCount(count + 1)\n}\n\nconsole.log(eng_question.map(ques => ques.quest))\n  const submitQuestion = (id_1, id_2) => {\n    console.log(addedQuizID)\n    trigger().then((res) => {\n      if (res) {\n        if (lang_count === 2) {\n          const param = {\n            quiz_id: addedQuizID,\n            translation_quiz_questions: [\n              {\n                  master_language_id: 1,\n                  translation_quiz_question: document.getElementById(`question-${id_1}`).value\n                },\n              {\n                master_language_id: 2,\n                translation_quiz_question: document.getElementById(`question-${id_2}`).value\n              }\n            ],\n            quiz_question_duration: '30',\n            quiz_question_sno: id_1,\n            quiz_question_answers: [\n              {\n                translation_quiz_answers:[\n                  {\n                    // master_language_id:document.getElementById('quiz_lang').value,\n                    master_language_id:1,\n                    translation_quiz_answer: document.getElementById(`answer1-${id_1}`).value\n                  },\n                  {\n                      // master_language_id:document.getElementById('quiz_lang').value,\n                      master_language_id:2,\n                      translation_quiz_answer: document.getElementById(`answer1-${id_2}`).value\n                    }\n                ],\n              quiz_answer_sno: '1',\n             quiz_answer_correct: '1'\n\n             },\n            {\n              translation_quiz_answers:[\n                {\n                  master_language_id:1,\n                  translation_quiz_answer: document.getElementById(`answer2-${id_1}`).value\n                },\n                {\n                  master_language_id:2,\n                  translation_quiz_answer: document.getElementById(`answer2-${id_2}`).value\n                }\n              ],\n            quiz_answer_sno: '2',\n           quiz_answer_correct: '0'\n           },\n           {\n            translation_quiz_answers:[\n              {\n                master_language_id:1,\n                translation_quiz_answer: document.getElementById(`answer3-${id_1}`).value\n              },\n              {\n                  master_language_id:2,\n                  translation_quiz_answer: document.getElementById(`answer3-${id_2}`).value\n                }\n            ],\n          quiz_answer_sno: '3',\n         quiz_answer_correct: '0'\n         },\n         {\n          translation_quiz_answers:[\n            {\n              master_language_id:1,\n              translation_quiz_answer: document.getElementById(`answer4-${id_1}`).value\n            },\n            {\n              master_language_id:2,\n              translation_quiz_answer: document.getElementById(`answer4-${id_2}`).value\n            }\n          ],\n        quiz_answer_sno: '4',\n       quiz_answer_correct: '0'\n       }\n      ]}\n        dispatch(addQuestion(param))\n        console.log(param)\n        } else {\n          const param = {\n            quiz_id: addedQuizID,\n            translation_quiz_questions: [\n              {\n                master_language_id: 1,\n                translation_quiz_question: document.getElementById(`question-${id_1}`).value\n              }\n            ],\n            quiz_question_duration: '30',\n            quiz_question_sno: id_1,\n            quiz_question_answers: [\n              {\n                translation_quiz_answers:[\n                  {\n                    // master_language_id:document.getElementById('quiz_lang').value,\n                    master_language_id:1,\n                    translation_quiz_answer: document.getElementById(`answer1-${id_1}`).value\n                  }\n                ],\n              quiz_answer_sno: '1',\n             quiz_answer_correct: '1'\n             },\n            {\n              translation_quiz_answers:[\n                {\n                  master_language_id:1,\n                  translation_quiz_answer: document.getElementById(`answer2-${id_1}`).value\n                }\n              ],\n            quiz_answer_sno: '2',\n           quiz_answer_correct: '0'\n           },\n           {\n            translation_quiz_answers:[\n              {\n                master_language_id:1,\n                translation_quiz_answer: document.getElementById(`answer3-${id_1}`).value\n              }\n            ],\n          quiz_answer_sno: '3',\n         quiz_answer_correct: '0'\n         },\n         {\n          translation_quiz_answers:[\n            {\n              master_language_id:1,\n              translation_quiz_answer: document.getElementById(`answer4-${id_1}`).value\n            }\n          ],\n        quiz_answer_sno: '4',\n       quiz_answer_correct: '0'\n       }\n      ]}\n        dispatch(addQuestion(param))\n        console.log(param)\n        }\n    \n        // dispatch(addQuestion(param))\n        // console.log(param)\n        // console.log(document.getElementById('quiz_lang').value)\n      }\n    })\n  }\n  return (\n    <Fragment>\n      {lang_count === 2 ? <>  <div className=\"content-header\">\n        <h5 className=\"mb-0\">Questions</h5>\n        <small>Enter Questions.</small>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Repeater count={count}>\n          {(i, l) => (\n            <li key={i} className=\"list-unstyled\">\n              <Row>\n              <div className=\"content-header\">\n        <small>Enter English.</small>\n      </div>\n                <FormGroup tag={Col} md=\"12\">\n                  <Label className=\"form-label\" for={`question-${i}`}>\n                    Quiz question\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    id={`question-${i}`}\n                    name={`question-${i}`}\n                    placeholder=\"Enter quiz question?\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`question-${i}`]\n                    })}\n                  />\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\n                    Option-1\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer1-${i}`}\n                    id={`answer1-${i}`}\n                    placeholder=\"Option-1\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer1-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          defaulChecked\n                          value=\"1\"\n                        />\n                        Correct Answer\n                      </Label>\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\n                    Option-2\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer2-${i}`}\n                    id={`answer2-${i}`}\n                    placeholder=\"Option-2\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer2-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"2\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer3-${i}`}>\n                    Option-3\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer3-${i}`}\n                    id={`answer3-${i}`}\n                    placeholder=\"Option-3\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer3-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"3\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer4-${i}`}>\n                    Option-4\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer4-${i}`}\n                    id={`answer4-${i}`}\n                    placeholder=\"Option-4\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer4-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"4\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <div className=\"content-header\">\n                <br/>\n        <small>Enter Arabic.</small>\n      </div>\n              <Row>\n                <FormGroup tag={Col} md=\"12\">\n                  <Label className=\"form-label\" for={`question-${l}`}>\n                    Quiz question\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    id={`question-${l}`}\n                    name={`question-${l}`}\n                    placeholder=\"Enter quiz question?\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`question-${l}`]\n                    })}\n                  />\n                </FormGroup>\n\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer1-${l}`}>\n                    Option-1\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer1-${l}`}\n                    id={`answer1-${l}`}\n                    placeholder=\"Option-1\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer1-${l}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${l}`}\n                          defaulChecked\n                          value=\"1\"\n                        />\n                        Correct Answer\n                      </Label>\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer2-${l}`}>\n                    Option-2\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer2-${l}`}\n                    id={`answer2-${l}`}\n                    placeholder=\"Option-2\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer2-${l}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${l}`}\n                          value=\"2\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer3-${l}`}>\n                    Option-3\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer3-${l}`}\n                    id={`answer3-${l}`}\n                    placeholder=\"Option-3\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer3-${l}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${l}`}\n                          value=\"3\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer4-${l}`}>\n                    Option-4\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer4-${l}`}\n                    id={`answer4-${l}`}\n                    placeholder=\"Option-4\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer4-${l}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${l}`}\n                          value=\"4\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"6\">\n                  <div className=\"d-flex justify-content-end\">\n                    <Button.Ripple\n                      type=\"button\"\n                      color=\"primary\"\n                      className=\"btn-next\"\n                      onClick={() => submitQuestion(i, l)}\n                    >\n                      <span className=\"align-middle d-sm-inline-block d-none\">\n                        Submit Question\n                      </span>\n                    </Button.Ripple>\n                  </div>\n                </FormGroup>\n              </Row>\n            </li>\n          )}\n        </Repeater>\n        <div className=\"d-flex justify-content-between\">\n          {/* {count <= 4 && ( */}\n          {count <= 30 && (\n            <Button.Ripple\n              className=\"btn-icon\"\n              color=\"primary\"\n              onClick={increaseCount}\n            >\n              <Plus size={14} />\n              <span className=\"align-middle ml-25\">Add New Question</span>\n            </Button.Ripple>\n          )}\n          {count > 4 && (\n              <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\n              <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\n              <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n              </Button.Ripple>\n          )}\n        </div>\n      </Form></> : <> <div className=\"content-header\">\n        <h5 className=\"mb-0\">Questions</h5>\n        <small>Enter Questions.</small>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Repeater count={count}>\n          {(i) => (\n            <li key={i} className=\"list-unstyled\">\n              <Row>\n                <FormGroup tag={Col} md=\"12\">\n                  <Label className=\"form-label\" for={`question-${i}`}>\n                    Quiz question\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    id={`question-${i}`}\n                    name={`question-${i}`}\n                    placeholder=\"Enter quiz question?\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`question-${i}`]\n                    })}\n                  />\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\n                    Option-1\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer1-${i}`}\n                    id={`answer1-${i}`}\n                    placeholder=\"Option-1\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer1-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          defaulChecked\n                          value=\"1\"\n                        />\n                        Correct Answer\n                      </Label>\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\n                    Option-2\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer2-${i}`}\n                    id={`answer2-${i}`}\n                    placeholder=\"Option-2\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer2-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"2\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer3-${i}`}>\n                    Option-3\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer3-${i}`}\n                    id={`answer3-${i}`}\n                    placeholder=\"Option-3\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer3-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"3\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"8\">\n                  <Label className=\"form-label\" for={`answer4-${i}`}>\n                    Option-4\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name={`answer4-${i}`}\n                    id={`answer4-${i}`}\n                    placeholder=\"Option-4\"\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors[`answer4-${i}`]\n                    })}\n                  />\n                </FormGroup>\n                <FormGroup tag={Col} md=\"4\">\n                  <div className=\"d-flex height-95-per align-items-end\">\n                    <FormGroup check inline>\n                      {/* <Label check>\n                        <Input\n                          type=\"radio\"\n                          name={`correct-answer-${i}`}\n                          value=\"4\"\n                        />\n                        Correct Answer\n                      </Label> */}\n                    </FormGroup>\n                  </div>\n                </FormGroup>\n              </Row>\n              <Row>\n                <FormGroup tag={Col} md=\"6\">\n                  <div className=\"d-flex justify-content-end\">\n                    <Button.Ripple\n                      type=\"button\"\n                      color=\"primary\"\n                      className=\"btn-next\"\n                      onClick={() => submitQuestion(i)}\n                    >\n                      <span className=\"align-middle d-sm-inline-block d-none\">\n                        Submit Question\n                      </span>\n                    </Button.Ripple>\n                    {addloader && (\n                    <div className=\"ml-2 mt-2\">\n                      <UiLoader blocking />\n                    </div>\n                  )}\n                  {addedQuizID2 && (\n                    <p className=\"ml-2 pt-1 mb-0 success-msg\">\n                      Post Added Successfull\n                    </p>\n                  )}\n                  </div>\n                </FormGroup>\n              </Row>\n            </li>\n          )}\n        </Repeater>\n        <div className=\"d-flex justify-content-between\">\n          {/* {count <= 4 && ( */}\n          {count <= 4 && (\n            <Button.Ripple\n              className=\"btn-icon\"\n              color=\"primary\"\n              onClick={increaseCount}\n            >\n              <Plus size={14} />\n              <span className=\"align-middle ml-25\">Add New Question</span>\n            </Button.Ripple>\n          )}\n             {count > 4 && (\n              <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\n              <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\n              <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n             </Button.Ripple>\n          )}\n        </div>\n      </Form></>}\n     \n    \n    </Fragment>\n  )\n}\n\nexport default AddQuestions\n\n","import { Fragment, useState } from 'react'\r\n// import { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { isObjEmpty} from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\n// import { addQuestion } from '../../Quiz/store/action'\r\nimport {getengquestions} from \"../../Quiz/store/action\"\r\nimport Repeater from '@components/repeater'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\nimport { Plus, ArrowRight } from 'react-feather'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst AddQuestions = ({ stepper }) => {\r\n  const { register, errors, handleSubmit, trigger } = useForm()\r\n  const dispatch = useDispatch()\r\n  // const history = useHistory()\r\n  const store = useSelector(state => state.quiz)\r\n  const { lang_id, langs, addedQuizID} = store\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n  const [quest] = useState([{quest:\"test\"}, {quest:\"test2\"}])\r\n  console.log(\"id\", lang_id)\r\n  console.log(langs)\r\n  const [count, setCount] = useState(1)\r\n  const increaseCount = () => {\r\n    if (count === 5) return\r\n    setCount(count + 1)\r\n  }\r\n\r\n  // const langOptions = [\r\n  //   { value: '1', label: 'English' },\r\n  //   { value: '2', label: 'Arabic' },\r\n  //   {value: '3',  label: 'tamil'}\r\n  // ]\r\n\r\n  const submitQuestion = (id) => {\r\n    trigger().then((res) => {\r\n      if (res) {\r\n        const param = {\r\n          quiz_id: addedQuizID,\r\n          translation_quiz_questions: [\r\n            {\r\n              master_language_id: lang_id,\r\n              translation_quiz_question: document.getElementById(`question-${id}`).value\r\n            }\r\n          ],\r\n          quiz_question_duration: '30',\r\n          quiz_question_sno: id,\r\n          quiz_question_answers: [\r\n            {\r\n              translation_quiz_answers:[\r\n                {\r\n                  // master_language_id:document.getElementById('quiz_lang').value,\r\n                  master_language_id:lang_id,\r\n                  translation_quiz_answer: document.getElementById(`answer1-${id}`).value\r\n                }\r\n              ],\r\n            quiz_answer_sno: '1',\r\n           quiz_answer_correct:\r\n           document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n           .value === '1'\r\n           ? 1\r\n           : 0\r\n           },\r\n          {\r\n            translation_quiz_answers:[\r\n              {\r\n                master_language_id:lang_id,\r\n                translation_quiz_answer: document.getElementById(`answer2-${id}`).value\r\n              }\r\n            ],\r\n          quiz_answer_sno: '2',\r\n         quiz_answer_correct:\r\n         document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n         .value === '1'\r\n         ? 1\r\n         : 0\r\n         },\r\n         {\r\n          translation_quiz_answers:[\r\n            {\r\n              master_language_id:lang_id,\r\n              translation_quiz_answer: document.getElementById(`answer3-${id}`).value\r\n            }\r\n          ],\r\n        quiz_answer_sno: '3',\r\n       quiz_answer_correct:\r\n       document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n       .value === '1'\r\n       ? 1\r\n       : 0\r\n       },\r\n       {\r\n        translation_quiz_answers:[\r\n          {\r\n            master_language_id:lang_id,\r\n            translation_quiz_answer: document.getElementById(`answer4-${id}`).value\r\n          }\r\n        ],\r\n      quiz_answer_sno: '4',\r\n     quiz_answer_correct:\r\n     document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n     .value === '1'\r\n     ? 1\r\n     : 0\r\n     }\r\n    ]}\r\n    \r\n        // dispatch(addQuestions(param))\r\n        console.log(param)\r\n        console.log(document.getElementById('quiz_lang').value)\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-header\">\r\n        <h5 className=\"mb-0\">Questions</h5>\r\n        <small>Enter Questions.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Repeater count={count}>\r\n          {(i) => (\r\n            <li key={i} className=\"list-unstyled\">\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"12\">\r\n                  <Label className=\"form-label\" for={`question-${i}`}>\r\n                    Quiz question\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id={`question-${i}`}\r\n                    name={`question-${i}`}\r\n                    placeholder=\"Who is Lionel Messi?\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`question-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\r\n                    Answer 1\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer1-${i}`}\r\n                    id={`answer1-${i}`}\r\n                    placeholder=\"Cricketer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer1-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          defaulChecked\r\n                          value=\"1\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\r\n                    Answer2\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer2-${i}`}\r\n                    id={`answer2-${i}`}\r\n                    placeholder=\"Footballer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer2-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          value=\"2\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer3-${i}`}>\r\n                    Answer 3\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer3-${i}`}\r\n                    id={`answer3-${i}`}\r\n                    placeholder=\"VolleyBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer3-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          value=\"3\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer4-${i}`}>\r\n                    Answer 4\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer4-${i}`}\r\n                    id={`answer4-${i}`}\r\n                    placeholder=\"BasketBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer4-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name={`correct-answer-${i}`}\r\n                          value=\"4\"\r\n                        />\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"6\">\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <Button.Ripple\r\n                      type=\"button\"\r\n                      color=\"primary\"\r\n                      className=\"btn-next\"\r\n                      onClick={() => submitQuestion(i)}\r\n                    >\r\n                      <span className=\"align-middle d-sm-inline-block d-none\">\r\n                        Submit Questions\r\n                      </span>\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n            </li>\r\n          )}\r\n        </Repeater>\r\n        <div className=\"d-flex justify-content-between\">\r\n          {/* {count <= 4 && ( */}\r\n          {count <= 30 && (\r\n            <Button.Ripple\r\n              className=\"btn-icon\"\r\n              color=\"primary\"\r\n              onClick={increaseCount}\r\n            >\r\n              <Plus size={14} />\r\n              <span className=\"align-middle ml-25\">Add New Question</span>\r\n            </Button.Ripple>\r\n          )}\r\n        </div>\r\n        <div className=\"d-flex justify-content-end\">\r\n          {/* <Button.Ripple\r\n            color=\"secondary\"\r\n            className=\"btn-prev\"\r\n            outline\r\n            disabled\r\n          >\r\n            <ArrowLeft\r\n              size={14}\r\n              className=\"align-middle mr-sm-25 mr-0\"\r\n            ></ArrowLeft>\r\n            <span className=\"align-middle d-sm-inline-block d-none\">\r\n              Previous\r\n            </span>\r\n          </Button.Ripple> */}\r\n          <Button.Ripple \r\n          onClick={() => {\r\n              stepper.next()\r\n              console.log(document.getElementById(`question-${0}`).value)\r\n            //   setQuest([\r\n            //       {quest1:document.getElementById(`question-${0}`).value}\r\n                //   {quest2:document.getElementById(`question-${1}`).value}\r\n            //  {quest3:document.getElementById(`question-${2}`).value},\r\n            // {quest4:document.getElementById(`question-${3}`).value}\r\n        // ])\r\n                dispatch(getengquestions(quest))\r\n                console.log(quest)\r\n                //   dispatch(getengquestions(\"ok\"))\r\n            }} \r\n          color=\"primary\" \r\n          className=\"btn-next\">\r\n            <span className=\"align-middle d-sm-inline-block d-none\">Next</span>\r\n            <ArrowRight\r\n              size={14}\r\n              className=\"align-middle ml-sm-25 ml-0\"\r\n            ></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddQuestions\r\n\r\n\r\n// const param = {\r\n//   quiz_id: addedQuizID2,\r\n//   translation_quiz_questions: [\r\n//     {\r\n//       master_language_id: en,\r\n//       translation_quiz_question: document.getElementById(`question-${id}`).value\r\n//     }\r\n//   ],\r\n//   quiz_question_duration: '30',\r\n//   quiz_question_sno: id,\r\n//   quiz_question_answers: [\r\n//     {\r\n//       translation_quiz_answers:[\r\n//         {\r\n//           master_language_id:lang_id,\r\n//           translation_quiz_answer: document.getElementById(`answer1-${id}`).value,\r\n//         }\r\n//       ],\r\n//     quiz_answer_sno: '1',\r\n//    quiz_answer_correct:\r\n//    document.querySelector(`input[name=\"correct-answer-${id}\"]:checked`)\r\n//    .value === '1'\r\n//    ? 1\r\n//    :0\r\n//    },\r\n","import { Fragment, useEffect, useState } from 'react'\nimport classnames from 'classnames'\nimport Select from 'react-select'\nimport Flatpickr from 'react-flatpickr'\nimport { selectThemeColors } from '@utils'\nimport Repeater from '@components/repeater'\nimport { useForm, Controller } from 'react-hook-form'\nimport { ArrowRight, Plus, X } from 'react-feather'\n// import { yupResolver } from '@hookform/resolvers/yup'\nimport { Form, Label, Input, FormGroup, Row, Col, Button, CardBody} from 'reactstrap'\n// import { addQuiz, getLang } from '../../Quiz/store/action'\nimport { getLangcount, addQuiz, getlangs } from \"../store/action\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport QuizQuestions from './QuizQuestions'\nimport Quizeng from \"../../testingg/quizadd/Quizeng\"\n// import { QuizDetailsSchema } from './validations'\nconst colourOptions = [\n  { value: 'Cricket', label: 'Cricket' },\n  { value: 'Football', label: 'Football' },\n  { value: 'Basketball', label: 'Basketball' }\n]\nconst langOptions = [\n  { value: 1, label: 'English' },\n  { value: 2, label: 'Arabic' }\n]\n\nconst QuizDetails = ({ stepper }) => {\n  const [lang, setLang] = useState(1)\n  const [count, setCount] = useState(1)\n  const [nextpage, setNextpage] = useState(false)\n  const store = useSelector(state => state.quiz)\n  const {langs, lang_count, addedQuizID} = store\n    const dispatch = useDispatch()\n  const { register, errors, handleSubmit, control, trigger } = useForm({\n    // resolver: yupResolver(QuizDetailsSchema)\n  })\n  const increaseCount = () => {\n    // if (count === 2) { \n    //   console.log(\"error\")\n    // } else {\n      setCount(count + 1) \n  }\n  const preventMinus = (e) => {\n    console.log(e)\n    if (e.key === '-' || e.key === '.' || e.key === '+' || e.key === 'e') {\n        e.preventDefault()\n    }\n}\n\n  // const en = \"1\"\n  const deleteForm = (e) => {\n    e.preventDefault()\n    console.log('count', count)\n    setCount(count - 1)\n    // e.target.closest('form').remove()\n    console.log(count)\n  }\n\n  // useEffect(() => {\n  //   setCount(count - 1)\n  // }, [deleteForm])\n\n\n  useEffect(() => {\n    dispatch(getLangcount(count))\n    dispatch(getlangs())\n    console.log(langs)\n  }, [count])\n  const onSubmit = (val) => {\n    console.log(val)\n    if (lang_count === 1) {\n      const param = {\n        // ...val,\n        quiz_coins:val.quiz_coins,\n        quiz_expiry: val.quiz_expiry[0], \n        quiz_category: val.quiz_category.value,\n        translation_quiz: [\n          {\n            master_language_id: lang,\n            translation_quiz_name:  document.getElementById(`name-${0}`).value\n          }\n        ]}\n        console.log(document.getElementsByName(`item-na-${0}`))\n        console.log(lang)\n        console.log(`${val}.item-na-${count}.value`)\n        console.log(document.getElementById(`item-na-${0}`).value)\n        console.log(param)        \n      dispatch(addQuiz(param))\n      setNextpage(true)\n    } else {\n      const param = {\n        // ...val,\n        quiz_coins:val.quiz_coins,\n        quiz_expiry: val.quiz_expiry[0],\n        quiz_category: val.quiz_category.value,\n        translation_quiz: [\n          {\n            master_language_id: 1,\n            translation_quiz_name:  document.getElementById(`name-0`).value\n            // langs === \"2\" ? document.getElementById(`name-${0}`).value : \"2\"\n          },\n          {\n            master_language_id: 2,\n            translation_quiz_name:  document.getElementById(`name-1`).value\n          }\n        ]}\n      dispatch(addQuiz(param))\n      setNextpage(true)\n    }\n    // dispatch(getLang(val.quiz_lang.value))\n    trigger()\n    nextpage === true ? stepper.next(QuizQuestions) : stepper.next(Quizeng)\n  }\n  console.log(addedQuizID)\n  console.log('count', count)\n  console.log(langs.map(l => l.master_language_name))\n  return (\n    <Fragment>     \n      <div className=\"content-header\">\n        <h5 className=\"mb-0\">Quiz Details</h5>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n        <CardBody>\n        <Repeater count={count}>\n          {i => (\n            <Form key={i}>\n              <Row className='justify-content-between align-items-center'>\n                  <Col md={4}>\n                  <FormGroup >\n            <Label className=\"form-label\" for={`item-nam-${i}`}>\n              Quiz lang\n            </Label>\n            {/* <Controller\n              isClearable\n              id={`item-na-${i}`}\n              control={control}\n              onChange={() => lang123()}\n              name={`item-na-${i}`}\n              rules={{ required: true }}\n              options={langOptions}\n              className={classnames('react-select', {\n                'is-invalid': errors['quiz_lang']\n              })}\n              classNamePrefix=\"select\"\n              theme={selectThemeColors}\n            /> */}\n             <Controller              \n                control={control}\n                render={({ field: { ...field } }) => (\n                  <Select\n                  isClearable\n                  {...field}\n                  id={`item-na-${i}`}\n                  control={control}\n                  onChange={(e) => setLang(e?.value)}\n                  name={`item-na-${i}`}\n                  rules={{ required: true }}\n                  defaultValue={langOptions[0]}      \n                  options={langOptions}\n                  className={classnames('react-select', {\n                    'is-invalid': errors['item-na-${i}']\n                  })}\n                  classNamePrefix=\"select\"\n                  theme={selectThemeColors}             \n                  />\n                )}\n                name='reactSelect'\n              // defaultValue={series[0]}\n              />\n          </FormGroup>\n                  </Col>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label for={`item-name-${i}`}>Quiz Name</Label>\n                    {/* <Input type='text' id={`item-name-${i}`} placeholder='Sciflare Fantasy Admin' /> */}\n                     <Input  \n                     type=\"text\" \n                     id={`name-${i}`} \n                     name={`name-${i}`}                     \n                     innerRef={register({ required: true })}\n                     className={classnames({\n                       'is-invalid': errors[`name-${i}`]\n                     })}\n                     />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                {count === 2 ? \"\" :\n        <Button.Ripple className='btn-icon' color='primary' onClick={increaseCount}>\n          <Plus size={14} />\n          <span className='align-middle ml-25'>Add New</span>\n        </Button.Ripple>}\n                  { i === 0 ? \"\" :\n                  <Button.Ripple color='danger'  className='text-nowrap px-1' onClick={deleteForm} outline>\n                    <X size={14} className='mr-50' />\n                    <span>Delete</span>\n                  </Button.Ripple>}\n                </Col>\n                <Col sm={12}>\n                </Col>\n              </Row>\n            </Form>\n          )}\n        </Repeater>\n      </CardBody>\n        </Row>\n        <Row>\n        <FormGroup tag={Col} md=\"4\">\n            <Label className=\"form-label\" for=\"quiz_category\">\n              Quiz Category\n            </Label>\n            <Controller\n              isClearable\n              as={Select}\n              id=\"quiz_category\"\n              control={control}\n              name=\"quiz_category\"\n              rules={{ required: true }}\n              options={colourOptions}\n              className={classnames('react-select', {\n                'is-invalid': errors['quiz_category']\n              })}\n              classNamePrefix=\"select\"\n              theme={selectThemeColors}\n            />\n          </FormGroup>\n          <div className=\"form-group form-password-toggle col-md-4\">\n            <Label className=\"form-label\" for=\"quiz_expiry\">\n              Expiry\n            </Label>\n            <Controller\n              data-enable-time\n              placeholder='Select...'\n              as={Flatpickr}\n              control={control}\n              id=\"quiz_expiry\"\n              name=\"quiz_expiry\"\n              rules={{ required: true }}\n              className={classnames('form-control flatpickr-input', {\n                'is-invalid': errors['quiz_expiry']\n              })}\n            />\n          </div>\n          <div className=\"form-group form-password-toggle col-md-4\">\n            <Label className=\"form-label\" for=\"quiz_coins\">\n              Quiz coins\n            </Label>\n            <Input\n              type=\"number\"\n              min=\"0\"\n              placeholder='Select...'\n              name=\"quiz_coins\"\n              id=\"quiz_coins\"\n              onKeyPress={preventMinus}\n              innerRef={register({ required: true })}\n              className={classnames({\n                'is-invalid': errors['quiz_coins']\n              })}\n            />\n          </div>\n        </Row>\n        <div className=\"d-flex justify-content-end\">\n          {/* <Button.Ripple\n            color=\"secondary\"\n            className=\"btn-prev\"\n            outline\n            disabled\n          >\n            <ArrowLeft\n              size={14}\n              className=\"align-middle mr-sm-25 mr-0\"\n            ></ArrowLeft>\n            <span className=\"align-middle d-sm-inline-block d-none\">\n              Previous\n            </span>\n          </Button.Ripple> */}\n          <Button.Ripple type=\"submit\" color=\"primary\" className=\"btn-next\">\n            <span className=\"align-middle d-sm-inline-block d-none\">Next</span>\n            <ArrowRight\n              size={14}\n              className=\"align-middle ml-sm-25 ml-0\"\n            ></ArrowRight>\n          </Button.Ripple>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default QuizDetails\n\n","import { useRef, useState } from 'react'\nimport Wizard from '@components/wizard'\nimport QuizDetails from './QuizDetails'\nimport QuizQuestions from './QuizQuestions'\n\n// ** Import BreadCrumbs From Component\nimport BreadCrumbs from '@components/breadcrumbs'\n\nconst AddQuiz = () => {\n  const [stepper, setStepper] = useState(null)\n  const ref = useRef(null)\n\n  const steps = [\n    {\n      id: 'quiz-details',\n      title: 'Quiz Details',\n      subtitle: 'Enter Quiz Details.',\n      content: <QuizDetails stepper={stepper} />\n    },\n    {\n      id: 'step-questions-eng',\n      title: 'Questions',\n      subtitle: 'Add Questions',\n      content: <QuizQuestions stepper={stepper} />\n    }\n  ]\n\n  return (\n    <div className=\"horizontal-wizard\">\n       <BreadCrumbs breadCrumbTitle='Quiz' breadCrumbActive='Add' />\n      <Wizard instance={(el) => setStepper(el)} ref={ref} steps={steps} />\n    </div>\n  )\n}\n\nexport default AddQuiz\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n//import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n  //UncontrolledButtonDropdown,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  //DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  <Link to={`/${breadCrumbParent}`}>{breadCrumbParent}</Link>\r\n                </BreadcrumbItem>\r\n                ) : ''\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Repeater = (props) => {\r\n  // ** Props\r\n  const { count, tag, children, ...rest } = props\r\n\r\n  // ** Custom Tag\r\n  const Tag = tag\r\n\r\n  // ** Default Items\r\n  const items = []\r\n\r\n  // ** Loop passed count times and push it in items Array\r\n  for (let i = 0; i < count; i++) {\r\n    items.push(children(i))\r\n  }\r\n\r\n  return <Tag {...rest}>{items}</Tag>\r\n}\r\n\r\n// ** PropTypes\r\nRepeater.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  tag: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nRepeater.defaultProps = {\r\n  tag: 'div'\r\n}\r\n\r\nexport default Repeater\r\n","import http from '../../../../configs/httpConfig'\r\nimport {notifyError, notifySuccessadd, notifySuccessdelete, notifyWarning} from \"../../../Toast\"\r\n\r\nexport const getAllQuizDataInit = () => ({\r\n  type: 'GET_ALL_DATA_INIT'\r\n})\r\n\r\n// ** Get all Data\r\nexport const getAllData = (params, page) => {\r\n  return async (dispatch) => {\r\n    \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_ALL_DATA',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getcricketquiz = (params, page, dataperPage = '') => {\r\n  return async (dispatch) => {\r\n   \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Cricket&page=${page}&limit=${dataperPage}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_CRIC_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getfootballquiz = (params, page, dataperPage) => {\r\n  return async (dispatch) => {\r\n    \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Football&page=${page}&limit=${dataperPage}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_FOOT_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getbasketballquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n  \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Basketball&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_BASK_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLangcount = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLang = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getengquestions = (question) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_QUESTION',\r\n      data:question\r\n    })\r\n  }\r\n}\r\n\r\nexport const getenganswers = (...answers) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_ANSWERS',\r\n      data:answers\r\n    })\r\n  }\r\n}\r\n\r\n// export const getquizdetails = (datas) => {\r\n//   return (dispatch) => {\r\n//     dispatch({\r\n//       type:'QUIZ_DETAILS',\r\n//       data:datas\r\n//     })\r\n//     console.log(datas)\r\n//   }\r\n// }\r\n\r\nexport const getlangs = (params) => {\r\n  return async (dispatch) => {\r\n    await http.get('/master/language/dropdownlist', { params }).then((response) => {\r\n      dispatch({\r\n        type: 'LANGS_ID',\r\n        data: response.data,\r\n        params\r\n      })\r\n      \r\n    })\r\n  }\r\n}\r\n// ** Add new quiz\r\nexport const addQuiz = (quiz) => {\r\n  return (dispatch) => {\r\n    http\r\n      .post('/quiz/add', quiz)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_ADD',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        notifyError(err.message)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addQuizInit = () => ({\r\n  type: 'ADD_QUIZ_POST_INIT'\r\n})\r\n\r\nexport const addQuestion = (question) => {\r\n  return (dispatch) => {\r\n    dispatch(addQuizInit())\r\n    http\r\n      .post('/quiz/questions/add', question)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_QUESTION_ADD',\r\n          data: response.data\r\n        })\r\n        \r\n      })\r\n      .catch((err) => {\r\n        notifyWarning(err.message)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const resetQuizQuestions = () => ({\r\n  type: 'RESET_QUESTIONS_ADDED'\r\n})\r\n\r\nexport const deleteQuiz = (id) => {\r\n  return (dispatch) => {\r\n    http\r\n      .delete(`/quiz/delete/${id}`)\r\n      .then(() => {\r\n        notifySuccessdelete()\r\n        dispatch(getAllData())\r\n      })\r\n      .catch((err) => {\r\n        notifyError(err)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport const getViewInit = () => ({\r\n  type: 'DETAILS_VIEW_INIT'\r\n})\r\n\r\nexport const getquizDetails = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(getViewInit())\r\n   await http\r\n      .put(`/quiz/view/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_DET',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizQuestions = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/questions/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_QUESTIONS_DATA',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizAnswers = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/answers/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_ANSWERS_DATA',\r\n          data: response.data.data\r\n        })\r\n       \r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const resetQuizEditQuestions = () => ({\r\n  type: 'RESET_QUIZ_QUESTIONS'\r\n})\r\n\r\nexport const quizEditQuestions = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditQuestionsEach = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/questions/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_QUESTIONS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditAnswers = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/answers/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_ANSWERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const NUMBER_PLAYERS = (players) => {\r\n  return (dispatch) => {\r\n    http\r\n      .get('/quiz/players', players)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'NUMBER_PLAYERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quiztogglestatus = (id, status) => {\r\n\r\n  return async (dispatch) => {\r\n   await http.post(`quiz/toggle_status/${id}`).then((response) => {\r\n      notifySuccessadd(response.data.message)\r\n      console.log(status)\r\n    dispatch({\r\n        type: 'QUIZ_TOGGLE_STATUS',\r\n        data: status\r\n      })  \r\n     \r\n    }).catch((e) => {\r\n      \r\n      console.log(\"Error in Feed Post: \", e)\r\n      \r\n    })\r\n  }\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowRight = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 5 19 12 12 19\"\n  }));\n});\nArrowRight.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowRight.displayName = 'ArrowRight';\nexport default ArrowRight;","// ** React Imports\r\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Stepper from 'bs-stepper'\r\nimport classnames from 'classnames'\r\nimport { PropTypes } from 'prop-types'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n// ** Styles\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\r\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\r\n\r\nconst Wizard = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const { type, className, steps, separator, options, instance } = props\r\n\r\n  // ** State\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n  // ** Vars\r\n  let stepper = null\r\n\r\n  // ** Step change listener on mount\r\n  useEffect(() => {\r\n    stepper = new Stepper(ref.current, options)\r\n\r\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\r\n      setActiveIndex(event.detail.indexStep)\r\n    })\r\n\r\n    if (instance) {\r\n      instance(stepper)\r\n    }\r\n  }, [])\r\n\r\n  // ** Renders Wizard Header\r\n  const renderHeader = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <Fragment key={step.id}>\r\n          {index !== 0 && index !== steps.length ? (\r\n            <div className=\"line\">{separator}</div>\r\n          ) : null}\r\n          <div\r\n            className={classnames('step', {\r\n              crossed: activeIndex > index,\r\n              active: index === activeIndex\r\n            })}\r\n            data-target={`#${step.id}`}\r\n          >\r\n            <button type=\"button\" className=\"step-trigger\">\r\n              <span className=\"bs-stepper-box\">\r\n                {step.icon ? step.icon : index + 1}\r\n              </span>\r\n              <span className=\"bs-stepper-label\">\r\n                <span className=\"bs-stepper-title\">{step.title}</span>\r\n                {step.subtitle ? (\r\n                  <span className=\"bs-stepper-subtitle\">{step.subtitle}</span>\r\n                ) : null}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Renders Wizard Content\r\n  const renderContent = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <div\r\n          className={classnames('content', {\r\n            'active dstepper-block': activeIndex === index\r\n          })}\r\n          id={step.id}\r\n          key={step.id}\r\n        >\r\n          {step.content}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={classnames('bs-stepper', {\r\n        [className]: className,\r\n        vertical: type === 'vertical',\r\n        'vertical wizard-modern': type === 'modern-vertical',\r\n        'wizard-modern': type === 'modern-horizontal'\r\n      })}\r\n    >\r\n      <div className=\"bs-stepper-header\">{renderHeader()}</div>\r\n      <div className=\"bs-stepper-content\">{renderContent()}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nWizard.displayName = 'Wizard'\r\n\r\nexport default Wizard\r\n\r\n// ** Default Props\r\nWizard.defaultProps = {\r\n  type: 'horizontal',\r\n  separator: <ChevronRight size={17} />,\r\n  options: {}\r\n}\r\n\r\n// ** PropTypes\r\nWizard.propTypes = {\r\n  type: PropTypes.string,\r\n  instance: PropTypes.func,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  separator: PropTypes.element,\r\n  steps: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      subtitle: PropTypes.string,\r\n      icon: PropTypes.any,\r\n      content: PropTypes.any.isRequired\r\n    })\r\n  ).isRequired\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowLeft = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"19\",\n    y1: \"12\",\n    x2: \"5\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 19 5 12 12 5\"\n  }));\n});\nArrowLeft.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowLeft.displayName = 'ArrowLeft';\nexport default ArrowLeft;"],"sourceRoot":""}