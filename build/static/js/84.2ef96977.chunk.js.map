{"version":3,"sources":["views/corporate/Series/cricket/list/Table.js","views/corporate/Series/cricket/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/breadcrumbs/index.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","views/corporate/Series/store/actions/index.js"],"names":["SelectReact","useState","data","setData","img","setImg","imageError","dispatch","useDispatch","uppy","Uppy","meta","type","restrictions","maxNumberOfFiles","autoProceed","use","thumbnailGenerator","on","file","preview","console","log","lastModified","store","state","files","breadCrumbTitle","breadCrumbActive","Card","CardHeader","CardTitle","tag","CardBody","Row","className","Col","locale","strings","dropHereOr","browse","src","alt","Button","Ripple","color","onClick","e","preventDefault","param","FormData","append","addfile","submit","UsersList","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","config","Successlogin","message","size","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","BreadCrumbs","props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","to","active","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","tagPropType","xs","sm","md","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","mapToCssModules","classNames","_colClass","length","classes","React","createElement","_extends","rowColsPropType","noGutters","form","listTag","listClassName","children","node","Breadcrumb","ListTag","label","listClasses","BreadcrumbItem","undefined","getAllSeries","a","http","get","then","response","records","getAllFixture","id","getplayerreport","seriesid","fixtureid","table","collectseriesid","collectfixtureid","getcricketplayerdownload","responseType","url","window","URL","createObjectURL","Blob","link","document","href","setAttribute","body","appendChild","click","params","post","catch"],"mappings":"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","file":"static/js/84.2ef96977.chunk.js","sourcesContent":["import { useState } from 'react'\nimport {useDispatch} from \"react-redux\"\nimport { DragDrop } from '@uppy/react'\nimport Uppy from '@uppy/core'\nimport '@uppy/core/dist/style.css'\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\nimport \"./styles.scss\"\nimport './styles copy.scss'\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Button} from 'reactstrap'\nimport { addfile} from \"../../store/actions\"\nimport BreadCrumbs from '@components/breadcrumbs'\n// import Table from  \"./list/Table\"\n\nconst SelectReact = () => {\n    // const store = useSelector((state) => state.corporateteams)\n    const [data, setData] = useState(null)\n    const [img, setImg] = useState(null)\n    const [imageError] = useState(false)\n    const dispatch = useDispatch()\n    const uppy = new Uppy({\n      meta: { type: 'avatar' },\n      restrictions: { maxNumberOfFiles: 1 },\n      autoProceed: true\n    })\n  \n    uppy.use(thumbnailGenerator)\n    \n    uppy.on('file-added', (file, preview) => {\n      console.log(file.data.lastModified)\n      console.log(file.data)\n      console.log(uppy.store.state.files[0])\n      console.log(file)\n      console.log(preview)\n      setImg(preview)\n      setData(file.data)\n    })\n\n    const submit = (e) => {\n      e.preventDefault()\n      const param = new FormData()\n      param.append('file', data)\n      console.log(param)\n      dispatch(addfile(param))\n    }\n\n  return (\n    <>\n          <BreadCrumbs breadCrumbTitle='Corporate Series' breadCrumbActive='series' />\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Series</CardTitle> \n      </CardHeader>\n      <CardBody>\n        {/* <p>\n          <a className='my-3' target='_blank' href='https://react-select.com/home' rel='noopener noreferrer'>           \n          </a>\n        </p> */}\n        <Row className=\"wrapper-add\" >\n        <Col className=\"add-post-edit\">\n         <div className={`mt-4 ${imageError ? 'img-error-post' : ''}`}>\n         <DragDrop uppy={uppy}\n           locale={{\n            strings: {\n              // Text to show on the droppable area.\n              // `%{browse}` is replaced with a link that opens the system file selection dialog.\n              dropHereOr: 'Drop file or %{browse}',\n              // Used as the label for the link that opens the system file selection dialog.\n              browse: 'browse'\n            }\n          }}\n         />\n        {img !== null ? <img className='rounded mt-2' src={img} alt='avatar' /> : null}\n                {img && (\n                  <div className=\"uploaded-files\">\n                    <img src={img} className=\"post-preview\" />\n                  </div>\n                )}\n              </div>\n              </Col>\n             </Row>\n             <Row>\n             <div className=\"mt-3\">\n        <Button.Ripple \n        color='primary'\n        onClick={(e) => submit(e)}\n        >submit</Button.Ripple>\n        </div>                  \n        </Row>\n      </CardBody>\n    </Card>\n    </>\n  )\n}\nexport default SelectReact","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n//import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n  //UncontrolledButtonDropdown,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  //DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  <Link to={`/${breadCrumbParent}`}>{breadCrumbParent}</Link>\r\n                </BreadcrumbItem>\r\n                ) : ''\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import http from '../../../../../configs/httpConfig'\nimport { notifySuccessadd, notifyError } from '../../../../Toast'\nexport const getAllContests = () => {\n  return async (dispatch) => {\n    await http.get('/admin_contests/list').then((response) => {\n      dispatch({\n        type: 'GET_ALL_CONTESTS',\n        data: response.data.data\n      })\n    })\n  }\n}\n\nexport const getContestsListPDF = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_pdf', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.pdf`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\nexport const getContestsListCSV = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_csv', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.csv`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\n//football\n\nexport const getcricketdatainit = () => ({\n    type: 'GET_ALL_REPORTS_INIT'\n  })\n  \nexport const getcricketcontestdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/contestReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/contestReport?page=${page}`\n        await http.get(url).then((response) => {\n        console.log(page, from, to)\n        console.log(response)\n        console.log(page)\n        dispatch({\n          type: 'GET_ALL_CONTEST_REPORTS',\n          data: response.data.data\n        })\n        console.log(response)\n      })\n    }\n  }\n\n  export const contestfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const contestto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_TO',\n        data:to\n      })\n    }\n  }\n\n  export const winnerfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const winnerto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_TO',\n        data:to\n      })\n    }\n  }\n\n  export const quizfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const quizto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_TO',\n        data:to\n      })\n    }\n  }\n  export const getcricketwinnerdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/winnerReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/winnerReport?page=${page}`\n      await http.get(url).then((response) => {\n        console.log(response)\n        dispatch({\n          type: 'GET_ALL_WINNERS_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  export const collectfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const collectto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_TO',\n        data:to\n      })\n    }\n  }\n\n  export const collectpage = (curentpage) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_PAGE',\n        data:curentpage\n      })\n    }\n  }\n  \n  export const getcricketquizdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/quizReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/quizReport?page=${page}`\n      await http.get(url).then((response) => {\n        dispatch({\n          type: 'GET_ALL_QUIZ_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  // export const getcricketcontestdownload = () => {\n  //   return async () => {\n  //     await http.get(`/cricket/reports/contestReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getcricketcontestdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/contestReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketwinnerdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/winnerReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'winnerReport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketquizdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/quizReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  // export const getcricketwinnerdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/winnerReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  // export const getcricketquizdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/quizReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getAllSeries = () => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get('/cricket/series/list').then((response) => {\n        dispatch({\n          type: 'SERIES_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data.records, \"this\")\n      })\n    }\n  }\n\n  export const getAllFixture = (id) => {\n    return async (dispatch) => {\n      console.log(id)\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/fixture/list/${id}`).then((response) => {\n        dispatch({\n          type: 'FIXTURE_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data)\n      })\n    }\n  }\n\n  export const getplayerreport = (seriesid, fixtureid) => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}`).then((response) => {\n        dispatch({\n          type: 'PLAYER_REPORT',\n          data: response.data.data\n        })\n        console.table(response.data.data)\n      })\n    }\n  }\n  export const collectseriesid = (seriesid) => {\n   \n    console.log(seriesid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_SERIESID',\n        data:seriesid\n      })\n    }\n  }\n  \n  export const collectfixtureid = (fixtureid) => {\n      console.log(fixtureid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FIXTUREID',\n        data:fixtureid\n      })\n    }\n  }\n\n//cricket/reports/playerReport?series_id=1&fixture_id=730&download=true\n  export const getcricketplayerdownload = (seriesid, fixtureid) => {\n    return async () => {\n            await http\n        .get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}&download=true`, { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'cricketplayerreport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getCricketContestadd = (id) => {\n    return (dispatch) => {\n      http\n        .post('/cricket/contest_prizes/list', id)\n        .then((response) => {\n          dispatch({\n            type: 'CRICKET_CONTEST_PRIZE_ADD',\n            data: response.data.data\n          })\n          console.log(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  export const addfile = (params) => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n      await http.post('/seriesUpload', params).then((response) => {\n        notifySuccessadd(response.data.message)\n        dispatch({\n          type: 'ADD_FILE',\n          data: response.data.message\n        })\n      }).catch((e) => {\n        notifyError(e.response.data.message)\n      })\n    }\n  }"],"sourceRoot":""}