{"version":3,"sources":["views/commonReport/referralReport/list/columns.js","views/commonReport/referralReport/list/Table.js","views/commonReport/referralReport/list/index.js","configs/httpConfig.js","views/commonReport/store/actions/index.js"],"names":["columns","name","minWidth","selector","sortable","cell","row","ref_from","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","useState","dropdownOpen","setDropdownOpen","className","Row","Col","xl","Label","for","CustomInput","type","id","value","onChange","style","width","padding","backgroundPosition","Input","e","target","ButtonDropdown","isOpen","toggle","DropdownToggle","color","caret","DropdownMenu","DropdownItem","onClick","getContestsListPDF","tag","getContestsListCSV","ContestsList","dispatch","useDispatch","store","useSelector","state","winner","allCricketdata","console","log","setSearchTerm","listData","setListData","currentPage","setCurrentPage","setRowsPerPage","useEffect","getAllContests","links","length","JSON","stringify","filterList","filter","userItem","contest_name","toLowerCase","includes","Card","noHeader","pagination","subHeader","responsive","paginationServer","paginationPerPage","paginationDefaultPage","sortIcon","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","data","filters","q","isFiltered","Object","keys","some","k","slice","dataToRender","subHeaderComponent","parseInt","currentTarget","val","UsersList","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","http","get","then","response","catch","getAllContestsWinner","url","getAllContestsQuiz","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","Date","valueOf","body","appendChild","click"],"mappings":"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","file":"static/js/191.b38ca4c7.chunk.js","sourcesContent":["export const columns = [\n  {\n    name: 'ID',\n    minWidth: '20px',\n    selector: 'id',\n    sortable: true,\n    cell: (row) => row.ref_from\n  }\n  // {\n  //   name: 'Match',\n  //   minWidth: '250px',\n  //   selector: 'name',\n  //   sortable: true,\n  //   cell: (row) => row.fixture.fixture_name\n  // },\n  // {\n  //   name: 'Contest Category',\n  //   minWidth: '200px',\n  //   selector: 'type',\n  //   sortable: true,\n  //   cell: (row) => row.contests.contest_type\n  // },\n  // {\n  //   name: 'Contest Name',\n  //   minWidth: '200px',\n  //   selector: 'invite_id',\n  //   sortable: true,\n  //   cell: (row) => row.contests.caption\n  // },\n  // {\n  //   name: 'Total Users Joined',\n  //   minWidth: '200px',\n  //   selector: 'series_name',\n  //   sortable: true,\n  //   cell: (row) => row.contests.joined\n  // },\n  // {\n  //   name: 'Min',\n  //   minWidth: '160px',\n  //   selector: 'fixture_name',\n  //   sortable: true,\n  //   cell: (row) => row.contests.min\n  // },\n  // {\n  //   name: 'Max',\n  //   minWidth: '160px',\n  //   selector: 'fixture_name',\n  //   sortable: true,\n  //   cell: (row) => row.contests.size\n  // },\n  // {\n  //   name: 'Entry Fees',\n  //   minWidth: '160px',\n  //   selector: 'fixture_name',\n  //   sortable: true,\n  //   cell: (row) => row.contests.entry_fee\n  // },\n  // {\n  //   name: 'Total Team Created',\n  //   minWidth: '160px',\n  //   selector: 'fixture_name',\n  //   sortable: true,\n  //   cell: (row) => row.userTeams\n  // },\n  // {\n  //   name: 'Total Coins Distributed',\n  //   minWidth: '160px',\n  //   selector: 'fixture_name',\n  //   sortable: true,\n  //   cell: (row) => row.winning\n  // }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Invoice List Sidebar\n\n// ** Columns\nimport { columns } from './columns'\n// import AddQuiz from '../add'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport {\n  Card,\n  Input,\n  Row,\n  Col,\n  Label,\n  CustomInput,\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport {\n  getAllContests,\n  getContestsListCSV,\n  getContestsListPDF\n} from '../../store/actions'\n\n// ** Table Header\nconst CustomHeader = ({\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n  return (\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <Label for=\"rows-per-page\">Show</Label>\n            <CustomInput\n              className=\"form-control mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{\n                width: '5rem',\n                padding: '0 0.8rem',\n                backgroundPosition:\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n              }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </CustomInput>\n            <Label for=\"rows-per-page\">Entries</Label>\n          </div>\n        </Col>\n        <Col\n          xl=\"6\"\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\n        >\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1\">\n            <Label className=\"mb-0\" for=\"search-invoice\">\n              Search:\n            </Label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ml-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n          <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n            <DropdownToggle color=\"primary\" caret>\n              Export Contests List\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={getContestsListPDF()} tag=\"button\">\n                Export as PDF\n              </DropdownItem>\n              <DropdownItem onClick={getContestsListCSV()} tag=\"button\">\n                Export as CSV\n              </DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst ContestsList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.winner)\n  const {allCricketdata} = store\n  console.log(allCricketdata)\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  // const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllContests())\n  }, [dispatch])\n\n  useEffect(() => {\n    console.log(store.allCricketdata.links)\n    if (store.allCricketdata && store.allCricketdata.length) {\n      setListData(store.allCricketdata)\n    }\n  }, [JSON.stringify(store)]) \n\n  // useEffect(() => {\n  //   if (store.feedAllData.records && store.feedAllData.records.length) {\n  //     setListData(store.feedAllData.records)\n  //   }\n  // }, [JSON.stringify(store.feedAllData)])\n  // useEffect(() => {\n  //   fetch(`https://fantasyapi.sciflaredev.com/admin/api/cricket/reports/contestReport?page=${currentPage}`)\n  //       .then(response => response.data)\n  //       .then(data => {\n  //         setCurrentPage(data.count);\n  //         setNextPage(data.next);\n  //         setPreviousPage(data.previous);\n  //         setValid(true);\n  //       })\n  // }, [currentPage]);\n\n  // ** User filter options\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    setRowsPerPage(value)\n    setCurrentPage(1)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n  }\n\n  useEffect(() => {\n    if (searchTerm) {\n      const filterList = store.allCricketdata.filter((userItem) => {\n        \n        if (userItem.contest_name) {\n          return userItem.contest_name.toLowerCase().includes(searchTerm.toLowerCase())\n        }\n      })\n\n      setListData(filterList)\n      setCurrentPage(1)\n    } else {\n      setListData(store.allCricketdata)\n    }\n  }, [searchTerm])\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(listData.length / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    // if (store.allContests.length > 0) {\n    //   return store.allContests\n    // } else\n    if (listData.length === 0 && isFiltered) {\n      return []\n    } else {\n      return listData.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          paginationPerPage={rowsPerPage}\n          paginationDefaultPage={currentPage}\n          sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              handlePerPage={handlePerPage}\n              rowsPerPage={rowsPerPage}\n              searchTerm={searchTerm}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default ContestsList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import http from '../../../../configs/httpConfig'\nexport const getAllWallDataFail = () => ({\n  type: 'GET_ALL_WALL_DATA_FAIL'\n})\nexport const getAllWallDataInit = () => ({\n  type: 'GET_ALL_WALL_DATA_INIT'\n})\n\n\nexport const getAllContests = () => {\n \n  return async (dispatch) => {\n    dispatch(getAllWallDataInit())\n    await http.get('/reports/referralReport').then((response) => {\n      console.log(\"Ajit\", response.data)\n      dispatch({\n        type: 'GET_ALL_CRICKET_CONTESTS_REPORT',\n        data: response.data.data\n      })\n    }).catch((e) => {\n      console.log(e)\n      dispatch(getAllWallDataFail())\n    })\n  }\n}\nexport const getAllContestsWinner = (page) => {\n  return async (dispatch) => {\n    const url = `/reports/redeemReport?page=${page}`\n    await http.get(url).then((response) => {\n      console.log(response.data)\n      dispatch({\n        type: 'GET_ALL_WINNER_CONTESTS_REPORT',\n        data: response.data\n      })\n    })\n  }\n}\nexport const getAllContestsQuiz = (page) => {\n  return async (dispatch) => {\n    const url = `/reports/userReport?page=${page}`\n    await http.get(url).then((response) => {\n      console.log(response.data)\n      dispatch({\n        type: 'GET_ALL_Quiz_CONTESTS_REPORT',\n        data: response.data\n      })\n    })\n  }\n}\n\nexport const getContestsListPDF = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_pdf', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.pdf`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\nexport const getContestsListCSV = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_csv', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.csv`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n"],"sourceRoot":""}