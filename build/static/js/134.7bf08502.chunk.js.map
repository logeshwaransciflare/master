{"version":3,"sources":["views/Predictor/predictoradd/Quizfin.js","views/Predictor/predictoradd/index.js","configs/httpConfig.js","views/Toast.js","@core/components/breadcrumbs/index.js","@core/components/ui-loader/index.js","@core/components/repeater/index.js","views/Quiz/store/action/index.js","@core/components/wizard/index.js"],"names":["colourOptions","value","label","AddQuestions","stepper","useForm","register","errors","handleSubmit","trigger","store","useSelector","state","quiz","addedQuizID","addedQuizID2","lang_id","langs","eng_question","lang_count","addloader","useState","multi","setMulti","scorewinner","setScorewinner","dispatch","useDispatch","console","log","count","setCount","che","map","ques","quest","className","Form","onSubmit","isObjEmpty","next","i","FormGroup","Label","for","theme","selectThemeColors","classNamePrefix","id","onChange","e","val","target","options","isClearable","Row","tag","Col","md","Input","type","name","placeholder","innerRef","required","classnames","check","inline","Button","Ripple","color","onClick","id_1","then","res","param","quiz_id","translation_quiz_questions","master_language_id","translation_quiz_question","document","getElementById","id_2","quiz_question_duration","quiz_question_sno","quiz_question_answers","translation_quiz_answers","translation_quiz_answer","quiz_answer_sno","quiz_answer_correct","isDisabled","disabled","addQuestion","blocking","size","AddQuiz","setStepper","ref","useRef","steps","title","subtitle","content","Quizfin","breadCrumbTitle","breadCrumbParent","breadCrumbActive","instance","el","token","localStorage","getItem","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","to","active","UILoader","children","loader","overlayColor","Tag","style","backgroundColor","defaultProps","Repeater","rest","items","push","getAllData","params","page","a","http","get","response","data","getcricketquiz","dataperPage","getfootballquiz","getbasketballquiz","getLangcount","getLang","getengquestions","question","getlangs","addQuiz","post","catch","err","getquizDetails","put","getQuizQuestions","resetQuizEditQuestions","quizEditQuestions","quizData","quizEditQuestionsEach","quiztogglestatus","status","Wizard","forwardRef","separator","activeIndex","setActiveIndex","useEffect","Stepper","current","addEventListener","event","detail","indexStep","step","index","length","crossed","displayName"],"mappings":"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","file":"static/js/134.7bf08502.chunk.js","sourcesContent":["import { Fragment, useState } from 'react'\r\n// import { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\n\r\nimport { useForm} from 'react-hook-form' //Controller\r\n import Select from 'react-select'\r\nimport { isObjEmpty, selectThemeColors } from '@utils' //selectThemeColors\r\nimport { addQuestion } from '../../Quiz/store/action'\r\nimport Repeater from '@components/repeater'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\nimport { Plus } from 'react-feather'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport UiLoader from '@components/ui-loader'\r\nconst colourOptions = [\r\n  { value: 'winnerselection', label: 'Winner Selection' },\r\n  { value: 'Multiplechoice', label: 'Multiple choice' },\r\n  { value: 'scorepredictor', label: 'Score Predictor' }\r\n]\r\nconst AddQuestions = ({ stepper }) => {\r\n  const { register, errors, handleSubmit, trigger} = useForm()\r\n  // const history = useHistory()\r\n  const store = useSelector(state => state.quiz)\r\n  //const [check, setCheck] = useState(false)\r\n  const { addedQuizID, addedQuizID2, lang_id, langs, eng_question, lang_count, addloader } = store\r\n  \r\n  const [multi, setMulti] = useState(false)\r\n  const [scorewinner, setScorewinner] = useState(false) \r\n  const dispatch = useDispatch()\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n}\r\n\r\nconsole.log(\"id\", lang_id)\r\nconsole.log(langs)\r\nconst [count, setCount] = useState(1)\r\nlet che = 0\r\n\r\nconst increaseCount = () => {\r\n\r\n  if (count === 7) return\r\n  setCount(count + 1)\r\n  che = count\r\n  \r\n}\r\nconsole.log(che)\r\nconst editcategory = (val) => {\r\n\r\n  console.log(val.target.id)\r\n  if (val.value === ('winnerselection' && che === count) || (val.value === 'scorepredictor' && che === count)) {\r\n    \r\n    setMulti(false)\r\n    setScorewinner(true)\r\n  } else if (val.value === 'Multiplechoice') {       \r\n    setScorewinner(false)\r\n    setMulti(true)\r\n  } else {    \r\n   \r\n    setScorewinner(false)\r\n    setMulti(false)\r\n  }\r\n}\r\n// let ch = -1\r\nconsole.log(eng_question.map(ques => ques.quest))\r\n  const submitQuestion = (id_1, id_2) => {\r\n   \r\n    //setCheck(true)\r\n   \r\n    console.log(addedQuizID)\r\n    trigger().then((res) => {\r\n      if (res) {\r\n        if (lang_count === 2) {\r\n          const param = {\r\n            quiz_id: addedQuizID,\r\n            translation_quiz_questions: [\r\n              {\r\n                  master_language_id: 1,\r\n                  translation_quiz_question: document.getElementById(`question-${id_1}`).value\r\n                },\r\n              {\r\n                master_language_id: 2,\r\n                translation_quiz_question: document.getElementById(`question-${id_2}`).value\r\n              }\r\n            ],\r\n            quiz_question_duration: '30',\r\n            quiz_question_sno: id_1,\r\n            quiz_question_answers: [\r\n              {\r\n                translation_quiz_answers:[\r\n                  {\r\n                    // master_language_id:document.getElementById('quiz_lang').value,\r\n                    master_language_id:1,\r\n                    translation_quiz_answer: document.getElementById(`answer1-${id_1}`).value\r\n                  },\r\n                  {\r\n                      // master_language_id:document.getElementById('quiz_lang').value,\r\n                      master_language_id:2,\r\n                      translation_quiz_answer: document.getElementById(`answer1-${id_2}`).value\r\n                    }\r\n                ],\r\n              quiz_answer_sno: '1',\r\n             quiz_answer_correct: '1'\r\n\r\n             },\r\n            {\r\n              translation_quiz_answers:[\r\n                {\r\n                  master_language_id:1,\r\n                  translation_quiz_answer: document.getElementById(`answer2-${id_1}`).value\r\n                },\r\n                {\r\n                  master_language_id:2,\r\n                  translation_quiz_answer: document.getElementById(`answer2-${id_2}`).value\r\n                }\r\n              ],\r\n            quiz_answer_sno: '2',\r\n           quiz_answer_correct: '0'\r\n           },\r\n           {\r\n            translation_quiz_answers:[\r\n              {\r\n                master_language_id:1,\r\n                translation_quiz_answer: document.getElementById(`answer3-${id_1}`).value\r\n              },\r\n              {\r\n                  master_language_id:2,\r\n                  translation_quiz_answer: document.getElementById(`answer3-${id_2}`).value\r\n                }\r\n            ],\r\n          quiz_answer_sno: '3',\r\n         quiz_answer_correct: '0'\r\n         },\r\n         {\r\n          translation_quiz_answers:[\r\n            {\r\n              master_language_id:1,\r\n              translation_quiz_answer: document.getElementById(`answer4-${id_1}`).value\r\n            },\r\n            {\r\n              master_language_id:2,\r\n              translation_quiz_answer: document.getElementById(`answer4-${id_2}`).value\r\n            }\r\n          ],\r\n        quiz_answer_sno: '4',\r\n       quiz_answer_correct: '0'\r\n       }\r\n      ]}\r\n      const isDisabled =  document.getElementById(`btn-${id_1}`)\r\n      if (isDisabled.disabled) return\r\n      isDisabled.disabled = true\r\n        dispatch(addQuestion(param))\r\n        console.log(param)\r\n        } else {\r\n          const param = {\r\n            quiz_id: addedQuizID,\r\n            translation_quiz_questions: [\r\n              {\r\n                master_language_id: 1,\r\n                translation_quiz_question: document.getElementById(`question-${id_1}`).value\r\n              }\r\n            ],\r\n            quiz_question_duration: '30',\r\n            quiz_question_sno: id_1,\r\n            quiz_question_answers: [\r\n              {\r\n                translation_quiz_answers:[\r\n                  {\r\n                    // master_language_id:document.getElementById('quiz_lang').value,\r\n                    master_language_id:1,\r\n                    translation_quiz_answer: document.getElementById(`answer1-${id_1}`).value\r\n                  }\r\n                ],\r\n              quiz_answer_sno: '1',\r\n             quiz_answer_correct: '1'\r\n             },\r\n            {\r\n              translation_quiz_answers:[\r\n                {\r\n                  master_language_id:1,\r\n                  translation_quiz_answer: document.getElementById(`answer2-${id_1}`).value\r\n                }\r\n              ],\r\n            quiz_answer_sno: '2',\r\n           quiz_answer_correct: '0'\r\n           },\r\n           {\r\n            translation_quiz_answers:[\r\n              {\r\n                master_language_id:1,\r\n                translation_quiz_answer: document.getElementById(`answer3-${id_1}`).value\r\n              }\r\n            ],\r\n          quiz_answer_sno: '3',\r\n         quiz_answer_correct: '0'\r\n         },\r\n         {\r\n          translation_quiz_answers:[\r\n            {\r\n              master_language_id:1,\r\n              translation_quiz_answer: document.getElementById(`answer4-${id_1}`).value\r\n            }\r\n          ],\r\n        quiz_answer_sno: '4',\r\n       quiz_answer_correct: '0'\r\n       }\r\n      ]}\r\n      const isDisabled =  document.getElementById(`btn-${id_1}`)\r\n      if (isDisabled.disabled) return\r\n      isDisabled.disabled = true\r\n        dispatch(addQuestion(param))\r\n        console.log(param)\r\n        }\r\n      \r\n      }\r\n    })\r\n  }\r\n  console.log(count)\r\n  console.log(scorewinner)\r\n  console.log(multi)\r\n  \r\n  console.log(addloader, addedQuizID2)\r\n  return (\r\n    <Fragment>\r\n       <> \r\n       <div className=\"content-header\">\r\n         <h5 className=\"mb-0\">Questions</h5>\r\n        <small> Questions.</small>\r\n     </div>\r\n       <Form onSubmit={handleSubmit(onSubmit)}>\r\n         <Repeater count={count}>\r\n         \r\n          {(i) => (\r\n            \r\n            <li key={i} className=\"list-unstyled\">\r\n              <FormGroup>\r\n              <Label className=\"form-label\" for=\"quiz_category\">\r\n              Predictor Type\r\n            </Label>\r\n                <Select\r\n                  theme={selectThemeColors}\r\n                  className='react-select'\r\n                  classNamePrefix=\"select\"\r\n                  id={`item-${i}`}\r\n                //  Value={prizeform.category}              \r\n                  onChange={(e) => editcategory(e)}\r\n                  options={colourOptions}\r\n                  isClearable={false}\r\n                />\r\n              </FormGroup>\r\n          {multi ?\r\n          <div>\r\n             <Row>\r\n                <FormGroup tag={Col} md=\"12\">\r\n                  <Label className=\"form-label\" for={`question-${i}`}>\r\n                    Quiz question\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id={`question-${i}`}\r\n                    name={`question-${i}`}\r\n                    placeholder=\"Who is Lionel Messi?\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`question-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\r\n                    Answer 1\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer1-${i}`}\r\n                    id={`answer1-${i}`}\r\n                    placeholder=\"Cricketer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer1-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <div className=\"d-flex height-95-per align-items-end\">\r\n                    <FormGroup check inline>\r\n                      <Label check>\r\n                        Correct Answer\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\r\n                    Answer2\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer2-${i}`}\r\n                    id={`answer2-${i}`}\r\n                    placeholder=\"Footballer\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer2-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer3-${i}`}>\r\n                    Answer 3\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer3-${i}`}\r\n                    id={`answer3-${i}`}\r\n                    placeholder=\"VolleyBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer3-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              \r\n                <FormGroup tag={Col} md=\"8\">\r\n                  <Label className=\"form-label\" for={`answer4-${i}`}>\r\n                    Answer 4\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer4-${i}`}\r\n                    id={`answer4-${i}`}\r\n                    placeholder=\"BasketBaller\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer4-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n                \r\n             </div> : \"\"}\r\n             {scorewinner ?\r\n              <div> \r\n              <Row>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\r\n                   Team A Name\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer1-${i}`}\r\n                    id={`answer1-${i}`}\r\n                    placeholder=\"Team A Name\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer1-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n               \r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\r\n                  Team A Logo\r\n                  </Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name={`file-${i}`}\r\n                    id={`file-${i}`}\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <Label className=\"form-label\" for={`answer1-${i}`}>\r\n                   Team B Name\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={`answer1-${i}`}\r\n                    id={`answer1-${i}`}\r\n                    placeholder=\"Team B Name\"\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`answer1-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n               \r\n              </Row>\r\n              <Row>\r\n                <FormGroup tag={Col} md=\"4\">\r\n                  <Label className=\"form-label\" for={`answer2-${i}`}>\r\n                  Team B Logo\r\n                  </Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name={`file-${i}`}\r\n                    id={`file-${i}`}\r\n                    innerRef={register({ required: true })}\r\n                    className={classnames({\r\n                      'is-invalid': errors[`-${i}`]\r\n                    })}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n             \r\n            </div> : \"\"\r\n            }       \r\n            \r\n           <Row>\r\n                <FormGroup tag={Col} md=\"6\">\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <Button.Ripple\r\n                      type=\"button\"\r\n                      color=\"primary\"\r\n                     // disabled = {i === 0 }\r\n                       id = {`btn-${i}`}\r\n                      className=\"btn-next\"\r\n                      onClick={() => submitQuestion(i)}\r\n                    >\r\n                      <span className=\"align-middle d-sm-inline-block d-none\">\r\n                        Submit Questions\r\n                      </span>\r\n                    </Button.Ripple>\r\n                    {addloader && (\r\n                    <div className=\"ml-2 mt-2\">\r\n                      <UiLoader blocking />\r\n                    </div>\r\n                  )}\r\n                  {addedQuizID2  && (\r\n                    <p className=\"ml-2 pt-1 mb-0 success-msg\">\r\n                      Post Added Successfull\r\n                    </p>\r\n                  )}\r\n                  </div>\r\n                </FormGroup>\r\n              </Row>\r\n            </li>\r\n          )}\r\n        </Repeater>\r\n        <div className=\"d-flex justify-content-between\">\r\n          {/* {count <= 4 && ( */}\r\n          {count <= 6 && (\r\n            <Button.Ripple\r\n              className=\"btn-icon\"\r\n              color=\"primary\"\r\n              onClick={increaseCount}\r\n            >\r\n              <Plus size={14} />\r\n              <span className=\"align-middle ml-25\">Add New Question</span>\r\n            </Button.Ripple>\r\n          )}\r\n        </div>\r\n      </Form>\r\n      </>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddQuestions\r\n\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\n// import Quizdet from \"./Quizdet\"\r\nimport Quizfin from \"./Quizfin\"\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nconst AddQuiz = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    // {\r\n    //   id: 'quiz-details',\r\n    //   title: 'Quiz Details',\r\n    //   subtitle: 'Enter Quiz Details.',\r\n    //   content: <Quizdet stepper={stepper} />\r\n    // },\r\n    {\r\n      id: 'step-questions-eng',\r\n      title: 'Questions',\r\n      subtitle: 'Add Questions',\r\n      content: <Quizfin stepper={stepper} />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"horizontal-wizard\">\r\n       <BreadCrumbs breadCrumbTitle='Predictor' breadCrumbParent='Predictor' breadCrumbActive='Add' />\r\n      <Wizard instance={(el) => setStepper(el)} ref={ref} steps={steps} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddQuiz\r\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n//import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n  //UncontrolledButtonDropdown,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  //DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  <Link to={`/${breadCrumbParent}`}>{breadCrumbParent}</Link>\r\n                </BreadcrumbItem>\r\n                ) : ''\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Repeater = (props) => {\r\n  // ** Props\r\n  const { count, tag, children, ...rest } = props\r\n\r\n  // ** Custom Tag\r\n  const Tag = tag\r\n\r\n  // ** Default Items\r\n  const items = []\r\n\r\n  // ** Loop passed count times and push it in items Array\r\n  for (let i = 0; i < count; i++) {\r\n    items.push(children(i))\r\n  }\r\n\r\n  return <Tag {...rest}>{items}</Tag>\r\n}\r\n\r\n// ** PropTypes\r\nRepeater.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  tag: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nRepeater.defaultProps = {\r\n  tag: 'div'\r\n}\r\n\r\nexport default Repeater\r\n","import http from '../../../../configs/httpConfig'\r\nimport {notifyError, notifySuccessadd, notifySuccessdelete, notifyWarning} from \"../../../Toast\"\r\n\r\nexport const getAllQuizDataInit = () => ({\r\n  type: 'GET_ALL_DATA_INIT'\r\n})\r\n\r\n// ** Get all Data\r\nexport const getAllData = (params, page) => {\r\n  return async (dispatch) => {\r\n    \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_ALL_DATA',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getcricketquiz = (params, page, dataperPage = '') => {\r\n  return async (dispatch) => {\r\n   \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Cricket&page=${page}&limit=${dataperPage}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_CRIC_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getfootballquiz = (params, page, dataperPage) => {\r\n  return async (dispatch) => {\r\n    \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Football&page=${page}&limit=${dataperPage}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_FOOT_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getbasketballquiz = (params, page) => {\r\n  return async (dispatch) => {\r\n  \r\n    dispatch(getAllQuizDataInit())\r\n    await http.get(`/quiz/list?quiz_category=Basketball&page=${page}`, { params }).then((response) => {\r\n      dispatch({\r\n        type: 'GET_BASK_QUIZ',\r\n        data: response.data.data,\r\n        params\r\n      })\r\n      console.log(response.data.data)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLangcount = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getLang = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'LANG_ID',\r\n      data:id\r\n    })\r\n  }\r\n}\r\n\r\nexport const getengquestions = (question) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_QUESTION',\r\n      data:question\r\n    })\r\n  }\r\n}\r\n\r\nexport const getenganswers = (...answers) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type:'QUIZ_ENG_ANSWERS',\r\n      data:answers\r\n    })\r\n  }\r\n}\r\n\r\n// export const getquizdetails = (datas) => {\r\n//   return (dispatch) => {\r\n//     dispatch({\r\n//       type:'QUIZ_DETAILS',\r\n//       data:datas\r\n//     })\r\n//     console.log(datas)\r\n//   }\r\n// }\r\n\r\nexport const getlangs = (params) => {\r\n  return async (dispatch) => {\r\n    await http.get('/master/language/dropdownlist', { params }).then((response) => {\r\n      dispatch({\r\n        type: 'LANGS_ID',\r\n        data: response.data,\r\n        params\r\n      })\r\n      \r\n    })\r\n  }\r\n}\r\n// ** Add new quiz\r\nexport const addQuiz = (quiz) => {\r\n  return (dispatch) => {\r\n    http\r\n      .post('/quiz/add', quiz)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_ADD',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        notifyError(err.message)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addQuizInit = () => ({\r\n  type: 'ADD_QUIZ_POST_INIT'\r\n})\r\n\r\nexport const addQuestion = (question) => {\r\n  return (dispatch) => {\r\n    dispatch(addQuizInit())\r\n    http\r\n      .post('/quiz/questions/add', question)\r\n      .then((response) => {\r\n        notifySuccessadd(response.data.message)\r\n        dispatch({\r\n          type: 'QUIZ_QUESTION_ADD',\r\n          data: response.data\r\n        })\r\n        \r\n      })\r\n      .catch((err) => {\r\n        notifyWarning(err.message)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const resetQuizQuestions = () => ({\r\n  type: 'RESET_QUESTIONS_ADDED'\r\n})\r\n\r\nexport const deleteQuiz = (id) => {\r\n  return (dispatch) => {\r\n    http\r\n      .delete(`/quiz/delete/${id}`)\r\n      .then(() => {\r\n        notifySuccessdelete()\r\n        dispatch(getAllData())\r\n      })\r\n      .catch((err) => {\r\n        notifyError(err)\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport const getViewInit = () => ({\r\n  type: 'DETAILS_VIEW_INIT'\r\n})\r\n\r\nexport const getquizDetails = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(getViewInit())\r\n   await http\r\n      .put(`/quiz/view/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_DET',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizQuestions = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/questions/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_QUESTIONS_DATA',\r\n          data: response.data.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getQuizAnswers = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'QUIZ_QUESTIONS_INIT'\r\n    })\r\n    http\r\n      .get(`/quiz/answers/list/${id}`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_ANSWERS_DATA',\r\n          data: response.data.data\r\n        })\r\n       \r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const resetQuizEditQuestions = () => ({\r\n  type: 'RESET_QUIZ_QUESTIONS'\r\n})\r\n\r\nexport const quizEditQuestions = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditQuestionsEach = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/questions/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_QUESTIONS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quizEditAnswers = (id, quizData) => {\r\n  return (dispatch) => {\r\n    http\r\n      .put(`/quiz/answers/edit/${id}`, quizData)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'QUIZ_EDIT_ANSWERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const NUMBER_PLAYERS = (players) => {\r\n  return (dispatch) => {\r\n    http\r\n      .get('/quiz/players', players)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'NUMBER_PLAYERS',\r\n          data: response.data\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\n\r\nexport const quiztogglestatus = (id, status) => {\r\n\r\n  return async (dispatch) => {\r\n   await http.post(`quiz/toggle_status/${id}`).then((response) => {\r\n      notifySuccessadd(response.data.message)\r\n      console.log(status)\r\n    dispatch({\r\n        type: 'QUIZ_TOGGLE_STATUS',\r\n        data: status\r\n      })  \r\n     \r\n    }).catch((e) => {\r\n      \r\n      console.log(\"Error in Feed Post: \", e)\r\n      \r\n    })\r\n  }\r\n}","// ** React Imports\r\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Stepper from 'bs-stepper'\r\nimport classnames from 'classnames'\r\nimport { PropTypes } from 'prop-types'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n// ** Styles\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\r\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\r\n\r\nconst Wizard = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const { type, className, steps, separator, options, instance } = props\r\n\r\n  // ** State\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n  // ** Vars\r\n  let stepper = null\r\n\r\n  // ** Step change listener on mount\r\n  useEffect(() => {\r\n    stepper = new Stepper(ref.current, options)\r\n\r\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\r\n      setActiveIndex(event.detail.indexStep)\r\n    })\r\n\r\n    if (instance) {\r\n      instance(stepper)\r\n    }\r\n  }, [])\r\n\r\n  // ** Renders Wizard Header\r\n  const renderHeader = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <Fragment key={step.id}>\r\n          {index !== 0 && index !== steps.length ? (\r\n            <div className=\"line\">{separator}</div>\r\n          ) : null}\r\n          <div\r\n            className={classnames('step', {\r\n              crossed: activeIndex > index,\r\n              active: index === activeIndex\r\n            })}\r\n            data-target={`#${step.id}`}\r\n          >\r\n            <button type=\"button\" className=\"step-trigger\">\r\n              <span className=\"bs-stepper-box\">\r\n                {step.icon ? step.icon : index + 1}\r\n              </span>\r\n              <span className=\"bs-stepper-label\">\r\n                <span className=\"bs-stepper-title\">{step.title}</span>\r\n                {step.subtitle ? (\r\n                  <span className=\"bs-stepper-subtitle\">{step.subtitle}</span>\r\n                ) : null}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Renders Wizard Content\r\n  const renderContent = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <div\r\n          className={classnames('content', {\r\n            'active dstepper-block': activeIndex === index\r\n          })}\r\n          id={step.id}\r\n          key={step.id}\r\n        >\r\n          {step.content}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={classnames('bs-stepper', {\r\n        [className]: className,\r\n        vertical: type === 'vertical',\r\n        'vertical wizard-modern': type === 'modern-vertical',\r\n        'wizard-modern': type === 'modern-horizontal'\r\n      })}\r\n    >\r\n      <div className=\"bs-stepper-header\">{renderHeader()}</div>\r\n      <div className=\"bs-stepper-content\">{renderContent()}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nWizard.displayName = 'Wizard'\r\n\r\nexport default Wizard\r\n\r\n// ** Default Props\r\nWizard.defaultProps = {\r\n  type: 'horizontal',\r\n  separator: <ChevronRight size={17} />,\r\n  options: {}\r\n}\r\n\r\n// ** PropTypes\r\nWizard.propTypes = {\r\n  type: PropTypes.string,\r\n  instance: PropTypes.func,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  separator: PropTypes.element,\r\n  steps: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      subtitle: PropTypes.string,\r\n      icon: PropTypes.any,\r\n      content: PropTypes.any.isRequired\r\n    })\r\n  ).isRequired\r\n}\r\n"],"sourceRoot":""}