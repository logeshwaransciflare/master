{"version":3,"sources":["views/WallPost/list/Table.js","views/WallPost/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/breadcrumbs/index.js","@core/components/ui-loader/index.js","@core/components/app-collapse/index.js","views/WallPost/store/action/index.js"],"names":["CustomHeader","UsersList","dispatch","useDispatch","store","useSelector","state","feeds","history","useHistory","useState","searchTerm","setSearchTerm","listData","setListData","currentPage","setCurrentPage","states","setStates","dataPerPage","setDataPerPage","searchName","setSearchName","value","label","currentRole","currentPlan","number","currentStatus","useEffect","getAllWallData","toggle_data","feedAllData","JSON","stringify","console","log","columns","name","minWidth","selector","cell","row","pos","wall_page","from","src","feed_image","style","height","width","sortable","feed_type","cursor","className","feed_comments","feed_likes","formatting","month","day","year","hour","minute","second","Intl","DateTimeFormat","format","Date","formatDate","updated_on","CustomInput","type","id","feed_id","onChange","Feedtogglestatus","SwitchClick","inline","defaultChecked","status","UncontrolledDropdown","DropdownToggle","tag","size","DropdownMenu","right","DropdownItem","onClick","editPostData","push","editHandler","loadFeedAll","blocking","CustomPagination","count","last_page","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","data","title","content","Row","xl","Col","Label","Input","placeholder","e","target","accordion","Card","CardHeader","for","padding","backgroundPosition","noHeader","responsive","paginationServer","sortIcon","paginationPerPage","paginationDefaultPage","paginationComponent","filters","role","q","isFiltered","Object","keys","some","k","length","dataToRender","subHeaderComponent","toggleSidebar","rowsPerPage","handleFilter","val","breadCrumbTitle","breadCrumbActive","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","color","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","BreadCrumbs","props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","to","active","UILoader","children","loader","overlayColor","Tag","classnames","backgroundColor","defaultProps","AppCollapse","toggle","titleKey","contentKey","openCollapse","setOpenCollapse","handleCollapseToggle","arr","index","indexOf","includes","splice","map","item","collapsed","onMouseEnter","isOpen","dataperPage","a","http","get","then","response","catch","addFeedPost","params","feed_content","post","addPostReset","editFeedPost","put"],"mappings":"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","file":"static/js/117.9e5e593d.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n// import Swal from 'sweetalert2'\r\n// import withReactContent from 'sweetalert2-react-content'\r\n// ** Invoice List Sidebar\r\n// ** Columns\r\n// import { columns } from './columns'\r\n// import AddQuiz from '../add'\r\n\r\n// ** Store & Actions\r\nimport { getAllWallData, editPostData, Feedtogglestatus } from '../store/action' //deleteFeedPost\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n// import { selectThemeColors } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown, MessageCircle, Heart, Edit, MoreVertical, Filter } from 'react-feather' //MoreVertical Trash2\r\nimport DataTable from 'react-data-table-component'\r\nimport UiLoader from '@components/ui-loader'\r\nimport { Card, Col, CustomInput, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, CardHeader, Label, Row, Input\r\n} from 'reactstrap' //DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown \r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AppCollapse from '@components/app-collapse'\r\n\r\n// ** Table Header\r\n// const CustomHeader = ({ toggleSidebar, handlePerPage, rowsPerPage }) => {\r\n// const CustomHeader = ({ handlePerPage, rowsPerPage }) => {\r\n  const CustomHeader = () => {\r\n\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.feeds)\r\n  const history = useHistory()\r\n  // ** States\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [listData, setListData] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [states, setStates] = useState(false)\r\n  const [dataPerPage, setDataPerPage] = useState('')\r\n  const [searchName, setSearchName] = useState('')\r\n // const [scrollModal, setScrollModal] = useState(false)\r\n \r\n  const [currentRole] = useState({\r\n    value: '',\r\n    label: 'Select Role'\r\n  })\r\n  const [currentPlan] = useState({\r\n    value: '',\r\n    label: 'Select Plan'\r\n  })\r\n  const [currentStatus] = useState({\r\n    value: '',\r\n    label: 'Select Status',\r\n    number: 0\r\n  })\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => history.push('/walls_add')\r\n  //const MySwal = withReactContent(Swal)\r\n  useEffect(() => {\r\n    dispatch(getAllWallData(currentPage, dataPerPage))\r\n    // setListData(dummyData)\r\n  }, [currentPage, store.toggle_data])\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllWallData(1, dataPerPage))\r\n  }, [dataPerPage])\r\n\r\n  useEffect(() => {\r\n    if (store.feedAllData) {\r\n      setListData(store.feedAllData)\r\n    }\r\n  }, [JSON.stringify(store.feedAllData)])\r\n//const err = store.delete ? \"erortrue\" : \"errorfalse\"\r\n//console.log(err)\r\nconsole.log(store)\r\n\r\n\r\n  // const handleConfirmText = (id) => {\r\n  //   return MySwal.fire({\r\n  //     title: 'Are you sure?',\r\n  //     text: \"You won't be able to revert this!\",\r\n  //     icon: 'warning',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonText: 'Yes, delete it!',\r\n  //     customClass: {\r\n  //       confirmButton: 'btn btn-primary',\r\n  //       cancelButton: 'btn btn-outline-danger ml-1'\r\n  //     },\r\n  //     buttonsStyling: false\r\n  //   }).then(function (result) {\r\n      \r\n  //    if (result.value) {\r\n  //       dispatch(deleteFeedPost(id))\r\n  //       MySwal.fire({\r\n  //         icon: 'success',\r\n  //         title: 'Deleted!',\r\n  //         text: 'Your file has been deleted.',\r\n  //         customClass: {\r\n  //           confirmButton: 'btn btn-success'\r\n  //         }\r\n  //       })\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  \r\n  const   editHandler = (row) => {\r\n   dispatch(editPostData(row))\r\n    history.push(`/walls/edit/${row.feed_id}`)\r\n  }\r\n  const SwitchClick = (row) => {\r\n    \r\n    dispatch(Feedtogglestatus(row, states))\r\n    setStates(!states)\r\n  }\r\n\r\n  const formatDate = (value, formatting = { month:'short', day:'numeric', year:'numeric', hour:'numeric', minute:'numeric', second:'numeric' }) => {\r\n    if (!value) return value\r\n    return new Intl.DateTimeFormat('en-GB', formatting).format(new Date(value))\r\n  }\r\nconsole.log(store)\r\n  const columns = [\r\n    // export const columns = () => [\r\n      {\r\n        name: 'Sno',\r\n        minWidth: '10px',\r\n        selector: 's_no',\r\n        cell: (row, pos) => `#${store.wall_page.from + pos}`\r\n      }, \r\n      {\r\n        name: 'Image',\r\n        minWidth: '200px',\r\n        selector: 'feed_image',\r\n        cell: (row) => (\r\n          <img src={row.feed_image} style={{ height: '50px', width: '150px'}} />\r\n        )\r\n      },\r\n      {\r\n        name: 'Type',\r\n        minWidth: '160px',\r\n        selector: 'feed_type',\r\n        sortable: true,\r\n        cell: (row) => row.feed_type\r\n      },\r\n      {\r\n        name: 'Engagement',\r\n        minWidth: '160px',\r\n        selector: 'feed_comments',\r\n        sortable: true,\r\n        cell: (row) => (\r\n                      <div\r\n                      // color='flat-primary'\r\n                      style={{cursor : 'pointer'}}\r\n            className='user-name text-truncate mb-0'\r\n            // onClick={() => setScrollModal(!scrollModal)}\r\n          >\r\n          <div className=\"d-flex\">\r\n            <div className=\"pr-2\"><MessageCircle width=\"14\" /> {row.feed_comments}</div>\r\n            <div><Heart width=\"14\" /> {row.feed_likes}</div>        \r\n          </div>\r\n            </div>\r\n        )\r\n      },\r\n      {\r\n        name: 'Date & Time',\r\n        minWidth: '200px',\r\n        selector:'updated_on',\r\n        sortable: true,\r\n        cell: (row) => formatDate(row.updated_on)\r\n      \r\n      },\r\n      {\r\n        name: 'Status',\r\n        minWidth: '138px',\r\n        selector: 'feed_id',\r\n        sortable: true,\r\n        cell: (row) => (\r\n          <div className=\"column-action\">\r\n            {\r\n             \r\n              (\r\n                <CustomInput\r\n              className='custom-control-success'\r\n              type='switch'\r\n              id={`success${row.feed_id}`}\r\n              name='success'\r\n              onChange={() => SwitchClick(row.feed_id)}\r\n              inline\r\n              defaultChecked = {row.status !== 'DL'}\r\n            />\r\n              )\r\n            }\r\n           \r\n          \r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        name: 'Actionss',\r\n        minWidth: '138px',\r\n        selector: 'active',\r\n        cell: (row) => (\r\n          <UncontrolledDropdown>\r\n          <DropdownToggle className='pr-1' tag='span'>\r\n            <MoreVertical size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu right>\r\n            <DropdownItem tag='a'  className='w-100' onClick={() => editHandler(row)} >\r\n              <Edit size={15}/>\r\n              <span className='align-middle ml-50'>Edit</span>\r\n            </DropdownItem>\r\n            {/* <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\r\n              <Archive size={15} />\r\n              <span className='align-middle ml-50'>Archive</span>\r\n            </DropdownItem> */}\r\n            {/* <DropdownItem tag='a' className='w-100' onClick={() => handleConfirmText(row.feed_id)}>\r\n              <Trash2 size={15} />\r\n              <span className='align-middle ml-50'>Delete</span>\r\n            </DropdownItem> */}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n          // <div className=\"column-action\">\r\n          //   {/* <a href={`/walls/edit/${row.feed_id}`}> */}\r\n          //   <Edit width=\"17\" className=\"cursor-pointer\" title=\"Edit Feed\" onClick={() => editHandler(row)} />\r\n          //   {/* </a> */}\r\n          //   <Trash2 width=\"17\" className=\"ml-2 cursor-pointer\" title=\"Add Feed\" onClick={() => handleConfirmText(row.feed_id)} />\r\n          // </div>\r\n        )\r\n      }\r\n     \r\n    ]\r\n\r\n\r\n  // ** User filter options\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  // const handlePerPage = (e) => {\r\n  //   const value = parseInt(e.currentTarget.value)\r\n  //   setRowsPerPage(value)\r\n  //   setCurrentPage(1)\r\n  // }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n  }\r\n\r\n  if (store.loadFeedAll) {\r\n    return (\r\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\r\n        <UiLoader blocking />\r\n      </div>\r\n    )\r\n  }\r\nconsole.log(store.feedAllData)\r\nconsole.log(store.wall_page)\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    // const count = Number(\r\n    //   Math.ceil(store.feedAllData.record_count / rowsPerPage)\r\n    // )\r\n    const count = store.wall_page.last_page\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={\r\n          'pagination react-paginate justify-content-end my-2 pr-1'\r\n        }\r\n      />\r\n    )\r\n  }\r\n  \r\n  const handleNameFilter = (value) => {\r\n    setCurrentPage(1)\r\n    setSearchName(value)\r\n  }\r\n  \r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      currentPlan: currentPlan.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (listData.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return listData\r\n    }\r\n  }\r\n  console.log(searchName)\r\n\r\n  const data = [\r\n    {\r\n    title:<div><Filter size={18} /> Filter</div>,\r\n    content:(\r\n      <>\r\n      <Row xl={12}>\r\n        <Col\r\n          xl=\"12\"\r\n          className=\"d-flex align-items-sm-center justify-content  flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\r\n        >\r\n          <div className=\"align-items-center mb-sm-0 mb-1 mr-1 ml-1\">\r\n            <Label>\r\n              Search:\r\n            </Label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"w-100\"\r\n              type=\"text\"\r\n              value={searchName}\r\n              placeholder='search'\r\n              onChange={(e) => handleNameFilter(e.target.value)}\r\n              // onKeyDown={(e) => handleKeyPress(e)}\r\n            />\r\n          </div>\r\n       </Col>\r\n       </Row>\r\n      </>\r\n    )  \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppCollapse data={data} type='border' accordion className='mb-1' />\r\n      <Card>\r\n        <CardHeader>\r\n        <Col xl=\"12\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <Label for=\"rows-per-page\">Show</Label>\r\n            <CustomInput\r\n              className=\"form-control mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\" \r\n              value={dataPerPage}\r\n              onChange={(e) => setDataPerPage(e.target.value)}\r\n              style={{\r\n                width: '5rem',\r\n                padding: '0 0.8rem',\r\n                backgroundPosition:\r\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </CustomInput>\r\n            <Label for=\"rows-per-page\">Entries</Label>\r\n          </div>\r\n        </Col>\r\n        </CardHeader>\r\n        <DataTable\r\n          noHeader\r\n          // pagination\r\n          responsive\r\n          paginationServer\r\n          columns={columns}\r\n          sortIcon={<ChevronDown />}\r\n          className=\"react-dataTable\"\r\n          paginationPerPage\r\n          paginationDefaultPage={currentPage}\r\n          paginationComponent={CustomPagination}\r\n          data={dataToRender()}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              toggleSidebar={toggleSidebar}\r\n              // handlePerPage={handlePerPage}\r\n              rowsPerPage\r\n              searchTerm={searchTerm}\r\n              handleFilter={handleFilter}\r\n            />\r\n          }\r\n        />\r\n      </Card>\r\n      {\r\n        listData.length === 0 ? '' : <CustomPagination />\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\n// ** Import BreadCrumbs From Component\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\nconst UsersList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <BreadCrumbs breadCrumbTitle='Wall' breadCrumbActive='List' />\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n//import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n  //UncontrolledButtonDropdown,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  //DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  <Link to={`/${breadCrumbParent}`}>{breadCrumbParent}</Link>\r\n                </BreadcrumbItem>\r\n                ) : ''\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { ChevronUp } from 'react-feather'\r\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\r\n\r\nconst AppCollapse = props => {\r\n  // ** Props\r\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\r\n\r\n  /**\r\n   ** If accordion is true then return only one active index else return an Array\r\n   */\r\n  const defaultActive = () => {\r\n    if (accordion) {\r\n      return active\r\n    } else {\r\n      return [...active]\r\n    }\r\n  }\r\n\r\n  // ** State\r\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\r\n\r\n  // ** Function to handle Collapse Toggle\r\n  const handleCollapseToggle = id => {\r\n    if (accordion) {\r\n      if (id === openCollapse) {\r\n        setOpenCollapse(null)\r\n      } else {\r\n        setOpenCollapse(id)\r\n      }\r\n    } else {\r\n      const arr = openCollapse,\r\n        index = arr.indexOf(id)\r\n      if (arr.includes(id)) {\r\n        arr.splice(index, 1)\r\n        setOpenCollapse([...arr])\r\n      } else {\r\n        arr.push(id)\r\n        setOpenCollapse([...arr])\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to render collapse\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const title = titleKey ? item[titleKey] : item.title,\r\n        content = contentKey ? item[contentKey] : item.content\r\n\r\n      return (\r\n        <Card\r\n          className={classnames('app-collapse', {\r\n            [item.className]: item.className,\r\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\r\n          })}\r\n          key={index}\r\n        >\r\n          <CardHeader\r\n            className={classnames('align-items-center', {\r\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\r\n            })}\r\n            /*eslint-disable */\r\n            {...(toggle === 'hover'\r\n              ? {\r\n                  onMouseEnter: () => handleCollapseToggle(index)\r\n                }\r\n              : {\r\n                  onClick: () => handleCollapseToggle(index)\r\n                })}\r\n            /*eslint-enable */\r\n          >\r\n            <CardTitle className='collapse-title'>{title}</CardTitle>\r\n            <ChevronUp size={14} />\r\n          </CardHeader>\r\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\r\n            <CardBody>{content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('collapse-icon', {\r\n        [className]: className,\r\n        'collapse-default': !type,\r\n        'collapse-shadow': type === 'shadow',\r\n        'collapse-border': type === 'border',\r\n        'collapse-margin': type === 'margin'\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCollapse\r\n\r\n// ** PropTypes\r\nAppCollapse.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  accordion: Proptypes.bool,\r\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\r\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\r\n  titleKey: Proptypes.string,\r\n  contentKey: Proptypes.string,\r\n  className: Proptypes.string\r\n}\r\n\r\n// ** Default Props\r\nAppCollapse.defaultProps = {\r\n  active: [],\r\n  toggle: 'click'\r\n}\r\n","import http from '../../../../configs/httpConfig'\nimport {notifyError, notifySuccessadd, notifySuccessedit} from \"../../../Toast\"\n\n//Get all Data Init\nexport const getAllWallDataInit = () => ({\n  type: 'GET_ALL_WALL_DATA_INIT'\n})\n\n// Get all Data Fail\nexport const getAllWallDataFail = () => ({\n  type: 'GET_ALL_WALL_DATA_FAIL'\n})\n//const url = (from && to) ? `/reports/referralReport?from=${from}&to=${to}&page=${page}` : `/reports/referralReport?page=${page}`\n// ** Get all Data\nexport const getAllWallData = (page, dataperPage = '') => {\n  \n  return async (dispatch) => {\n    dispatch(getAllWallDataInit())\n    await http.get(`/feeds/list?page=${page}&limit=${dataperPage}`).then((response) => {\n      console.log(response)\n      dispatch({\n        type: 'GET_ALL_WALL_POST',\n        data: response.data.data\n      })\n    }).catch(() => {\n     // console.log(e)\n      dispatch(getAllWallDataFail())\n    })\n  } \n}\n\nexport const Delete = () => {\n  return (dispatch) => {\n    dispatch({\n      type:'WALL_DELETE'\n    })\n  } \n}\n\nexport const deleteFeedPost = (id) => {\n  return async (dispatch) => {\n    await http.delete(`/feeds/delete/${id}`).then(() => {\n      //notifySuccessdelete()\n      dispatch(getAllWallData())\n      \n    }).catch((e) => {\n     \n      notifyError()\n      dispatch(Delete())\n      console.log(e)\n    })\n  }\n}\n\nexport const addPostInit = () => ({\n  type: 'ADD_FEED_POST_INIT'\n})\n\nexport const addPostFail = () => ({\n  type: 'ADD_FEED_POST_FAIL'\n})\n\nexport const addFeedPost = (params) => {\n \n  return async (dispatch) => {\n    dispatch(addPostInit())\n   if (params.feed_content === null) {\n  \n    notifyError(\"Eror\")\n   } else {\n    await http.post('/feeds/add', params).then((response) => {\n      notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'ADD_FEED_POST',\n        data: response.data.message\n      })\n    }).catch((e) => {\n      \n      notifyError(e.response.data.message)\n      console.log(\"Error in Feed Post: \", e)\n      dispatch(addPostFail())\n    })\n  }\n}\n   }\n    \n\nexport const addPostReset = () => ({\n  type: 'RESET_ADD_POST'\n})\n\n\nexport const editPostReset = () => ({\n  type: 'RESET_EDIT_POST'\n})\n\nexport const editPostData = (params) => ({\n  type: 'EDIT_POST_DATA',\n  data: params\n})\n\nexport const editPostInit = () => ({\n  type: 'EDIT_POST_INIT'\n})\n\nexport const editPostFail = () => ({\n  type: 'EDIT_POST_FAIL'\n})\n\n\nexport const editFeedPost = (id, params) => {\n  return async (dispatch) => {\n    dispatch(editPostInit())\n    await http.put(`/feeds/edit/${id}`, params).then((response) => {\n      console.log(response)\n      notifySuccessedit(response.data.message)\n      //console.log(response.data.message)\n      console.log(\"Respont : \", response)\n      dispatch({\n        type: 'EDIT_FEED_POST',\n        data: response.data.message\n      })\n    }).catch((e) => {\n      console.log(e)\n      notifyError(e.data.message)\n      console.log(\"Error in Feed Post: \", e)\n      dispatch(editPostFail())\n    })\n  }\n}\n\nexport const wallview = (id) => {\n  return async (dispatch) => {\n    await http.put(`/feeds/view/${id}`).then((response) => {\n      console.log(\"Respont : \", response)\n      dispatch({\n        type: 'GET_WALL_VIEW',\n        data: response.data.message\n      })\n    }).catch((e) => {\n      console.log(\"Error in Feed Post: \", e)\n      dispatch(editPostFail())\n    })\n  }\n}\nexport const Feedtogglestatus = (id, states) => {\n\n  return async (dispatch) => {\n   \n    await http.post(`feeds/toggle_status/${id}`).then((response) => {\n      notifySuccessadd(response.data.message)\n     console.log(response)\n       dispatch({\n        type: 'FEED_TOGGLE_STATUS',\n        data: states\n      })  \n       //dispatch(getAllWallData())        \n    }).catch((e) => {\n      console.log(e)\n      console.log(\"Error in Feed Post: \", e)\n      \n    })\n  }\n}"],"sourceRoot":""}