{"version":3,"sources":["views/contest/cricket_contest/add/index.js","configs/httpConfig.js","views/contest/store/actions/index.js"],"names":["selectstatus","value","label","VerticalForm","handleSubmit","useForm","dispatch","useDispatch","useState","series_id","fixture_id","contest_name","contest_type","caption","size","min","joined","entry_fee","contest","setContest","handleChange","event","target","name","tag","onSubmit","e","preventDefault","getcricketadd","sm","for","type","id","onChange","placeholder","theme","selectThemeColors","className","classNamePrefix","defaultValue","series_status","editcategory","options","isClearable","Ripple","color","outline","onClick","onclear","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","clearData","getfootballcontest","page","http","get","then","response","data","console","log","res","getCricketContestadd","post","catch","err","getFootballContestadd","searchcricketcontest","searchfootballcontest","getcricketTotal","getfootballTotal","records"],"mappings":"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","file":"static/js/217.397b6630.chunk.js","sourcesContent":["import {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label\n \n} from 'reactstrap'\n\nimport Select from 'react-select'\nimport { selectThemeColors } from '@utils'\nimport React, { useState } from 'react'\nimport {  getcricketadd } from '../../store/actions'\nimport { useDispatch } from 'react-redux'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport { useForm } from 'react-hook-form'\n\nconst selectstatus = [\n  { value: 'public', label: 'public' },\n  { value: 'private', label: 'private' }\n \n]\n// const selecttype = [\n//   { value: 'ODI', label: 'ODI' },\n//   { value: 'T20I', label: 'T20I' },\n//   { value: 'WOMANODI', label: 'WOMANODI' },\n//   { value: 'T20', label: 'T20' }\n// ]\nconst VerticalForm = () => {\n  const { handleSubmit } = useForm()\n  const dispatch = useDispatch()\n  const [contest, setContest] = useState({ series_id:\"\", fixture_id:\"\", contest_name:\"\", contest_type:\"\", caption:\"\", size:\"\", min:\"\", joined:'', entry_fee:''})\n  const onSubmit = (e) => {\n    e.preventDefault()\n   dispatch(getcricketadd(contest))\n  }\n  const onclear = (e) => {\n    e.preventDefault()\n    setContest({ series_id:\"\", fixture_id:\"\", contest_name:\"\", contest_type:\"\", caption:\"\", size:\"\", min:\"\", joined:'', entry_fee:'' })\n  }\n \n  const handleChange = (event) => {\n    const {name, value} = event.target\n   \n    setContest(() => {\n    \n      return {\n       [name] : value\n      }\n    })\n  }\n\n\nconst editcategory = (e) => {\n    \n  setContest({...contest, series_status:e.value})\n  }\n  // const typecategory = (e) => {\n    \n  //   setContest({...contest, contest_type:e.value})\n  // }\n\n  \n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag=\"h4\">Add Cricket Contests</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Row>\n          <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">series Id</Label>\n                <Input\n                  type=\"number\"\n                  name=\"Email\"\n                  id=\"EmailVertical\"\n                  value={contest.series_id}\n                  onChange={e => setContest({...contest, series_id:e.target.value})}\n                  placeholder=\"Enter No of ID \"\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label>Fixture Id</Label>\n                <Input\n                  type=\"number\"\n                  name=\"name\"\n                  id=\"nameVertical\"\n                  value={contest.fixture_id}\n                  onChange={handleChange}\n                  placeholder=\"Enter Product Name\"\n                />\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <Label for=\"nameVertical\">contest Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"nameVertical\"\n                  value={contest.contest_name}\n                  onChange={handleChange}\n                  placeholder=\"Enter Product Name\"\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"12\" >\n              <FormGroup>\n                <Label for=\"nameVertical\">contests Type</Label>\n                <Select\n                  theme={selectThemeColors}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                  defaultValue={selectstatus[0]}                 \n                  onChange={(e) => editcategory(e)}\n                  options={selectstatus}\n                  isClearable={false}\n                />\n              </FormGroup>\n            </Col>\n\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">Caption</Label>\n                <Input\n                  type=\"text\"\n                  name=\"Email\"\n                  id=\"EmailVertical\"\n                  value={contest.caption}\n                  onChange={handleChange}\n                  placeholder=\"Enter No of Coins \"\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">Size</Label>\n                <Input\n                  type=\"number\"\n                  name=\"Email\"\n                  id=\"EmailVertical\"\n                  value={contest.size}\n                  onChange={handleChange}\n                  placeholder=\"Enter No of Coins \"\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">Min</Label>\n                <Input\n                  type=\"number\"\n                  name=\"Email\"\n                  id=\"EmailVertical\"\n                  value={contest.min}\n                  onChange={handleChange}\n                  placeholder=\"Enter No of Coins \"\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">joined</Label>\n                <Input\n                  type=\"number\"\n                  name=\"Email\"\n                  id=\"EmailVertical\"\n                  value={contest.joined}\n                  onChange={handleChange}\n                  placeholder=\"Enter No of Coins \"\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">Entry Fee</Label>\n                <Input\n                  type=\"number\"\n                  name=\"Email\"\n                  id=\"EmailVertical\"\n                  value={contest.entry_fee}\n                  onChange={handleChange}\n                  placeholder=\"Enter No of Coins \"\n                />\n              </FormGroup>\n            </Col>\n            {/* <Col sm=\"12\" >\n              <FormGroup>               \n                <Label for=\"date-time-picker\">date Time</Label>\n                <Flatpickr\n                  data-enable-time\n                  id=\"date-time-picker\"\n                  className=\"form-control\"\n                  // onChange={(date) => edittime(date)}\n                  // key={date}\n                  value={contest?.date_time}\n                  options={{\n                    enableTime: true,\n                    dateFormat: \"Y-m-d H:i:s\",\n                    // defaultDate :new Date(editprizeform?.expires_at)\n                    // defaultDate: editprizeform?.expires_at\n                    defaultDate: contest ? contest.date_time : new Date()\n                    // defaultDate: date\n                    // defaultDate: '2016-10-22'\n                  }}\n                  onChange={(selectedDates, dateStr) => {\n                    const firstDate = selectedDates[0]\n                    setContest({ ...contest, date_time:dateStr})\n                    console.log({firstDate, dateStr })\n                  }}\n                />\n                </FormGroup>\n                </Col>\n   \n           \n            <Col>\n              <FormGroup>\n                <Label for=\"nameVertical\">Type</Label>\n                <Select\n                  theme={selectThemeColors}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                  defaultValue={selecttype[0]}                 \n                  onChange={(e) => typecategory(e)}\n                  options={selecttype}\n                  isClearable={false}\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">Active</Label>\n                <Input\n                  type=\"number\"\n                  name=\"Email\"\n                  id=\"EmailVertical\"\n                  value={contest.active}\n                  onChange={handleChange}\n                  placeholder=\"Enter No of ID \"\n                />\n              </FormGroup>\n            </Col>\n           */}\n          \n            <Col sm=\"12\">\n              <FormGroup className=\"d-flex mb-0\">\n                <Button.Ripple\n                  className=\"mr-1\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  // onClick={(e) => handleSubmit(onSubmit(e))}\n                >\n                  Submit\n                </Button.Ripple>\n                <Button.Ripple\n                  outline\n                  color=\"secondary\"\n                  type=\"reset\"\n                  onClick={(e) => onclear(e)}\n                >\n                  Reset\n                </Button.Ripple>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n      </CardBody>\n    </Card>\n  )\n}\nexport default VerticalForm\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import http from '../../../../configs/httpConfig'\n\nexport const clearData = () => {\n  return {type:'CLEAR_DATA'}\n}\n\nexport const getfootballcontestdownload = () => {\n    return async () => {\n      await http\n        .get('/football/reports/contestReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'football_contest.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketcontestdownload = () => {\n    return async () => {\n      await http\n        .get('/football/reports/contestReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'football_contest.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n//football\n\nexport const getcontestdatainit = () => ({\n    type: 'GET_ALL_CONTEST_INIT'\n  })\nexport const cleardata = () => ({\n  type: 'CLEAR_DATA'\n})  \n  \nexport const getfootballcontest = (page) => {\n    return async (dispatch) => {\n        // dispatch(getcontestdatainit())\n      await http.get(`/football/contests/list?page=${page}`).then((response) => {\n        dispatch({\n          type: 'GET_FOOTBALL_CONTEST',\n          data: response.data.data\n        })\n        console.log(response)\n      })\n    }\n  }\n\n  // export const getcricketcontest = (page) => {\n  //   return async (dispatch) => {\n  //       // dispatch(getcontestdatainit())\n  //     await http.get(`/cricket/contests/list?page=${page}`).then((response) => {\n  //       dispatch({\n  //         type: 'GET_CRICKET_CONTEST',\n  //         data: response.data.data\n  //       })\n  //       console.log(response.data.data)\n  //     })\n  //   }\n  // }\n\n  //cricket contest add\nexport const getcricketadd = (id) => {\n  return async (dispatch) => {\n    await http.get('/cricket/contests/add', id).then((res) => {\n      dispatch({\n        type:'ADD_CRICKET_CONTESTS',\n        data:res.data.data\n      })\n    }\n\n    )\n  }\n}\n\n  export const getCricketContestadd = (id) => {\n    return (dispatch) => {\n      http\n        .post('/cricket/contests/list', id)\n        .then((response) => {\n          dispatch({\n            type: 'CRICKET_CONTEST_ADD',\n            data: response.data\n          })\n          console.log(response.data.data)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  export const getFootballContestadd = (id) => {\n    return (dispatch) => {\n      http\n        .post('/football/contests/list', id)\n        .then((response) => {\n          dispatch({\n            type: 'FOOTBALL_CONTEST_ADD',\n            data: response.data\n          })\n          console.log(response.data.data)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  export const searchcricketcontest = (page, type) => {\n    return async (dispatch) => {\n      await http.get(`/cricket/contests/list?page=${page}&contest_type=${type}`).then((response) => {\n        dispatch({\n          type: 'SEARCH_CRICKET_CONTEST',\n          data: response.data.data\n        })\n        console.log(response.data.data)\n      })\n    }\n  }\n\n  export const searchfootballcontest = (page, type) => {\n    return async (dispatch) => {\n      await http.get(`/football/contests/list?page=${page}&contest_type=${type}`).then((response) => {\n        dispatch({\n          type: 'SEARCH_FOOTBALL_CONTEST',\n          data: response.data.data\n        })\n        console.log(response.data.data)\n      })\n    }\n  }\n\n  export const getcricketTotal = (page) => {\n    console.log(page)\n    return async (dispatch) => {\n      // dispatch(getteamsdatainit())\n      await http.get(`/cricket/series/list?page=${page}`).then((response) => {\n        dispatch({\n          type: 'CRICKET_SERIES_TOTAL',\n          data: response.data\n        })\n        console.log(response.data, \"this\")\n      })\n    }\n  }\n  \n  export const getfootballTotal = (page) => {\n    return async (dispatch) => {\n      // dispatch(getteamsdatainit())\n      await http.get(`/football/series/list?page=${page}`).then((response) => {\n        dispatch({\n          type: 'FOOTBALL_SERIES_TOTAL',\n          data: response.data\n        })\n        console.log(response.data.data.records, \"this\")\n      })\n    }\n  }\n  "],"sourceRoot":""}