{"version":3,"sources":["views/PrizeMaster/FootballPrizeMaster/add/index.js","configs/httpConfig.js","views/Toast.js","@core/components/repeater/index.js","views/PrizeMaster/store/actions/index.js"],"names":["selectcategory","value","label","VerticalForm","useForm","defaultValues","reactSelect","register","errors","handleSubmit","control","dispatch","useDispatch","useState","err","setErr","type","setType","name","caption","assets_url","header","body","prizeform","setPrizeform","mail","setMail","count","setCount","console","log","arr","onSubmit","index","push","document","getElementById","arr1","pop","AddPrizeMasterFootball","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","uploadImage","e","a","target","files","base64","tag","for","render","field","onChange","current","rest","editcategory","defaultOption","options","theme","selectThemeColors","classNamePrefix","sm","id","innerRef","required","invalid","placeholder","coins","className","checked","sendmail","inline","rows","i","md","Ripple","color","onClick","deleteForm","outline","size","preventDefault","onclear","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","notifyWarning","warning","Repeater","props","children","Tag","items","defaultProps","AddPrizeMasterCricket","add","http","post","then","response","data","catch","getcricketprize","page","dataPerPage","get","getfootballprize","getprizecricketdetails","put","getprizefootballdetails","deleteprizecricket","delete","deleteprizefootball"],"mappings":"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","file":"static/js/177.ba6bfd06.chunk.js","sourcesContent":["import {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label,\n  CustomInput\n} from 'reactstrap'\nimport {useDispatch} from 'react-redux'\nimport Select from 'react-select'\nimport { selectThemeColors } from '@utils'\nimport React, {useState } from 'react'\nimport {  AddPrizeMasterFootball} from '../../store/actions'\n// import { useDispatch } from 'react-redux'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport { useForm, Controller } from 'react-hook-form'\nimport { Plus, X} from 'react-feather'\nimport Repeater from '@components/repeater'\nconst selectcategory = [\n  { value: 'coins', label: 'Coin' },\n  { value: 'coupons', label: 'Coupon' }\n]\n\nconst VerticalForm = () => {\n  const defaultValues = {\n    reactSelect: null\n  }\n\n  const { register, errors, handleSubmit, control } = useForm({defaultValues})\n  const dispatch = useDispatch()\n  const [err, setErr] = useState(false)\n  const [type, setType] = useState('')\n  const [prizeform, setPrizeform] = useState({ value:\"\", name:\"\", caption:\"\", type:\"\", assets_url:\"\", header:\"\", body: []})\n  const [mail, setMail] = useState(false)\n  const [count, setCount] = useState(1)\n\n  const increaseCount = () => {\n    setCount(count + 1)\n  }\n  console.log(err)\n\n  const deleteForm = e => {\n    // e.preventDefault()\n    console.log(e)\n    // e.target.closest('form').remove()\n  }\n\nconst arr = []\n  // useEffect(() => {             \n  //   console.log(count)\n  //   // arr.push(document.getElementById(`item-name-${count - 1}`)?.value)\n  //   setVal([...val, document.getElementById(`item-name-${count - 1}`)?.value])\n  //   console.log(`item-name-${count + 1}`)   \n  //   console.log(document.getElementById(`item-name-${0}`)?.value)\n  //   console.log(document.getElementById(`item-name-${1}`)?.value)\n  //   console.log(document.getElementById(`item-name-${2}`)?.value)\n  //   console.log(arr)\n  // }, [count])\n\n  const onSubmit = () => {      \n    // e.preventDefault()\n    for (let index = 0; index <= count; index++) {\n      arr.push(document.getElementById(`item-name-${index}`)?.value)  \n      console.log(index)\n    }   \n    setPrizeform({...prizeform, body : arr})  \n    console.log(prizeform)\n    const arr1 = arr.pop()\n    console.log(arr1)\n    // setPrizeform({...prizeform,  })\n    // setPrizeform(...prizeform)\n    setErr(true)\n    console.log(arr)\n    dispatch(AddPrizeMasterFootball(prizeform))\n  }\n  \n  const onclear = (e) => {\n    e.preventDefault()\n    setPrizeform({ value:\"\", name: '', caption:'',  assets_url: '' })\n  }\n  \nconst editcategory = (e) => {\n    setErr(false)\n    setType(e.value)\n    setPrizeform({...prizeform, type:e.value})\n    if (e.value === 'coins') {\n      setPrizeform(current => {\n        const {assets_url, header, body, ...rest} = current\n        console.log(assets_url, header, body)\n        return rest\n      })\n    } else {\n      setPrizeform(current => {\n        const {value, ...rest} = current\n        console.log(value)\n        return rest\n      })\n    }\n  }\n\nconst convertBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader()\n    fileReader.readAsDataURL(file)    \n    fileReader.onload = () => {\n      resolve(fileReader.result)\n    }    \n    fileReader.onerror = (error) => {\n      reject(error)\n    }\n  })\n}\n\nconst sendmail = (e) => {\n  setMail(e.target.checked)  \n  setPrizeform(current => {\n    const {header, body, value, ...rest} = current\n    console.log(value, header, body)\n    return rest\n  })\n}\n\nconst uploadImage = async (e) => {\n  const file = e.target.files[0]\n  const base64 = await convertBase64(file)\n  setPrizeform({ ...prizeform, assets_url: base64 })\n}\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag=\"h4\">Add Cricket Contest Prizes</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Form  onSubmit={handleSubmit(onSubmit)}>  \n        <Row>\n        <Col>\n              <FormGroup>\n                <Label for=\"nameVertical\">Category</Label>\n                <Controller\n              control={control}\n              render={({ field: { ...field } }) => (\n                <Select\n                {...field}           \n                  onChange={(e) => editcategory(e)}  \n                  defaultOption              \n                  options={selectcategory}\n                  theme={selectThemeColors}\n                  // className={classnames('react-select', { 'is-invalid':  prizeform.type === '' })}\n                  classNamePrefix='select'\n                  />\n                  )}\n                  name='reactSelect'\n            />\n                {/* <Select\n                  theme={selectThemeColors}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                  onChange={(e) => editcategory(e)}\n                  options={selectcategory}\n                  isClearable={false}\n                /> */}\n              </FormGroup>\n            </Col>\n          </Row>                \n            {type === 'coins' ?\n            <Row>\n              <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"EmailVertical\">Value</Label>\n                <Input\n                  type=\"number\"\n                  name=\"value\"\n                  id=\"value\"\n                  innerRef={register({ required: true })}\n                  invalid={errors.id && true}\n                  value={prizeform.value}\n                  onChange={(e) => setPrizeform({ ...prizeform, value: e.target.value })}\n                  placeholder=\"Enter No of ID \"\n                />\n              </FormGroup>\n            </Col>\n            </Row>\n           : \"\"\n            }\n            <Row>\n            <Col sm=\"12\">\n              <FormGroup>\n                <Label>Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  innerRef={register({ required: true })}\n                  invalid={errors.name && true}\n                  value={prizeform.name}\n                  onChange={(e) => setPrizeform({ ...prizeform, name: e.target.value })}\n                  placeholder=\"Enter Product Name\"\n                />\n              </FormGroup>\n            </Col>\n            </Row>    \n            <Row>\n            <Col>\n              <FormGroup>\n                <Label for=\"nameVertical\">Caption</Label>\n                <Input\n                  type=\"text\"\n                  name=\"caption\"\n                  id=\"caption\"\n                  innerRef={register({ required: true })}\n                  invalid={errors.caption && true}\n                  value={prizeform.caption}\n                  onChange={(e) => setPrizeform({ ...prizeform, caption: e.target.value })}\n                  placeholder=\"Enter Product Name\"\n                />\n              </FormGroup>\n            </Col>  \n              </Row>      \n              <Row>\n              <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"coins\">coins</Label>\n                <Input\n                  type=\"number\"\n                  name=\"coins\"\n                  id=\"coins\"\n                  innerRef={register({ required: true })}\n                  invalid={errors.coins && true}\n                  value={prizeform.value}\n                  onChange={(e) => setPrizeform({ ...prizeform, value: e.target.value })}\n                  placeholder=\"Enter No of Coins \"\n                />\n              </FormGroup>\n            </Col> \n                </Row>                                                  \n            {type !== 'coins' ?       \n            <>\n            <Row>     \n            <Col sm=\"12\">\n              <FormGroup>\n                <Label for=\"customFile\">Custom File Input</Label>\n                <CustomInput\n                  type=\"file\"\n                  id=\"customFile\"\n                  name=\"customFile\"\n                  // innerRef={register({ required: true })}\n                  // invalid={true}\n                  onChange={(e) => uploadImage(e)}\n                />\n              </FormGroup>\n            </Col> \n            </Row>\n            <Row>         \n            <h4\n              className='mx-1'\n            >Send Email</h4>\n            <FormGroup>\n            <CustomInput\n              className='custom-control-success'\n              type='switch'\n              id='success'\n              name='success'\n              // onChange={e => setMail(e.target.checked)}\n              onChange={(e) => sendmail(e)}\n              inline\n              />\n              </FormGroup>   \n            </Row>  \n              {\n                mail ?          \n                <Col\n                className='lg-6'\n                >\n                <CardBody>\n                <Input\n                type='textarea'\n                name='text'\n                id='exampleText1'\n                 rows='3'\n                 value={prizeform.header}\n                 onChange={(e) => setPrizeform({ ...prizeform, header: e.target.value })}\n                 placeholder='Textarea' />\n               </CardBody> \n               {/* <CardBody>\n               <Input\n               type='textarea'\n               name='text'\n               id='exampleText2'\n               value={prizeform.body}\n               onChange={(e) => setPrizeform({ ...prizeform, body: e.target.value })}\n               rows='3'\n               placeholder='Textarea' />\n               </CardBody>  */}\n                <Repeater count={count}>\n          {i => (\n            \n            <Form key={i}>\n              <Row className='justify-content-between align-items-center ml-1'>\n                <Col md={4}>\n                  <FormGroup>\n                    <Label for={`item-name-${i}`}>Item Name</Label>\n                    <Input\n                     type='text' \n                     id={`item-name-${i}`} \n                     placeholder='Sciflare Fantasy Admin' \n                     />\n                  </FormGroup>\n                </Col>      \n                <Col md={2}>\n                  <Button.Ripple color='danger' className='text-nowrap px-1' onClick={(e) => deleteForm(e)} outline>\n                    <X size={14} className='mr-50' />\n                    <span>Delete</span>\n                  </Button.Ripple>\n                </Col>                      \n              </Row>\n            </Form>\n          )}\n        </Repeater>\n        <Button.Ripple className='btn-icon ml-2 mb-1' color='primary' onClick={increaseCount}>\n          <Plus size={14} />\n          <span className='align-middle ml-25'>Add New</span>\n        </Button.Ripple>\n               </Col>              \n               : ''   \n              } </> : ''\n            }\n            {/* {mail ?\n             <CardBody>\n              <Input type='textarea' name='text' id='exampleText' rows='3' placeholder='Textarea' />\n             </CardBody> : ''\n            } */}\n            <Col sm=\"12\">\n              <FormGroup className=\"d-flex mb-0\">\n                <Button.Ripple\n                  className=\"mx-2\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={(e) => handleSubmit(onSubmit(e))}\n                >\n                  Submit\n                </Button.Ripple>\n                <Button.Ripple\n                  outline\n                  color=\"secondary\"\n                  type=\"reset\"\n                  onClick={(e) => onclear(e)}\n                >\n                  Reset\n                </Button.Ripple>\n              </FormGroup>\n            </Col>\n        </Form>\n      </CardBody>\n    </Card>\n  )\n}\nexport default VerticalForm\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Repeater = (props) => {\r\n  // ** Props\r\n  const { count, tag, children, ...rest } = props\r\n\r\n  // ** Custom Tag\r\n  const Tag = tag\r\n\r\n  // ** Default Items\r\n  const items = []\r\n\r\n  // ** Loop passed count times and push it in items Array\r\n  for (let i = 0; i < count; i++) {\r\n    items.push(children(i))\r\n  }\r\n\r\n  return <Tag {...rest}>{items}</Tag>\r\n}\r\n\r\n// ** PropTypes\r\nRepeater.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  tag: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nRepeater.defaultProps = {\r\n  tag: 'div'\r\n}\r\n\r\nexport default Repeater\r\n","import http from '../../../../configs/httpConfig'\nimport {notifyError, notifySuccessadd, notifySuccessdelete} from \"../../../Toast\"\n\nexport const AddPrizeMasterCricket = (add) => {\n  return (dispatch) => {      \n    http\n    .post('/cricket/contest_prizes/add_prize', add)\n    .then((response) => {\n      notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'ADD_PRIZE_MASTER_CRICKET',\n        data: response.data\n      })    \n    })\n    .catch((err) => notifyError(err.message))\n  }\n}\n\n// api/cricket/contest_prizes/add_prize\nexport const AddPrizeMasterFootball = (add) => {\n  return (dispatch) => {\n    http\n    .post('/football/contest_prizes/add_prize', add)\n    .then((response) => {\n      notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'ADD_PRIZE_MASTER_FOOTBALL',\n        data: response.data\n      })    \n    })\n    .catch((err) => notifyError(err.message))\n  }\n}\n\nexport const clearData = () => {\n  return {type:'CLEAR_DATA'}\n}\n\nexport const getAllCricketcontestprize = () => ({\n  type: 'GET_ALL_CRICKET_CONTEST_PRIZE'\n})\n\nexport const getspinner = () => ({\n  type: 'GET_SPINNER'\n})\n\nexport const getAllCricketcontestFail = () => ({\n  type: 'GET_ALL_USERS_FAIL'\n})\n\nexport const getcricketprize = (page, dataPerPage = '') => {\n  return async (dispatch) => {\n    dispatch(getspinner())\n    await http.get(`cricket/contest_prizes/prize_list?page=${page}limit=${dataPerPage}`).then((response) => {            \n      dispatch({\n        type: 'PRIZE_MASTER_CRICKET',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\nexport const getfootballprize = (page, dataPerPage = '') => {\n  return async (dispatch) => {\n    dispatch(getspinner())\n    await http.get(`football/contest_prizes/prize_list?page=${page}limit=${dataPerPage}`).then((response) => {      \n      dispatch({\n        type: 'PRIZE_MASTER_CRICKET_FOOTBALL',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\nexport const getcricketprizeType = (page, type) => {\n  return async (dispatch) => {\n    dispatch(getAllCricketcontestprize())\n    await http.get(`cricket/contest_prizes/prize_list?page=${page}&type=${type}`).then((response) => {      \n      dispatch({\n        type: 'PRIZE_MASTER_CRICKET_TYPE',\n        data: response.data.data\n      })\n      console.log(response.data.data.data)\n    }).catch(() => {\n      dispatch(getAllCricketcontestFail())\n    })\n  }\n}\n\nexport const getprizecricketdetails = (id) => {\n  return async (dispatch) => {\n   await http\n      .put(`/cricket/view/${id}`)\n      .then((response) => {\n        dispatch({\n          type: 'PRIZE_DETAILS_CRICKET',\n          data: response.data.data\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const getprizefootballdetails = (id) => {\n  return async (dispatch) => {\n   await http\n      .put(`/foootball/view/${id}`)\n      .then((response) => {\n        dispatch({\n          type: 'PRIZE_DETAILS_CRICKET',\n          data: response.data.data\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const deleteprizecricket = (id) => {\n  return () => {\n    http\n      .delete(`/cricket/${id}`)\n      .then(() => {\n        notifySuccessdelete()\n        // dispatch(getAllData())\n      })\n      .catch((err) => {\n        notifyError()\n        console.log(err)\n      })\n  }\n}\n\nexport const deleteprizefootball = (id) => {\n  return () => {\n    http\n      .delete(`/football/${id}`)\n      .then(() => {\n        notifySuccessdelete()\n        // dispatch(getAllData())\n      })\n      .catch((err) => {\n        notifyError()\n        console.log(err)\n      })\n  }\n}"],"sourceRoot":""}