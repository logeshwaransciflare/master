{"version":3,"sources":["views/ManagePrize/wishlist/index.js","configs/httpConfig.js","views/Toast.js","@core/components/breadcrumbs/index.js","views/ManagePrize/store/actions/index.js"],"names":["Wishlist","dispatch","useDispatch","store","useSelector","state","ecommerce","console","log","useState","status","setStatus","useEffect","getWishlistItems","getPrizes","wishlist","length","toggle_data","history","useHistory","breadCrumbTitle","breadCrumbActive","Ripple","color","onClick","push","className","prizes","data","map","item","to","id","editprize","style","width","height","src","assets_url","alt","name","likes","value","pathname","prizes_share","caption","category","expires_at","isInCart","size","outline","type","defaultChecked","active","onChange","row","manageprizetoggle","inline","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","BreadCrumbs","props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","tag","page","http","get","then","res","prizesEdit","put","edit","catch","err","addprize","prize","dev","post","response","e"],"mappings":"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","file":"static/js/190.5f384f9e.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect, useState } from 'react' //useState\nimport { Link, useHistory} from 'react-router-dom'\n// ** Custom Components\n// import BreadCrumbs from '@components/breadcrumbs'\n// ** Third Party Components\n// import classnames from 'classnames'\nimport BreadCrumbs from '@components/breadcrumbs'\n// import Swal from 'sweetalert2'\nimport {  Info, Edit, Heart } from 'react-feather' //X,\nimport { Card, CardBody, CardText, Button, Alert, CustomInput } from 'reactstrap'\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPrizes, editprize, getWishlistItems, manageprizetoggle} from '../store/actions' // deleteprize, manageprizetoggle\n// ** Styles\nimport '@styles/base/pages/app-ecommerce.scss'\n// import withReactContent from 'sweetalert2-react-content'\n\nconst Wishlist = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.ecommerce)\n  console.log(store)\n  const [status, setStatus] = useState(false)\n  useEffect(() => {\n    dispatch(getWishlistItems())\n    dispatch(getPrizes(1))\n    console.log(\"wish\", store.wishlist.length)\n  }, [store.toggle_data])\n  // const MySwal = withReactContent(Swal)\n\n  const history = useHistory()\n  // ** Handle Move/Add to cart\n  const toggleSidebar = () => history.push('/prize/add')\n  \nconst SwitchClick = (row) => {\n  setStatus(!status)\n  dispatch(manageprizetoggle(row, status))\n \n}\nconsole.log(store)\n  const renderWishlist = () => {\n\n    return store.prizes.data.map(item => {\n     console.log(item)\n      return (\n        <Card className=\"ecommerce-card\" key={item.id}>\n          <div className=\"item-img text-center mx-auto\">\n          {/* onRowClicked={(item) => {            \n            history.push(`/manageprize/prizedetailes/${item.id}`)\n            console.log(item.id)\n            dispatch(editprize(item.id))\n           }} */}\n            <Link to={`/manageprize/prizedetailes/${item.id}`} onClick={() => dispatch(editprize(item.id))} >\n              \n              <img\n                style={{width:'100%', height:'250px'}}\n                src={item.assets_url}\n                alt={item.name}\n                \n              />\n            </Link>\n          </div>\n\n          <CardBody>\n            <div className=\"item-wrapper\">\n              <div className=\"item-rating\">\n                {/* <ul className=\"unstyled-list list-inline\">\n                  {new Array(5).fill().map((id, index) => {\n                    return (\n                      <li key={index} className=\"ratings-list-item mr-25\">\n                        <Star\n                          className={classnames({\n                            'filled-star': index + 1 <= item.likes,\n                            'unfilled-star': index + 1 > item.likes\n                          })}\n                        />\n                        \n                      </li>\n                    )\n                  })}\n                </ul> */}\n                <Heart width=\"14\" /> {item.likes}\n              </div>\n            </div>\n            \n            <div className=\"item-name\">\n            </div>\n            <CardText className=\"item-price\">coins: {item.value}</CardText>\n           \n            {/* <CardText className=\"item-price\">\n              No of stock : {store.prizes.length}\n            </CardText> */}\n          </CardBody>\n          <div className=\"item-options text-center\">\n            {/* <Button\n              className=\"btn-wishlist remove-wishlist\"\n              color=\"danger\"\n              onClick={ (id) => {\n                //const err = store.del ? \"erortrue\" : \"errorfalse\"\n               return MySwal.fire({\n                  title: 'Are you sure?',\n                  text: \"You won't be able to revert this!\",\n                  icon: 'warning',\n                  showCancelButton: true,\n                  confirmButtonText: 'Yes, delete it!',\n                  customClass: {\n                    confirmButton: 'btn btn-primary',\n                    cancelButton: 'btn btn-outline-danger ml-1'\n                  },\n                  buttonsStyling: false\n                }).then(function (result) {\n                  if (result.value) {\n                    dispatch(deleteprize(item.id))\n                    console.log(id)\n                    MySwal.fire({\n                      icon: 'success',\n                      title: 'Deleted!',\n                      text: 'Your file has been deleted.',\n                      customClass: {\n                        confirmButton: 'btn btn-success'\n                      }\n                    })\n                  } \n                })\n              }}\n            >\n              <X className=\"mr-25\" size={14} />\n              <span color=\"primary\">Remove</span>\n            </Button> */}\n            <Button\n              color=\"primary\"\n              // tag={CartBtnTag}\n              className=\"btn-cart move-cart\"\n            \n              onClick={() => {\n                history.push({pathname:\"/editprize\", state: {id: item.id, name: item.name, value:item.value, prizes_share: item.prizes_share, caption: item.caption, category: item.category, expires_at:item.expires_at}})\n               \n                dispatch(editprize(item.id))\n                console.log(editprize.id)\n                console.log(typeof (value))\n              }}\n             \n\n              {...(item.isInCart\n                ? {\n                    to: '../checkout'\n                  }\n                : {})}\n\n            >\n              <Edit className=\"mr-25\" size={14}  />\n              <span>Edit</span>\n            </Button>\n            <Button.Ripple  color='primary' outline   >\n           \n            <CustomInput \n            className='custom-control-success'\n            type='switch'\n            id={`success${item.id}`}\n            defaultChecked = {item.active !== 0 }\n            name='success'\n            onChange={() => SwitchClick(item.id)}\n            inline\n           \n          />\n          </Button.Ripple>\n          \n          </div>\n        </Card>\n      )\n    })\n  }//= {item.quiz_status !== \"CLOSE\"}\n\n  return (\n    <Fragment>\n       <BreadCrumbs breadCrumbTitle='Prizes' breadCrumbActive='prizes' />\n     \n      <Button.Ripple color=\"primary\" onClick={toggleSidebar} className=\"mb-2 d-flex ml-auto\">\n        Add Prize\n      </Button.Ripple>\n      {store.prizes.data?.length ? (\n        <section className=\"grid-view wishlist-items\">\n          {renderWishlist()}\n        </section>\n      ) : (\n        <Alert color=\"info\">\n          <div className=\"alert-body\">\n            <Info size={14} />\n            <span className=\"align-middle ml-50\">Empty </span>\n          </div>\n        </Alert>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Wishlist\n\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n//import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n  //UncontrolledButtonDropdown,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  //DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  <Link to={`/${breadCrumbParent}`}>{breadCrumbParent}</Link>\r\n                </BreadcrumbItem>\r\n                ) : ''\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","import axios from 'axios'\nimport http from '../../../../configs/httpConfig'\nimport {notifySuccessadd, notifySuccessedit, notifyError, notifyWarning} from \"../../../Toast\" //notifySuccessdelete,\n// ** GET Products\n\nexport const getprizedatainit = () => ({\n  type: 'GET_ALL_PRIZE_INIT'\n})\nexport const getProducts = params => {\n  return dispatch => {\n    dispatch(getprizedatainit())\n    return http.get('/prizes/list', { params }).then(res => {\n      dispatch({ type: 'GET_PRODUCTS', data: res.data, params })\n      \n    })\n  }\n}\n\nexport const getPrizes = (page) => {\n  return (dispatch) => {\n    // dispatch(getprizedatainit())\n    return http.get(`/prizes/list?page=${page}`).then((res) => {\n      dispatch({ type: 'GET_PRIZES', data: res.data})\n      // console.log('tag', res.data)\n    })\n  }\n}\n\nexport const editprize = (id, prizesEdit) => {\n \n  return (dispatch) => {   \n    dispatch(getprizedatainit()) \n    http.put(`/prizes/view/${id}`, prizesEdit).then((res) => { \n      console.log(res)\n      dispatch({ type: 'EDIT_PRIZE',  data: res.data, prizesEdit })\n    })\n  }\n}\nexport const edit = (id, prizesEdit) => {\n return (dispatch) => {\n    http.put(`/prizes/edit/${id}`, prizesEdit).then((res) => { \n      console.log(res)\n       notifySuccessedit(res.data.message)\n      dispatch({ type: 'EDIT_PRIZES', data: res.data, prizesEdit })\n     console.log(\"this one\", res.data)\n    }).catch((err) => {\n      notifyWarning()\n      console.log(err)\n    })\n  }\n}\n\nexport const Delete = () => {\n  return (dispatch) => {\n    dispatch({\n      type:'PRIZE_DELETE'\n    })\n  } \n}\n \nexport const deleteprize = (id) => {\n  return (dispatch) => {\n    return http.delete(`/prizes/delete/${id}`).then((res) => {\n       // notifySuccessdelete()\n      console.log(id)\n      dispatch({ type: 'DELETE_PRIZE', data: res.data })\n      dispatch(getPrizes())\n     \n    }).catch(() => {\n      dispatch(Delete())\n      console.log(\"helo\")\n    })\n  }\n}\n\n//add prizes\nexport const addprize = (prize, dev) => {\n  return (dispatch) => {\n    http\n    .post('/prizes/add', prize, dev)\n    .then((response) => {\n         notifySuccessadd(response.data.message)\n      dispatch({\n        type: 'QUIZ_QUESTION_ADD',\n        data: response.data\n      })    \n    })\n    .catch((response) => {      \n      notifyError(response.response.data.message)\n    })\n  }\n}\n// ** Add Item to Cart\nexport const addToCart = id => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/ecommerce/cart', { productId: id }).then(res => {\n      dispatch({ type: 'ADD_TO_CART', data: res.data })\n      dispatch(getProducts(getState().ecommerce.params))\n    \n    })\n  }\n}\n\n// ** GET Wishlist Items\nexport const getWishlistItems = () => {\n  return dispatch => {\n    return axios.get('/apps/ecommerce/wishlist').then(res => {\n      dispatch({ type: 'GET_WISHLIST', data: res.data })\n      console.log(\"hello\", res.data)\n    })\n  }\n}\n\n// ** DELETE Wishlist Item\nexport const deleteWishlistItem = id => {\n  return dispatch => {\n    return axios.delete(`/apps/ecommerce/wishlist/${id}`).then(res => {\n      dispatch({ type: 'DELETE_WISHLIST_ITEM', data: res.data })\n      dispatch(getWishlistItems())\n    })\n  }\n}\n\n// ** GET Cart Items\nexport const getCartItems = () => {\n  return dispatch => {\n    return axios.get('/apps/ecommerce/cart').then(res => {\n      dispatch({ type: 'GET_CART', data: res.data })\n    })\n  }\n}\nexport const quizEditQuestions = (id, prizesEdit) => {\n  return (dispatch) => {\n    http\n      .put(`/prize/edit/${id}`, prizesEdit)\n      .then((response) => {\n        dispatch({\n          type: 'PRIZES_EDIT',\n          data: response.data\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n// ** GET Single Product\nexport const getProduct = slug => {\n  return dispatch => {\n    return axios.get(`/apps/ecommerce/products/${slug}`).then(res => {\n      dispatch({ type: 'GET_PRODUCT', data: res.data })\n    })\n  }\n}\n\n// ** Add Item to Wishlist\nexport const addToWishlist = id => {\n  return dispatch => {\n    return axios.post('/apps/ecommerce/wishlist', { productId: id }).then(() => {\n      dispatch({ type: 'ADD_TO_WISHLIST' })\n    })\n  }\n}\n\n// ** DELETE Cart Items\nexport const deleteCartItem = id => {\n  return dispatch => {\n    return axios.delete(`/apps/ecommerce/cart/${id}`).then(res => {\n      dispatch({ type: 'DELETE_CART_ITEM', data: res.data })\n      dispatch(getCartItems())\n    })\n  }\n}\n\nexport const manageprizetoggle = (id, status) => {\n  console.log(id)  \n    return async (dispatch) => {\n      \n      await http.post(`/prizes/toggle_status/${id}`).then((response) => {\n        notifySuccessadd(response.data.message)\n        console.log(response)  \n      dispatch({\n          type: 'MANAGE_PRIZE_TOGGLE_STATUS',\n          data: status\n        })  \n     \n      }).catch((e) => {\n        console.log(e)\n        console.log(\"Error in Feed Post: \", e)\n        \n      })\n    }\n  }"],"sourceRoot":""}