{"version":3,"sources":["views/corporate/Squad/quiz/list/columns.js","views/corporate/Squad/quiz/list/Table.js","views/corporate/Squad/quiz/list/index.js","configs/httpConfig.js","views/Toast.js","@core/components/ui-loader/index.js","views/corporate/Squad/store/actions/index.js"],"names":["columns","name","minWidth","selector","sortable","cell","row","user_id","user","team_name","charAt","toUpperCase","slice","email","quiz","quiz_name","created_on","quiz_total_questions","quiz_right_answers","quiz_coins_won","ContestsList","CustomHeader","currentPage","setCurrentPage","store","useSelector","state","rep","useState","quiz_from","picker","setPicker","quiz_to","dateto","setDateto","dispatch","useDispatch","className","Row","Col","Label","value","id","onChange","date","local","Date","datestring","getFullYear","getMonth","getDate","edittime","dat","edit","FormGroup","Button","Ripple","color","type","onClick","e","preventDefault","getcricketquizdata","quizfrom","quizto","onSubmit","xl","getcricketquizdownload","cricket_quiz","console","log","searchTerm","setSearchTerm","listData","setListData","cricket_quiz_perpage","useEffect","isloading","Spinner","winnerfrom","winnerto","contestfrom","contestto","filterList","filter","userItem","contest_name","toLowerCase","includes","blocking","Card","noHeader","pagination","subHeader","responsive","paginationServer","paginationPerPage","paginationDefaultPage","sortIcon","paginationComponent","count","last_page","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","data","filters","q","isFiltered","Object","keys","some","k","length","dataToRender","subHeaderComponent","rowsPerPage","handleFilter","val","UsersList","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","size","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","UILoader","props","children","loader","tag","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","from","to","getcricketwinnerdata","a","url","http","get","then","response","getcricketwinnerdownload","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","getAllSeries","records","getAllFixture","getplayerreport","seriesid","fixtureid","table","collectseriesid","collectfixtureid","getcricketplayerdownload","addfile","params","post","catch"],"mappings":"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","file":"static/js/118.0c164493.chunk.js","sourcesContent":["export const columns = [\n  {\n    name: 'ID',\n    minWidth: '100px',\n    selector: 'user_id',\n    sortable: true,\n    cell: (row) => row.user_id\n  },\n  {\n    name: 'User Name',\n    minWidth: '160px',\n    selector: 'user.team_name',\n    sortable: true,\n    cell: (row) => (row.user ? row?.user?.team_name?.charAt(0)?.toUpperCase() + row?.user?.team_name?.slice(1) : \"-\")\n  },\n  {\n    name: 'Email',\n    minWidth: '160px',\n    selector: 'user.email',\n    sortable: true,\n    cell: (row) => row.user?.email\n  },\n  {\n    name: 'Quiz Name ',\n    minWidth: '160px',\n    selector: 'quiz.quiz_name',\n    sortable: true,\n    cell: (row) => row.quiz.quiz_name\n  },\n  {\n    name: 'Played On',\n    minWidth: '180px',\n    selector: 'created_on',\n    sortable: true,\n    cell: (row) => row.created_on\n  },\n  {\n    name: 'Total Questions',\n    minWidth: '160px',\n    selector: 'quiz_total_questions',\n    sortable: true,\n    cell: (row) => row.quiz_total_questions\n  },\n  {\n    name: 'Total Correct Answers',\n    minWidth: '160px',\n    selector: 'quiz_right_answers',\n    sortable: true,\n    cell: (row) => row.quiz_right_answers\n  },\n  {\n    name: 'Coins Won',\n    minWidth: '160px',\n    selector: 'quiz_coins_won',\n    sortable: true,\n    cell: (row) => row.quiz_coins_won\n  }\n]\n","import { Fragment, useState, useEffect } from 'react'\nimport UiLoader from '@components/ui-loader'\n// ** Invoice List Sidebar\n\n// ** Columns\nimport { columns } from './columns'\n// import AddQuiz from '../add'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport Flatpickr from 'react-flatpickr'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport {\n  Card,\n  //Input,\n  Row,\n  Col,\n  //Form,\n  FormGroup,\n  Label,\n  //CustomInput,\n  Spinner,\n  Button\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport {\n  // getContestsListCSV,\n  getcricketquizdata,\n  getcricketquizdownload,\n  quizfrom,\n  quizto,\n  winnerfrom,\n  winnerto,\n  contestfrom,\n  contestto\n  //getfootballcontestdownload \n} from '../../store/actions'\nconst ContestsList = () => {\n  // ** Store Vars\n  const CustomHeader = ({\n    //handleFilter,\n    //searchTerm,\n    currentPage,\n    setCurrentPage\n  }) => {\n    const store = useSelector((state) => state.rep)\n    const [picker, setPicker] = useState(store.quiz_from)\n    const [dateto, setDateto] = useState(store.quiz_to)\n  const dispatch = useDispatch()\n  const edittime = (date) => {\n    const local = new Date(date)\n    const datestring =  `${local.getFullYear()}-${(local.getMonth()) + 1}-${local.getDate()}`\n    setPicker(datestring)\n  }\n \n  const edit = (date) => {\n    const local = new Date(date)\n    const datestring =  `${local.getFullYear()}-${(local.getMonth()) + 1}-${local.getDate()}`\n    setDateto(datestring)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    setCurrentPage(1)\n    dispatch(getcricketquizdata(currentPage, picker, dateto))\n    dispatch(quizfrom(picker))\n    dispatch(quizto(dateto))\n  }\n    //curentpage\n    const download = () => {\n      dispatch(getcricketquizdownload())\n    }\n    return (\n      <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\n        <Row>\n        <Col  className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            \n            <Label className=\"mb-0\">From:</Label>&nbsp;&nbsp;\n            <Flatpickr\n                  // value={picker.from}\n                  value={store.quiz_from}\n                  id='range-picker'\n                  className='form-control'\n                  //  value={picker}\n                  //  onChange={date => setPicker(date)}\n                  onChange={date => edittime(date)}\n      \n                 />\n         &emsp;&nbsp;\n            \n            <Label className=\"mb-0\">To:</Label>&nbsp;&nbsp;   \n            <Flatpickr\n                    // value={dateto.to}\n                    value={store.quiz_to}\n                    id='range-picker'\n                    className='form-control'\n                    onChange={dat => edit(dat)}\n                 /> \n             &emsp;&nbsp;\n                  <FormGroup className=\"d-flex mb-0\">\n                <Button.Ripple\n                  className=\"mr-1\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={(e) => onSubmit(e)}\n                >\n                  Submit\n                </Button.Ripple>\n          </FormGroup>  \n          </div>\n        </Col>\n          <Col\n            xl=\"6\"\n            className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\n          >\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1\">\n           \n            </div>\n                <Button\n                color ='primary'\n                onClick ={() => download()}\n                // onClick = {getfootballcontestdownload()}\n                >\n                  Download CSV\n                </Button>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n  const store = useSelector((state) => state.rep)\n  const {cricket_quiz} = store\n  console.log(cricket_quiz)\n  \n  const [searchTerm, setSearchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const dispatch = useDispatch()\n  \n  console.log('pagination', store.cricket_quiz_perpage)\n \n  useEffect(() => {\n    if (store.isloading) {\n      <Spinner/>\n    } else {\n      setListData(store.cricket_quiz)\n    }\n  }, [store.isloading])\n\n  useEffect(() => {\n    dispatch(getcricketquizdata(currentPage, store.quiz_from, store.quiz_to))\n    dispatch(winnerfrom(\"\"))\n    dispatch(winnerto(\"\"))\n    dispatch(contestfrom(\"\"))\n    dispatch(contestto(\"\"))\n  }, [currentPage])\n\n  // ** User filter options\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n  }\n  \n  useEffect(() => {\n    if (searchTerm) {\n      const filterList = store.cricket_quiz.filter((userItem) => {\n\n        if (userItem.contest_name) {\n          return userItem.contest_name.toLowerCase().includes(searchTerm.toLowerCase())\n        }\n      })\n\n      setListData(filterList)\n      setCurrentPage(1)\n    } else {\n      setListData(store.cricket_quiz)\n    }\n  }, [searchTerm])\n\n  if (store.isloading) {\n    return (\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n        <UiLoader\n          blocking\n        />\n      </div>\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n  \n    const count = store.cricket_quiz_perpage.last_page\n      //console.log(count)\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n   \n    if (listData.length === 0 && isFiltered) {\n      return []\n    } else {\n      return listData\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          paginationPerPage\n          paginationDefaultPage={currentPage}\n          sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n             // handlePerPage={handlePerPage}\n              rowsPerPage\n              searchTerm={searchTerm}\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n    </Fragment>\n    \n  )\n}\n\nexport default ContestsList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","// ** Third Party Components\r\nimport { Fragment } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nimport './ui-loader.scss'\r\n\r\nconst UILoader = props => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className='overlay' /*eslint-disable */\r\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className='loader'>{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: 'div',\r\n  blocking: false,\r\n  loader: <Spinner color='primary' />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","import http from '../../../../../configs/httpConfig'\nimport { notifySuccessadd } from '../../../../Toast'\nexport const getAllContests = () => {\n  return async (dispatch) => {\n    await http.get('/admin_contests/list').then((response) => {\n      dispatch({\n        type: 'GET_ALL_CONTESTS',\n        data: response.data.data\n      })\n    })\n  }\n}\n\nexport const getContestsListPDF = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_pdf', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.pdf`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\nexport const getContestsListCSV = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_csv', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.csv`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\n//football\n\nexport const getcricketdatainit = () => ({\n    type: 'GET_ALL_REPORTS_INIT'\n  })\n  \nexport const getcricketcontestdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/contestReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/contestReport?page=${page}`\n        await http.get(url).then((response) => {\n        console.log(page, from, to)\n        console.log(response)\n        console.log(page)\n        dispatch({\n          type: 'GET_ALL_CONTEST_REPORTS',\n          data: response.data.data\n        })\n        console.log(response)\n      })\n    }\n  }\n\n  export const contestfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const contestto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_TO',\n        data:to\n      })\n    }\n  }\n\n  export const winnerfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const winnerto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_TO',\n        data:to\n      })\n    }\n  }\n\n  export const quizfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const quizto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_TO',\n        data:to\n      })\n    }\n  }\n  export const getcricketwinnerdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/winnerReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/winnerReport?page=${page}`\n      await http.get(url).then((response) => {\n        console.log(response)\n        dispatch({\n          type: 'GET_ALL_WINNERS_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  export const collectfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const collectto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_TO',\n        data:to\n      })\n    }\n  }\n\n  export const collectpage = (curentpage) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_PAGE',\n        data:curentpage\n      })\n    }\n  }\n  \n  export const getcricketquizdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/quizReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/quizReport?page=${page}`\n      await http.get(url).then((response) => {\n        dispatch({\n          type: 'GET_ALL_QUIZ_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  // export const getcricketcontestdownload = () => {\n  //   return async () => {\n  //     await http.get(`/cricket/reports/contestReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getcricketcontestdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/contestReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketwinnerdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/winnerReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'winnerReport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketquizdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/quizReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  // export const getcricketwinnerdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/winnerReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  // export const getcricketquizdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/quizReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getAllSeries = () => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get('/cricket/series/list').then((response) => {\n        dispatch({\n          type: 'SERIES_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data.records, \"this\")\n      })\n    }\n  }\n\n  export const getAllFixture = (id) => {\n    return async (dispatch) => {\n      console.log(id)\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/fixture/list/${id}`).then((response) => {\n        dispatch({\n          type: 'FIXTURE_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data)\n      })\n    }\n  }\n\n  export const getplayerreport = (seriesid, fixtureid) => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}`).then((response) => {\n        dispatch({\n          type: 'PLAYER_REPORT',\n          data: response.data.data\n        })\n        console.table(response.data.data)\n      })\n    }\n  }\n  export const collectseriesid = (seriesid) => {\n   \n    console.log(seriesid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_SERIESID',\n        data:seriesid\n      })\n    }\n  }\n  \n  export const collectfixtureid = (fixtureid) => {\n      console.log(fixtureid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FIXTUREID',\n        data:fixtureid\n      })\n    }\n  }\n\n//cricket/reports/playerReport?series_id=1&fixture_id=730&download=true\n  export const getcricketplayerdownload = (seriesid, fixtureid) => {\n    return async () => {\n            await http\n        .get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}&download=true`, { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'cricketplayerreport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getCricketContestadd = (id) => {\n    return (dispatch) => {\n      http\n        .post('/cricket/contest_prizes/list', id)\n        .then((response) => {\n          dispatch({\n            type: 'CRICKET_CONTEST_PRIZE_ADD',\n            data: response.data.data\n          })\n          console.log(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  export const addfile = (params) => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n      await http.post('/squadUpload', params).then((response) => {\n        notifySuccessadd(response.data.message)\n        dispatch({\n          type: 'ADD_FILE',\n          data: response.data.message\n        })\n      }).catch((e) => {\n        console.log(\"Error in Feed Post: \", e)\n        // dispatch(addPostFail())\n      })\n    }\n  }"],"sourceRoot":""}