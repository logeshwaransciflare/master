{"version":3,"sources":["views/CouponsUpload/CricketCoupons/list/Table.js","views/CouponsUpload/CricketCoupons/list/index.js"],"names":["DataTableTransaction","dispatch","useDispatch","store","useSelector","state","prizemaster","history","useHistory","MySwal","withReactContent","Swal","useState","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchValue","setSearchValue","filteredData","setFilteredData","useEffect","getcricketcoupons","console","log","get_cricket_prize","data","columns","name","minWidth","selector","sortable","cell","row","pos","from","caption","type","className","width","title","onClick","id","getprizecricketdetails","push","fire","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","result","value","deleteprizecricket","isloading","blocking","Card","CardHeader","CardTitle","tag","Row","Col","sm","Label","for","Input","onChange","e","parseInt","target","handlePerPage","bsSize","updatedData","length","filter","item","date","formatting","month","day","year","hour","minute","second","Intl","DateTimeFormat","format","Date","formatDate","transaction_time","startsWith","amount","toString","toLowerCase","balance","debit_credit","transaction_type","txn_id","includes","noHeader","pagination","paginationServer","sortIcon","size","paginationComponent","count","last_page","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","slice","dataToRender","memo","UsersList","Table"],"mappings":"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","file":"static/js/43.bc7467c0.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\nimport UiLoader from '@components/ui-loader'\nimport Swal from 'sweetalert2' \nimport withReactContent from 'sweetalert2-react-content'\n// ** Table Columns\n\n// ** Store & Actions\nimport { getcricketcoupons, getprizecricketdetails, deleteprizecricket } from '../../store/actions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown, Edit, Trash2 } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { Card, Input, Label, Row, Col, CardHeader, CardTitle } from 'reactstrap'\n\nconst DataTableTransaction = () => {\n\n  // ** Store Vars\n\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.prizemaster)\n  const history = useHistory()\n  \n  // ** States\n  const MySwal = withReactContent(Swal)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  \n  useEffect(() => {\n    dispatch(getcricketcoupons(currentPage))\n  }, [currentPage])\n  // ** Get data on mount\n  console.log(store.get_cricket_prize.data)\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n    if (value.length) {\n      updatedData = store.get_cricket_prize.data.filter(item => {\n        console.log(item)\n        const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric',  hour: 'numeric', minute: 'numeric', second: 'numeric'}) => {\n          if (!value) return value \n          return new Intl.DateTimeFormat('en-GB', formatting).format(new Date(value))         \n        }\n        const date = formatDate(item.transaction_time)\n        const startsWith =\n          item.amount?.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n          item.balance?.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n          item.debit_credit?.toLowerCase().startsWith(value.toLowerCase()) ||\n          date?.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n          item.transaction_type?.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.txn_id.toLowerCase()?.startsWith(value.toLowerCase())\n\n        const includes =\n          item.amount?.toString().toLowerCase().includes(value.toLowerCase()) ||\n          item.balance?.toString().toLowerCase().includes(value.toLowerCase()) ||\n          item.debit_credit?.toLowerCase().includes(value.toLowerCase()) ||\n          date?.toString().toLowerCase().includes(value.toLowerCase()) ||\n          item.transaction_type?.toLowerCase().includes(value.toLowerCase()) ||\n          item.txn_id?.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData(updatedData)\n    }\n  }\n\n  const editHandler = (id) => {\n    dispatch(getprizecricketdetails(id))\n    history.push(`/coupons/edit/${id}`)\n  }\n\n  const handleConfirmText = (id) => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ml-1'\n      },\n      buttonsStyling: false\n    }).then(function (result) {\n      \n     if (result.value) {\n        dispatch(deleteprizecricket(id))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Your file has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const columns = [\n    {\n      name: 'Sno',\n      minWidth: '10px',\n      selector: 's_no',\n      sortable: true,\n      cell: (row, pos) => store.get_cricket_prize.from + pos\n    }, \n    {\n      name: 'name',\n      minWidth: '20px',\n      selector: 'feed_id',\n      sortable: true,\n      cell: (row) => row.name\n    },\n      {\n    name: 'caption',\n    minWidth: '20px',\n    selector: 'feed_id',\n    sortable: true,\n    cell: (row) => row.caption\n  },\n  {\n    name: 'type',\n    minWidth: '20px',\n    selector: 'feed_id',\n    sortable: true,\n    cell: (row) => row.type\n  },\n    {\n    name: 'Active',\n    minWidth: '138px',\n    selector: 'active',\n    sortable: true,\n    cell: (row) => (\n      <div className=\"column-action\">\n        <Edit width=\"17\" className=\"cursor-pointer\" title=\"Edit Feed\" onClick={() => editHandler(row.id)} />\n        <Trash2 width=\"17\" className=\"ml-2 cursor-pointer\" title=\"Add Feed\" onClick={() => handleConfirmText(row.id)} />\n      </div>\n    )\n  }\n  ]\n  // ** Function to handle Pagination and get data\n\n  const handlePagination = page => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function to handle per page\n\n  const handlePerPage = e => {\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n\n     const count = store.get_cricket_prize.last_page\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={count}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        }\n      />\n    )\n  }\nconsole.log(store.get_cricket_prize.data)\n  // ** Table data to render\n  const dataToRender = () => {\n    if (store.get_cricket_prize.data?.length > 0) {\n      return searchValue.length ? filteredData : store.get_cricket_prize.data?.slice(0, rowsPerPage)\n    } else {\n      return []\n    }\n  }\n\n  if (store.isloading) {    \n    return (\n      <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n        <UiLoader\n          blocking\n        />\n      </div>\n    )\n  }\n  console.log(store)\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader className='border-bottom'>\n          <CardTitle tag='h4'>cricket</CardTitle>\n        </CardHeader>\n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                id='sort-select'\n                value={rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n                <option value={10}>10</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>entries</Label>\n            </div>\n          </Col>\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          className='react-dataTable'\n          columns={columns}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default memo(DataTableTransaction)\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n"],"sourceRoot":""}