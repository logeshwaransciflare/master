{"version":3,"sources":["views/corporate/Fixture/playerreport/list/column.js","views/corporate/Fixture/playerreport/list/Table.js","views/corporate/Fixture/playerreport/index.js","configs/httpConfig.js","views/Toast.js","views/corporate/Fixture/store/actions/index.js"],"names":["columns","name","minWidth","selector","sortable","cell","row","id","fixture","fixture_sh","team","team_sn","p_name","player_type","total_score","run_bonus","runs_scored","fours_hit","sixes_hit","wicket_bonus","wickets_taken","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","dispatch","useDispatch","store","useSelector","state","rep","console","log","seriesid","className","Row","Col","xl","Label","for","CustomInput","type","value","onChange","style","width","padding","backgroundPosition","Input","e","target","Button","color","onClick","getcricketplayerdownload","fixtureid","UsersList","useState","setSearchTerm","listData","setListData","currentPage","setCurrentPage","setRowsPerPage","useEffect","player_reports","length","filterList","records","filter","userItem","newval","full_name","toLowerCase","startsWith","email","includes","Card","noHeader","pagination","subHeader","responsive","highlightOnHover","pointerOnHover","paginationServer","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","count","Number","Math","ceil","record_count","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","data","filters","q","isFiltered","Object","keys","some","k","slice","dataToRender","subHeaderComponent","parseInt","currentTarget","val","SelectReact","sid","setSid","fid","setFid","table","setTable","refresh","setRefresh","serilist","setSerilist","fixlist","setFixlist","series","series_name","map","ser","label","fixture_name","fix","filterid","s","filterid2","f","getAllSeries","getAllFixture","CardHeader","CardTitle","tag","isloading","CardBody","href","rel","md","sm","serieslist","theme","selectThemeColors","classNamePrefix","options","isClearable","fixturelist","Ripple","preventDefault","getplayerreport","collectseriesid","collectfixtureid","submit","Table","token","localStorage","getItem","instance","axios","create","baseURL","headers","Authorization","interceptors","request","use","config","Successlogin","message","size","icon","Successadd","Successedit","Successdelete","ErrorToast","WarningToast","role","notifySuccesslogin","toast","success","hideProgressBar","notifySuccessadd","notifySuccessedit","notifySuccessdelete","notifyError","error","notifyWarning","warning","http","get","then","response","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","addfile","params","post","catch","getcricketTotal"],"mappings":"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","file":"static/js/211.c7a2f143.chunk.js","sourcesContent":["\n// const statusObj = {\n//   0: 'light-warning',\n//   1: 'light-success'\n// }\n\nexport const columns = [\n  {\n    name: 'ID',\n    minWidth: '20px',\n    selector: 'id',\n    sortable: true,\n    cell: (row) => row.id \n  },\n  {\n    name: 'Fixture Short Name',\n    minWidth: '160px',\n    selector: 'fixture_sh',\n    sortable: true,\n    cell: (row) => row?.fixture?.fixture_sh\n  },\n  {\n    name: 'Team SN',\n    minWidth: '160px',\n    selector: 'team_sn',\n    sortable: true,\n    cell: (row) => row.team?.team_sn\n  },\n  {\n    name: 'Player_name',\n    minWidth: '160px',\n    selector: 'p_name',\n    sortable: true,\n    cell: (row) => row.p_name\n  },\n\n  // {\n  //   name: 'Joined on',\n  //   minWidth: '160px',\n  //   selector: 'joined_on',\n  //   sortable: true,\n  //   cell: (row) => row.joined_on\n  // },\n  {\n    name: 'Player Type',\n    minWidth: '160px',\n    selector: 'player_type',\n    sortable: true,\n    cell: (row) => row.player_type\n  },\n  {\n    name: 'Total Score',\n    minWidth: '160px',\n    selector: 'total_score',\n    sortable: true,\n    cell: (row) => row.total_score\n  },\n  {\n    name: 'Run Bonus',\n    minWidth: '160px',\n    selector: 'run_bonus',\n    sortable: true,\n    cell: (row) => row.run_bonus\n  },\n  {\n    name: 'Run Scored',\n    minWidth: '160px',\n    selector: 'runs_scored',\n    sortable: true,\n    cell: (row) => row.runs_scored\n  },\n  {\n    name: \"Four's hit\",\n    minWidth: '160px',\n    selector: 'fours_hit',\n    sortable: true,\n    cell: (row) => row.fours_hit\n  },\n  {\n    name: \"Six's hit\",\n    minWidth: '160px',\n    selector: 'sixes_hit',\n    sortable: true,\n    cell: (row) => row.sixes_hit\n  },\n  {\n    name: 'Wicket Bonus',\n    minWidth: '160px',\n    selector: 'wicket_bonus',\n    sortable: true,\n    cell: (row) => row.wicket_bonus\n  },\n  {\n    name: 'Wicket Taken',\n    minWidth: '160px',\n    selector: 'wickets_taken',\n    sortable: true,\n    cell: (row) => row.wickets_taken\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Invoice List Sidebar\n\n// ** Columns\nimport { columns } from './column'\n// import AddQuiz from '../add'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\n// import { useHistory } from 'react-router-dom'\n// import UiLoader from '@components/ui-loader'\n// ** Third Party Components\nimport {getcricketplayerdownload} from \"../../store/actions\"\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport {\n  Card,\n  Input,\n  Row,\n  Col,\n  Label,\n  CustomInput,\n  Button\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Table Header\nconst CustomHeader = ({\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm\n}) => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.rep)\n  console.log(store.seriesid)\n  const download = () => {\n    dispatch(getcricketplayerdownload(store.seriesid, store.fixtureid)) //filterid[0]?.id, filterid2[0]?.id\n    console.log(store.seriesid)\n  }\n\n  return (\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <Label for=\"rows-per-page\">Show</Label>\n            <CustomInput\n              className=\"form-control mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{\n                width: '5rem',\n                padding: '0 0.8rem',\n                backgroundPosition:\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n              }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </CustomInput>\n            <Label for=\"rows-per-page\">Entries</Label>\n          </div>\n        </Col>\n        <Col\n          xl=\"6\"\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\n        >\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1\">\n            <Label className=\"mb-0\" for=\"search-invoice\">\n              Search:\n            </Label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ml-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n          <Button\n                color ='primary'\n                onClick ={() => download()}\n                // onClick = {getfootballcontestdownload()}\n                >\n                  Download CSV\n                </Button>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const store = useSelector((state) => state.rep)\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [listData, setListData] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  // const [sidebarOpen, setSidebarOpen] = useState(false)\n  // const history = useHistory()\n\n  useEffect(() => {\n    if (store.player_reports) {\n      setListData(store.player_reports)\n      console.log(store.player_reports.length)\n    }\n  }, [store.player_reports])\n  console.log(store)\n  // ** User filter options\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    setRowsPerPage(value)\n    setCurrentPage(1)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n  }\n\n  useEffect(() => {\n    if (searchTerm) {\n\n      const filterList = store.player_reports.records.filter((userItem) => {\n        const newval =\n                userItem.full_name.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n                // (userItem && userItem.mobile.toString().toLowerCase().startwith(searchTerm.toString().toLowerCase())) ||\n                userItem.email.toLowerCase().startsWith(searchTerm.toLowerCase()) \n\n        const includes =\n        userItem.full_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        userItem.email.toLowerCase().includes(searchTerm.toLowerCase()) \n        // userItem.mobile.toString().toLowerCase().includes(searchTerm.toLowerCase()) \n        \n        if (newval) {\n          return newval\n          // return userItem.full_name.toLowerCase().includes(searchTerm.toLowerCase())\n        } else if (!newval && includes) {\n          return includes\n        } else return null\n      })\n\n      setListData(filterList)\n      setCurrentPage(1)\n    } \n  }, [searchTerm])\n\n  \n//   if (store.loadAllUsers) {\n//     return (\n//       <div className=\"position-absolute d-flex justify-content-center align-items-center w-100 position-top-0 position-bottom-0 position-left-0 position-right-0 h-100\">\n//         <UiLoader\n//           blocking\n//         />\n//       </div>\n//     )\n//   }\n\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.player_reports.record_count / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={\n          'pagination react-paginate justify-content-end my-2 pr-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    // if (listData.length > 0) {\n    //   return listData\n    // } else\n    if (listData.length === 0 && isFiltered) {\n      return []\n    } else if (listData.length) {\n      return listData.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          highlightOnHover\n          pointerOnHover\n          paginationServer\n          columns={columns}\n          paginationPerPage={rowsPerPage}\n          // onRowClicked={(data) => {\n          //   history.push(`users/${data.s_no}`)\n          // }}\n          sortIcon={<ChevronDown />}\n          paginationDefaultPage={currentPage}\n          className=\"react-dataTable\"\n          paginationComponent={CustomPagination}          \n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              handlePerPage={handlePerPage}\n              rowsPerPage={rowsPerPage}\n              searchTerm={searchTerm}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","import { useEffect, useState } from 'react'\nimport {useDispatch, useSelector} from \"react-redux\"\nimport Select from 'react-select'\nimport { selectThemeColors } from '@utils'\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Label, Button} from 'reactstrap'\nimport {getAllSeries, getAllFixture, getplayerreport, collectseriesid, collectfixtureid} from \"../store/actions\"\nimport Table from  \"./list/Table\"\nconst SelectReact = () => {\n    const store = useSelector((state) => state.rep)\n    const [sid, setSid] = useState(0)\n    const [fid, setFid] = useState(0)\n    const [table, setTable] = useState(false)\n    const [refresh, setRefresh] = useState(false)\n    // const [id, setId] = useState('')\n    const [serilist, setSerilist] = useState(\"\")\n    // const [change, setChange] = useState(false)\n    const [fixlist, setFixlist] = useState(\"\")\n    const dispatch = useDispatch()\n\n    // let options = this.state.cities.map(function (city) {\n    //   return { value: city.countryCode, label: city.name };\n    // })   \n    // const colourOptions = [{ value: store.series_name.map(s => s.series_name), label: store.series_name.map(s => s.series_name) }]\n    const series = store.series_name.map(function (ser) {\n      return { value: ser.series_name, label: ser.series_name }\n    })   \n   \n    const fixture = store.fixture_name.map(function (fix) {\n      return { value: fix.fixture_name, label: fix.fixture_name }\n    })  \n\n    // const fixture = store.fixture_name.map(function (fix) {\n    //   return { value: fix.fixture_name, label: fix.fixture_name }\n    // })\n\n    const filterid = store.series_name.filter(s => s.series_name === serilist)\n    const filterid2 = store.fixture_name.filter(f => f.fixture_name === fixlist)\n    console.log(store.fixture_name)\n\n    const submit = (e) => {\n      e.preventDefault()\n      dispatch(getplayerreport(filterid[0]?.id, filterid2[0]?.id))\n      dispatch(collectseriesid(filterid[0]?.id))\n      dispatch(collectfixtureid(filterid2[0]?.id))\n      console.log(filterid[0]?.id, filterid2[0]?.id)\n      setTable(true)\n    }\n    \n    console.log(store.player_reports)\n    // onChange={(e) => setPrizeform({...prizeform, category: e.value})}\n\n    const serieslist = (e) => {\n      setSerilist(e.value)\n      setRefresh(true)\n      console.log('change')\n      // dispatch(getAllFixture(filterid[0]?.id))\n      setSid(filterid[0]?.id)\n      // setChange(true)\n      console.log(filterid[0]?.id)\n      // return store.series_name.filter(s => s.series_name === list)\n    }\n\n    const fixturelist = (e) => {\n      setFixlist(e.value)\n      setRefresh(false)\n      setFid(filterid2[0]?.id)\n      console.log(filterid2[0]?.id)\n      console.log(fid)\n      // return store.series_name.filter(s => s.series_name === list)\n    }\n\n    console.log(filterid[0]?.id)\n    console.log(filterid2[0]?.id)\n      // setId(list.filter(l => l === store.series_name.series_name))    }\n\n    useEffect(() => {\n       dispatch(getAllSeries())\n        console.log(store)\n      }, [])\n      \n      useEffect(() => {\n      dispatch(getAllFixture(filterid[0]?.id))\n      console.log(\"now\")\n      console.log(store.fixture_name)\n      }, [sid])\n\n    console.log(store.fixture_name)\n\n    // useEffect(() => {\n    //     if (Object.keys(store.series_name).length) {\n    //         setList(store.series_name)\n    //         console.log(list)\n    //     } else {\n    //         <Spinner/>  \n    //     }\n    //   }, [store.isloading])\n  //// \"hello\" : \"nop\"\n   //here\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>{store.isloading }</CardTitle> \n      </CardHeader>\n      <CardBody>\n        <p>\n          <a className='my-50' target='_blank' href='https://react-select.com/home' rel='noopener noreferrer'>\n           \n          </a>\n        </p>\n        <Row>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>series</Label>\n            <Select\n              onChange={(e) => serieslist(e)}\n              theme={selectThemeColors}\n              // isMulti\n              className='react-select'\n              classNamePrefix='select'\n              // defaultValue={series[0]}\n              options={series}\n              isClearable={true}\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>fixture</Label>\n            <Select\n              onChange={(e) => fixturelist(e)}\n              theme={selectThemeColors}\n              className='react-select'\n              value={refresh ? \" \" : fid} \n              classNamePrefix='select'\n              options={fixture ? fixture  : \"\"}\n              isClearable={true}\n            />\n          </Col>\n        </Row>\n        <Button.Ripple \n        color='primary'\n        onClick={(e) => submit(e)}\n         >submit</Button.Ripple>\n         { table ? <Table/> : \"\"\n}\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectReact\n\n","import axios from 'axios'\n//import { Redirect } from 'react-router-dom'\nconst token = localStorage.getItem('TOKEN')\nconst instance = axios.create({\n  baseURL: 'https://fantasyapi.sciflaredev.com/admin/api',\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: token\n  }\n})\ninstance.interceptors.request.use((config) => {\n  //const token = \"Bearer uchhE4e7lVxyFD68NdBxcylhSX108K5KkkGDLxWHluyMTYHd0CEWt9Th5c9OZ3XWlKO0hqtmQaTEYOgN4iXNfwZH7we462od18qD\"\n  const token = localStorage.getItem('TOKEN')\n  return {\n    ...config,\n    headers: {\n      'Content-type': 'application/json',\n      Authorization:\n        `${token}`\n    }\n  }\n})\n\nexport default instance ","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>12 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst Successlogin = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\n // const SuccessToast = () => (\n  //   <Fragment>\n  //     <div className='toastify-header'>\n  //       <div className='title-wrapper'>\n  //         <Avatar size='sm' color='success' icon={<Check size={12} />} />\n  //         <h6 className='toast-title'>Success!</h6>\n  //       </div>\n  //       <small className='text-muted'>11 Min Ago</small>\n  //     </div>\n  //     <div className='toastify-body'>\n  //       <span role='img' aria-label='toast-text'>\n  //         Successfully loged in\n  //       </span>\n  //     </div>\n  //   </Fragment>\n  // )\n\n\nconst Successadd = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successedit = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Successdelete = ({message}) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>{message}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      {/* <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span> */}\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = ({message}) => (\n  <Fragment>\n  <div className='toastify-header'>\n    <div className='title-wrapper'>\n      <Avatar size='sm' color='danger' icon={<X size={12} />} />\n      <h6 className='toast-title'>{message}</h6>\n    </div>\n  </div>\n  <div className='toastify-body'>\n    {/* <span role='img' aria-label='toast-text'>\n      👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n    </span> */}\n  </div>\n</Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Text Content Empty\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n       \n      </span>\n    </div>\n  </Fragment>\n)\n\nexport const notifySuccesslogin = (message) => toast.success(<Successlogin message={message} />, { hideProgressBar: true })\nexport const notifySuccessadd = (message) => toast.success(<Successadd message={message} />, { hideProgressBar: true })\nexport const notifySuccessedit = (message) => toast.success(<Successedit message={message} />, { hideProgressBar: true })\nexport const notifySuccessdelete = (message) => toast.success(<Successdelete message={message} />, { hideProgressBar: true })\nexport const notifyError = (message) => toast.error(<ErrorToast message={message}/>, { hideProgressBar: true })\nexport const notifyWarning = () => toast.warning(<WarningToast />, { hideProgressBar: true })\nexport const ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button.Ripple color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={notifyError} outline>\n            Error\n          </Button.Ripple>\n          <Button.Ripple color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button.Ripple>\n          <Button.Ripple color='info' onClick={notifyInfo} outline>\n            Info\n          </Button.Ripple>\n          <Button.Ripple color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button.Ripple>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n","import http from '../../../../../configs/httpConfig'\nimport {notifySuccessadd, notifyError} from \"../../../../Toast\"\nexport const getAllContests = () => {\n  return async (dispatch) => {\n    await http.get('/admin_contests/list').then((response) => {\n      dispatch({\n        type: 'GET_ALL_CONTESTS',\n        data: response.data.data\n      })\n    })\n  }\n}\n\nexport const getContestsListPDF = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_pdf', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.pdf`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\nexport const getContestsListCSV = () => {\n  return async () => {\n    await http\n      .get('/admin_contests/export_csv', { responseType: 'blob' })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', `contests_${new Date().valueOf()}.csv`) //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      })\n  }\n}\n\n//football\n\nexport const getcricketdatainit = () => ({\n    type: 'GET_ALL_REPORTS_INIT'\n  })\n  \nexport const getcricketcontestdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/contestReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/contestReport?page=${page}`\n        await http.get(url).then((response) => {\n        console.log(page, from, to)\n        console.log(response)\n        console.log(page)\n        dispatch({\n          type: 'GET_ALL_CONTEST_REPORTS',\n          data: response.data.data\n        })\n        console.log(response)\n      })\n    }\n  }\n\n  export const contestfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const contestto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_CONTEST_TO',\n        data:to\n      })\n    }\n  }\n\n  export const winnerfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const winnerto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_WINNER_TO',\n        data:to\n      })\n    }\n  }\n\n  export const quizfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const quizto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'CRIC_QUIZ_TO',\n        data:to\n      })\n    }\n  }\n\n  export const getcricketwinnerdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/winnerReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/winnerReport?page=${page}`\n      await http.get(url).then((response) => {\n        console.log(response)\n        dispatch({\n          type: 'GET_ALL_WINNERS_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  export const collectfrom = (from) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FROM',\n        data:from\n      })\n    }\n  }\n  \n  export const collectto = (to) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_TO',\n        data:to\n      })\n    }\n  }\n\n  export const collectpage = (curentpage) => {\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_PAGE',\n        data:curentpage\n      })\n    }\n  }\n  \n  export const getcricketquizdata = (page, from = '', to = \"\") => {\n    return async (dispatch) => {\n        dispatch(getcricketdatainit())\n        const url = (from && to) ? `/cricket/reports/quizReport?from=${from}&to=${to}&page=${page}` : `/cricket/reports/quizReport?page=${page}`\n      await http.get(url).then((response) => {\n        dispatch({\n          type: 'GET_ALL_QUIZ_REPORTS',\n          data: response.data.data\n        })\n      })\n    }\n  }\n\n  // export const getcricketcontestdownload = () => {\n  //   return async () => {\n  //     await http.get(`/cricket/reports/contestReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getcricketcontestdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/contestReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketwinnerdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/winnerReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'winnerReport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getcricketquizdownload = () => {\n    return async () => {\n      await http\n        .get('/cricket/reports/quizReport?download=true', { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'file.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  // export const getcricketwinnerdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/winnerReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  // export const getcricketquizdownload = () => {\n  //   return async () => {\n  //     await http.get(`/football/reports/quizReport?download=true`).then((response) => {\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n  export const getAllSeries = () => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get('/cricket/series/list').then((response) => {\n        dispatch({\n          type: 'SERIES_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data.records, \"this\")\n      })\n    }\n  }\n\n  export const getAllFixture = (id) => {\n    return async (dispatch) => {\n      console.log(id)\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/fixture/list/${id}`).then((response) => {\n        dispatch({\n          type: 'FIXTURE_NAME',\n          data: response.data.data\n        })\n        console.log(response.data.data)\n      })\n    }\n  }\n\n  export const getplayerreport = (seriesid, fixtureid) => {\n    return async (dispatch) => {\n      dispatch(getcricketdatainit())\n      await http.get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}`).then((response) => {\n        dispatch({\n          type: 'PLAYER_REPORT',\n          data: response.data.data\n        })\n        console.table(response.data.data)\n      })\n    }\n  }\n\n  export const collectseriesid = (seriesid) => {\n   \n    console.log(seriesid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_SERIESID',\n        data:seriesid\n      })\n    }\n  }\n  \n  export const collectfixtureid = (fixtureid) => {\n      console.log(fixtureid)\n    return (dispatch) => {\n      dispatch({\n        type:'COLLECT_FIXTUREID',\n        data:fixtureid\n      })\n    }\n  }\n\n//cricket/reports/playerReport?series_id=1&fixture_id=730&download=true\n  export const getcricketplayerdownload = (seriesid, fixtureid) => {\n    return async () => {\n            await http\n        .get(`/cricket/reports/playerReport?series_id=${seriesid}&fixture_id=${fixtureid}&download=true`, { responseType: 'blob' })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'cricketplayerreport.csv') //or any other extension\n          document.body.appendChild(link)\n          link.click()\n        })\n    }\n  }\n\n  export const getCricketContestadd = (id) => {\n    return (dispatch) => {\n      http\n        .post('/cricket/contest_prizes/list', id)\n        .then((response) => {\n          dispatch({\n            type: 'CRICKET_CONTEST_PRIZE_ADD',\n            data: response.data.data\n          })\n          console.log(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  export const addfile = (params) => {\n    return async (dispatch) => {\n      // dispatch(addPostInit())\n      await http.post('/fixtureUpload', params).then((response) => {\n        notifySuccessadd(response.data.message)\n        dispatch({\n          type: 'ADD_FILE',\n          data: response.data.message\n        })\n      }).catch((e) => {\n        notifyError(e.response.data.message)\n        // dispatch(addPostFail())\n      })\n    }\n  }\n  \n  export const getcricketTotal = (page) => {\n    console.log(page)\n    return async (dispatch) => {\n      // dispatch(getteamsdatainit())\n      await http.get(`/cricket/series/list?page=${page}`).then((response) => {\n        dispatch({\n          type: 'CRICKET_SERIES_TOTAL',\n          data: response.data\n        })\n        console.log(response.data, \"this\")\n      })\n    }\n  }"],"sourceRoot":""}